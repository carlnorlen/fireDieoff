geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = rx.pixel.data %>%
filter((treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(treatment == 'Control' & is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>% # & stratlayer %in% strat.list & stratlayer %in% strat.list
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(treatment == 'Control' & is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylim(20, 55) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p6
p9 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter(!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2 ) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(count = n()), mapping = aes(x = date, y = count, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Do the Formating
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Fire Years') +
scale_linetype(name = 'Fire Years') +
scale_fill_brewer(palette = 'Greens') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_wrap(. ~ treatment) +
ylab('Count') + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p9
p10 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter(!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(stand.age.mean = mean(stand.age)), mapping = aes(x = date, y = stand.age.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Do the Formating
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Fire Years') +
scale_linetype(name = 'Fire Years') +
scale_fill_brewer(palette = 'Greens') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x =element_text(size = 10), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_wrap(. ~ treatment) +
ylab('Stand Age') + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p10
f4 <- ggarrange(p9, p10, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f4
p9 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter(!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2 & Tree_Cover > 0) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(count = n()), mapping = aes(x = date, y = count, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Do the Formating
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Fire Years') +
scale_linetype(name = 'Fire Years') +
scale_fill_brewer(palette = 'Greens') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_wrap(. ~ treatment) +
ylab('Count') + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p9
p6 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>% # & stratlayer %in% strat.list & stratlayer %in% strat.list
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(treatment == 'Control' & is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylim(20, 55) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p6
p6 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylim(20, 55) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p6
p6 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylim(20, 60) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p6
p6 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylim(20, 58) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p6
f2 <- ggarrange(p5, p6, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f2
#Save the data
ggsave(filename = 'Fig3a_frap_fire_dieoff_tree_cover_stand_age_time_series_.png', height=12, width= 14, units = 'cm', dpi=900)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/final_figures')
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = rx.pixel.data %>%
filter((Tree_Cover >= 0 & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980) | (Tree_Cover >= 0 & is.na(fire.year))) %>% # &
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>% #Filter by the tree types
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, fire.year.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2013, 2014)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = Tree_Cover, group = Tree_Cover), binwidth = c(250, 0.1)) +
theme_bw() +
scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(.~ fire.year.bin) +
ylab('Latitude')
p1
# pixel.data %>% summary()
p2 <- ggplot() +
#Data Summary
geom_bin2d(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980) | (!is.na(Tree_Cover) & is.na(fire.year))) %>% # &
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>% #Filter by the tree types
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, fire.year.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2017, 2018)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = dTree, group = dTree), binwidth = c(250, 0.1)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-10, 5), midpoint = 0, na.value = 'transparent') +  #
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(.~ fire.year.bin) +
ylab('Latitude')
p2
#ADS die-off
p3 <- ggplot() +
geom_bin2d(data = rx.pixel.data %>%
filter((treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & !is.na(tpa_max)) | (is.na(fire.year) & !is.na(tpa_max))) %>% # &
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>% #Filter by the tree types
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, fire.year.bin) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017, 2017, 2018, 2019)], na.rm = TRUE), SPI48 = SPI48[vi.year == 2015], elevation = elevation[vi.year == 2015],
latitude = latitude[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(x = latitude, y = elevation, fill = tpa_max, group = tpa_max), binwidth = c(250, 0.1)) +
scale_fill_gradient(name = "Die-off \n(trees per hectare)", low = "white", high = "red", na.value = 'transparent') +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), legend.position = "right",
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(. ~ fire.year.bin) +
ylab('Latitude')
p3
p4<- ggplot() +
#Data Summary
geom_bin2d(data = rx.pixel.data %>%
filter((Tree_Cover >= 0 & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980) | (Tree_Cover >= 0 & is.na(fire.year))) %>% # &
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>% #Filter by the tree types
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, fire.year.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2018, 2019)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], count = sum(elevation[vi.year == 2015]), n = n(), SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation), binwidth = c(250, 0.1)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_fill_gradient2(name = "Die-off (% Tree Cover)", limits = c(-50, 20), midpoint = 0, low = "red", mid = "white", high = "blue", na.value = 'transparent') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(.~ fire.year.bin) +
ylab('Latitude') + xlab('Elevation (m)')
p4
f1 <- ggarrange(p1, p2, p4, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f1
#Save the data
ggsave(filename = 'Fig2a_rx_fire_dieoff_tree_cover_fireyear_geographic_distribution.png', height=24, width= 14, units = 'cm', dpi=900)
#Figure 2
#Figure of Dead Trees per acre separated by fire years with time series
p5 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(tpa_max) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (!is.na(tpa_max) & treatment == 'Control' & is.na(fire.year))) %>% # & stratlayer %in% strat.list  & stratlayer %in% strat.list
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()), # %>%
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(tpa_max) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (!is.na(tpa_max) & treatment == 'Control' & is.na(fire.year))) %>% # & stratlayer %in% strat.list  & stratlayer %in% strat.list
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max),
tpa_max.sd = sd(tpa_max), tpa_max.n = n()), #%>%
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(ymin=tpa_max.mean - 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
ymax=tpa_max.mean + 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p5
# pixel.data
# #Figure out how to do rolling calculation of dTree
# dTree.test <- pixel.data %>%
#   dplyr::select(fire.year.bin, system.index, date, Tree_Cover)
# # filter((treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (treatment == 'Control' & is.na(fire.year))) %>% # &
# # filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# # elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# # if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
# # group_by(system.index, fire.year.bin) %>%
# mutate(Lag = lag(zoo::rollapply(L_ID == 1, 6, any, fill = NA, align = 'right')))
# dTree.test
#Create the
p6 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 & !is.na(Tree_Cover) & Tree_Cover > 0) |
(is.na(fire.year)& !is.na(Tree_Cover) & Tree_Cover > 0)) %>%
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
filter(if_else(fire.year.bin == '1980-2010', Tree_Cover.n >= 550, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylim(20, 58) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p6
f2 <- ggarrange(p5, p6, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f2
#Save the data
ggsave(filename = 'Fig3b_frap_fire_dieoff_tree_cover_stand_age_time_series_.png', height=12, width= 14, units = 'cm', dpi=900)
p3 <- ggplot() +
geom_bin2d(data = rx.pixel.data %>%
filter((treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & !is.na(tpa_max)) | (is.na(fire.year) & !is.na(tpa_max))) %>% # &
filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>% #Filter by the tree types
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, fire.year.bin) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017, 2017, 2018, 2019)], na.rm = TRUE), SPI48 = SPI48[vi.year == 2015], elevation = elevation[vi.year == 2015],
latitude = latitude[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = tpa_max, group = tpa_max), binwidth = c(250, 0.1)) +
scale_fill_gradient(name = "Die-off \n(trees per hectare)", low = "white", high = "red", na.value = 'transparent') +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), legend.position = "right",
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(. ~ fire.year.bin) +
ylab('Latitude')
p3
