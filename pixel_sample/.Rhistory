# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, fill = "Tree"), alpha = 0.3) +
#Create an Herb cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Herb Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover),
Herb_Cover.sd = sd(Herb_Cover), Herb_Cover.n = n()),
mapping = aes(ymin=Herb_Cover.mean - 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
ymax=Herb_Cover.mean + 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
x = stand.age, fill = "Herb"), alpha = 0.3) +
#Create a Bare cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
#Bare Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover),
Bare_Cover.sd = sd(Bare_Cover), Bare_Cover.n = n()),
mapping = aes(ymin=Bare_Cover.mean - 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
ymax=Bare_Cover.mean + 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
x = stand.age, fill = "Bare"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Cover (%)')) + xlab('Years Since Fire')
p2
p2 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire perimeter and fier year by pixel match
group_by(stand.age, treatment ) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% #& #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover),
Shrub_Cover.sd = sd(Shrub_Cover), Shrub_Cover.n = n()),
mapping = aes(ymin=Shrub_Cover.mean - 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
ymax=Shrub_Cover.mean + 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
x = stand.age, fill = "Shrub"), alpha = 0.3) +
#Create a Tree Cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, fill = "Tree"), alpha = 0.3) +
#Create an Herb cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Herb Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover),
Herb_Cover.sd = sd(Herb_Cover), Herb_Cover.n = n()),
mapping = aes(ymin=Herb_Cover.mean - 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
ymax=Herb_Cover.mean + 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
x = stand.age, fill = "Herb"), alpha = 0.3) +
#Create a Bare cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
#Bare Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1970 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover),
Bare_Cover.sd = sd(Bare_Cover), Bare_Cover.n = n()),
mapping = aes(ymin=Bare_Cover.mean - 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
ymax=Bare_Cover.mean + 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
x = stand.age, fill = "Bare"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Cover (%)')) + xlab('Years Since Fire')
p2
p2 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire perimeter and fier year by pixel match
group_by(stand.age, treatment ) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% #& #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover),
Shrub_Cover.sd = sd(Shrub_Cover), Shrub_Cover.n = n()),
mapping = aes(ymin=Shrub_Cover.mean - 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
ymax=Shrub_Cover.mean + 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
x = stand.age, fill = "Shrub"), alpha = 0.3) +
#Create a Tree Cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, fill = "Tree"), alpha = 0.3) +
#Create an Herb cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Herb Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover),
Herb_Cover.sd = sd(Herb_Cover), Herb_Cover.n = n()),
mapping = aes(ymin=Herb_Cover.mean - 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
ymax=Herb_Cover.mean + 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
x = stand.age, fill = "Herb"), alpha = 0.3) +
#Create a Bare cover line
geom_line(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
#Bare Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter(stand.age >= -10 & stand.age <= 30 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year >= 1980 & fire.year <= 2010) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover),
Bare_Cover.sd = sd(Bare_Cover), Bare_Cover.n = n()),
mapping = aes(ymin=Bare_Cover.mean - 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
ymax=Bare_Cover.mean + 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
x = stand.age, fill = "Bare"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Cover (%)')) + xlab('Years Since Fire')
p2
#Save the data
ggsave(filename = 'Fig90_veg_cover_stand_age_10pt_300m_frap_perimeter.png', height=18, width= 20, units = 'cm', dpi=900)
p9 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter(!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2 ) %>% # &
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(count = n()), mapping = aes(x = date, y = count, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Do the Formating
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Fire Years') +
scale_linetype(name = 'Fire Years') +
scale_fill_brewer(palette = 'Greens') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_wrap(. ~ treatment) +
ylab('Count') + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p9
p10 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter(!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) %>% # &
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(stand.age.mean = mean(stand.age)), mapping = aes(x = date, y = stand.age.mean, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Do the Formating
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Fire Years') +
scale_linetype(name = 'Fire Years') +
scale_fill_brewer(palette = 'Greens') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x =element_text(size = 10), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_wrap(. ~ treatment) +
ylab('Stand Age') + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p10
f4 <- ggarrange(p9, p10, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f4
#
ggsave(filename = 'Fig91_data_check_time_series_perimeter_10pt_300m.png', height=16, width= 16, units = 'cm', dpi=900)
p3 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(tpa_max) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2 ) | (!is.na(tpa_max) & treatment == 'Control' & is.na(fire.year))) %>% # &
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()), # %>%
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.mean),
size = 1
) +
#Dead Trees 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(tpa_max) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(tpa_max) & treatment == 'Control' & is.na(fire.year))) %>% # &
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max),
tpa_max.sd = sd(tpa_max), tpa_max.n = n()), #%>%
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(ymin=tpa_max.mean - 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
ymax=tpa_max.mean + 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
x = date), alpha = 0.3) +
#Do the Formating
# scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p3
#
# test <- rx.pixel.data %>%
#   filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
#   # elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
#   # if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#   group_by(date, fire.year.bin) %>%
#   summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()) %>%
#   filter(case_when(fire.year.bin == '2001-2010' ~ count >= 120, fire.year.bin == '1991-2000' ~ count >= 50, fire.year.bin == '1981-1990' ~ count >= 50,
#                    fire.year.bin == '1971-1980' ~ count >= 0, fire.year.bin == 'No Fire' ~ count >= 0))
#Create the
p4 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 120)),
mapping = aes(x = date, y = Tree_Cover.mean),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | ( !is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 120)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(count)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(count)),
x = date), alpha = 0.3) +
#Do the Formating
# scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ fire.year.bin) + #ylim(20, 50) +
ylab(expression('Tree Cover (%)')) + xlab('Year')
p4
f2 <- ggarrange(p3, p4, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f2
p4 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 50, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | ( !is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 50, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(count)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(count)),
x = date), alpha = 0.3) +
#Do the Formating
# scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ fire.year.bin) + #ylim(20, 50) +
ylab(expression('Tree Cover (%)')) + xlab('Year')
p4
p4 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 1000, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | ( !is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 1000, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(count)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(count)),
x = date), alpha = 0.3) +
#Do the Formating
# scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ fire.year.bin) + #ylim(20, 50) +
ylab(expression('Tree Cover (%)')) + xlab('Year')
p4
p4 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 1200, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | ( !is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 1200, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(count)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(count)),
x = date), alpha = 0.3) +
#Do the Formating
# scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ fire.year.bin) + #ylim(20, 50) +
ylab(expression('Tree Cover (%)')) + xlab('Year')
p4
p4 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | (!is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 1300, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = rx.pixel.data %>%
filter((!is.na(Tree_Cover) & treatment == 'Disturb' & fire.year <= 2010 & fire.year >= 1980 & stand.age > 2) | ( !is.na(Tree_Cover) & treatment == 'Control' & is.na(fire.year))) %>% # &
group_by(date, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), count = n()) %>%
filter(case_when(fire.year.bin == '1980-2010' ~ count >= 1300, fire.year.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(count)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(count)),
x = date), alpha = 0.3) +
#Do the Formating
# scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ fire.year.bin) + #ylim(20, 50) +
ylab(expression('Tree Cover (%)')) + xlab('Year')
p4
f2 <- ggarrange(p3, p4, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f2
#Save the data
ggsave(filename = 'Fig92_dieoff_tree_cover_stand_age_time_series_frap_perimeter_10pt_sample_300m.png', height=12, width= 14, units = 'cm', dpi=900)
