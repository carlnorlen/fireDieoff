bin >= 2001 & bin <= 2010 ~ '2001-2010',
bin >= 2011 & bin <= 2020 ~'2011-2018')) # end function
#Update this to be a stand age bin, calculated for fire year relative to 2015
pixel.data <- pixel.data %>% mutate(stand.age.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
bin >= 1921 & bin <= 1930 ~ '85-94',
bin >= 1931 & bin <= 1940 ~ '75-84',
bin >= 1941 & bin <= 1950 ~ '65-74',
bin >= 1951 & bin <= 1960 ~ '55-64',
bin >= 1961 & bin <= 1970 ~ '45-54',
bin >= 1971 & bin <= 1980 ~ '35-44',
bin >= 1981 & bin <= 1990 ~ '25-34',
bin >= 1991 & bin <= 2000 ~ '15-24',
bin >= 2001 & bin <= 2010 ~ '5-14',
bin >= 2011 & bin <= 2020 ~'0-4'))
summary(pixel.data)
# pixel.data$dNDMI <- group_by
# pixel.data
#Make the bin lables in the correct order
pixel.data$elevation.control = with(pixel.data, factor(elevation.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
pixel.data$temp.control = with(pixel.data, factor(temp.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
pixel.data$precip.control = with(pixel.data, factor(precip.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
#Make the years bin lables in the correct order
pixel.data$age.bin = with(pixel.data, factor(age.bin, levels = c('-33-0','1-10', '11-20', '21-30', '31-40', '41-50', '51-60', '61-70','71-80', '81-90', '91+')))
#Fire Year Bins
pixel.data$year.bin = with(pixel.data, factor(year.bin, levels = c('2011-2018','2001-2010','1991-2000','1981-1990','1971-1980',
'1961-1970','1951-1960','1941-1950','1931-1940','1921-1930',
'1911-1920'))) #,'1909-1910','1900')))
#Fire Year Bins
pixel.data$stand.age.bin = with(pixel.data, factor(stand.age.bin, levels = c('0-4','5-14','15-24','25-34','35-44',
'45-54','55-64','65-74','75-84','85-94','95-104')))
# '1911-1920','1909-1910','1900')))
#Calculate dNDMI based on predictions
pixel.data$dNDMI <- pixel.data$NDMI - pixel.data$NDMI.predict
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d() + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(10,1200), breaks = c(10,300,600,900), midpoint = 600, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d() + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(10,1100), breaks = c(10,300,600,900), midpoint = 600, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d() + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) #+
#scale_fill_gradient2(limits = c(10,1100), breaks = c(10,300,600,900), midpoint = 600, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p20 <- ggplot() + geom_hist(data = filter(pixel.data, fire.year >= 1911), mapping = aes(x = fire.year)) #+
#geom_bin2d(alpha = 0.8)
p20
#Fire year compared to latitude
p20 <- ggplot() + geom_histogram(data = filter(pixel.data, fire.year >= 1911), mapping = aes(x = fire.year)) #+
p20
p20 <- ggplot() + geom_histogram(data = filter(pixel.data, fire.year >= 1911), mapping = aes(x = fire.year), binwidth = 1)
p20
ggsave(filename = 'Fig26_fire_year_histogram.png', height=12.5, width= 20, units = 'cm', dpi=900)
p27 <- ggplot() + geom_histogram(data = filter(pixel.data, fire.year >= 1911), mapping = aes(x = stand.age), binwidth = 1) #+
#geom_bin2d(alpha = 0.8)
p27
p27 <- ggplot() + geom_histogram(data = filter(pixel.data, fire.year >= 1911, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age), binwidth = 1) #+
#geom_bin2d(alpha = 0.8)
p27
ggsave(filename = 'Fig27_stand_age_histogram.png', height=12.5, width= 20, units = 'cm', dpi=900)
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d() + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) + geom_bin2d(binwidth = c(1, 0.0075)) +
scale_fill_gradient2(limits = c(10,1200), breaks = c(10,300,600,900), midpoint = 600, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d() + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) + geom_bin2d(binwidth = c(1, 0.0075)) #+
#scale_fill_gradient2(limits = c(10,1200), breaks = c(10,300,600,900), midpoint = 600, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(1, 0.0075)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(10,1200), breaks = c(10,300,600,900), midpoint = 600, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(1, 0.0075)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(0,100), breaks = c(25,50,75), midpoint = 50, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(0,100), breaks = c(25,50,75), midpoint = 50, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(0,200), breaks = c(50,100,150), midpoint = 100, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(0,300), breaks = c(75,150,225), midpoint = 150, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(5,250), breaks = c(5,125), midpoint = 125, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
p9 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -15), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) + #& clm_temp_mean != temp.q & elevation != elev.q & clm_precip_sum != precip.q
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, color = 'black') + #, mapping = aes(color = precip.control)
xlab('Years Since Fire') +
geom_vline(xintercept = 0) +
scale_fill_gradient2(limits = c(5,250), breaks = c(5,100,200), midpoint = 125, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p9
ggsave(filename = 'Fig9_NDMI_Chrono_Sequence_filtered.png', height=12.5, width= 16, units = 'cm', dpi=900)
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_bin2d(alpha = 0.8) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover)) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = date, y = Shrub_Cover.mean),
color = 'black', size = 1
) + ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire') +
theme_bw()
p28
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_bin2d(alpha = 0.8) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover)) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean),
color = 'black', size = 1
) + ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire') +
theme_bw()
p28
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean),
color = 'Shrub', size = 1
) + scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire') + theme_bw()
p28
#Create a manual color scale
cols <- c("Shrub"="green","Herb"="brown","Tree"="forest green", "Bare" = "gray")
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean),
color = 'Shrub', size = 1
) + scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire') + theme_bw()
p28
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1
) + scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire') + theme_bw()
p28
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Create a Tree Cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Tree_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Create an Herb cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Herb_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Create a Bare cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Bare_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire') + theme_bw()
p28
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Create a Tree Cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Tree_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Create an Herb cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Herb_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Create a Bare cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Bare_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Cover (%)')) + xlab('Years Since Fire') + theme_bw()
p28
#Save the data
ggsave(filename = 'Fig28_veg_cover_stand_age.png', height=12.5, width= 20, units = 'cm', dpi=900)
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggmap', 'ggplot2', 'magrittr', 'raster',
'rgdal', 'sp', 'sf', 'RStoolbox', 'ncdf4', 'gtools', 'tigris', 'patchwork',
'rlist', 'ggspatial', 'svglite', 'mgcv')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/severity')
#The data directory
dir_in <- "D:\\Large_Files\\CECS\\Stand_Age"
fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the data
# pixel.data <- read.csv(file.path(dir_in, "Stratified_sample_stand_age_2012_no_fire_history_mask_20210629_30m_v2.csv"), header = TRUE, na.strings = "NaN") #v2 is for all of Sierra and Socal
pixel.data <- read.csv(file.path(fire_in, "Stratified_sample_fire_year_fire_severity_01242022_30m.csv"), header = TRUE, na.strings = "NaN")
# summary(pixel.data)
#Get a  of the data
# summary(pixel.data)
# pixel.data <- pixel.data %>% filter(fire.year >= 1919 & !is.na(stand.age) & !is.na(NDMI))
summary(pixel.data)
#Convert missing TPA data to NAs
pixel.data[pixel.data$tpa_max == -9999,]$tpa_max <- NA
#Convert to trees per hectare
pixel.data$tpa_max <- pixel.data$tpa_max * 2.47105
#Make the dates into date time format for R
pixel.data$date <- as.Date(pixel.data$date)
pixel.data$vi.year <- format(pixel.data$date , '%Y')
pixel.data$fire.year <- pixel.data$fire_year
# head(pixel.data)
pixel.data$stand.age <- as.numeric(pixel.data$vi.year) - as.numeric(pixel.data$fire.year)
# summary(pixel.data %>% filter(bin == 13))
#Create a GAM to predict NDMI by stand.age
ndmi.gam <- gam(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), #fire.year >= 1919 &
formula = NDMI ~ s(stand.age, bs = "cs", k = 5) + s(clm_precip_sum, k = 3) + s(clm_temp_mean, k = 3) + s(latitude, k = 3) + s(fire_sev_last, k = 3))
# summary(ndmi.gam)
#Add a new column
pixel.data$NDMI.predict <- NA
pixel.data$NDMI.predict[pixel.data$stand.age <= 0] <- filter(pixel.data, stand.age <= 0)$NDMI
pixel.data$NDMI.predict[pixel.data$stand.age > 0] <- predict(newdata = filter(pixel.data, stand.age > 0), object = ndmi.gam)
#Calculate the Quintiles of precip climate normals
precip.q <- as.data.frame(unname(quantile(pixel.data$clm_precip_sum, prob = seq(0,1, 1/5))))
# precip.q
colnames(precip.q) <- 'Precip'
precip.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
precip.q
# precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()
#Plot a histogram with precip quartiles.
ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = clm_precip_sum)) +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black')
ggsave(filename = 'Fig1_Precip_Quartiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#Bin data by precip climatology
pixel.data <- pixel.data %>% mutate(precip.control = case_when(
clm_precip_sum >= precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric() ~ '> 80 %',
clm_precip_sum >= precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric() &
clm_precip_sum < precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric() ~ '60 to 80 %',
clm_precip_sum >= precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric() &
clm_precip_sum < precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric() ~ '40 to 60 %',
clm_precip_sum >= precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()  &
clm_precip_sum < precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric() ~ '20 to 40 %',
clm_precip_sum < precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric() ~ '0 to 20%'))
#Calculate the Quintiles of temperature climate normals
temp.q <- as.data.frame(unname(quantile(pixel.data$clm_temp_mean, prob = seq(0,1, 1/5))))
# precip.q
colnames(temp.q) <- 'Temp'
temp.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
#Histogram Plot of temperature quantiles
ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = clm_temp_mean)) +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black')
ggsave(filename = 'Fig2_Temp_Quartiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#Create temperature bins for analysis with quantiles
pixel.data <- pixel.data %>% mutate(temp.control = case_when(
clm_temp_mean >= temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric() ~ '> 80 %',
clm_temp_mean >= temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric() &
clm_temp_mean < temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric() ~ '60 to 80 %',
clm_temp_mean >= temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric() &
clm_temp_mean < temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric() ~ '40 to 60 %',
clm_temp_mean >= temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric()  &
clm_temp_mean < temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric() ~ '20 to 40 %',
clm_temp_mean < temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric() ~ '0 to 20%'))
#Calculate the Quintiles of elevation
elev.q <- as.data.frame(unname(quantile(pixel.data$elevation, prob = seq(0,1, 1/5))))
# precip.q
colnames(elev.q) <- 'elevation'
elev.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
elev.q
#Histogram Plot of temperature quantiles
ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = elevation)) +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black')
ggsave(filename = 'Fig3_Elevation_Quintiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#Bin data by elevation. Bins are quintiles.
pixel.data <- pixel.data %>% mutate(elevation.control = case_when(
elevation >= elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric() ~ '> 80 %',
elevation >= elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric() &
elevation < elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric() ~ '60 to 80 %',
elevation >= elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric() &
elevation < elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric() ~ '40 to 60 %',
elevation >= elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric()  &
elevation < elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric() ~ '20 to 40 %',
elevation < elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric() ~ '0 to 20%'))
# pixel.data
#Bin data by elevation
# pixel.data <- pixel.data %>% mutate(year.control = case_when(fire.year > 2000 ~ '2001-2020',
# 															 fire.year > 1980 & fire.year <= 2000 ~ '1981-2000',
# 															 fire.year > 1960 & fire.year <= 1980 ~ '1961-1980',
# 															 fire.year > 1940 & fire.year <= 1960 ~ '1941-1960',
# 															 fire.year > 1920 & fire.year <= 1940 ~ '1921-1940',
# 															 fire.year >= 1900 & fire.year <= 1920 ~ '1900-1920')) # end function
# summary(pixel.data)
#New bins based on stand age
pixel.data <- pixel.data %>% mutate(age.bin = case_when(
stand.age >= -32 & stand.age < -20 ~ '-32 to -21',
stand.age >= -20 & stand.age < -10 ~ '-20 to -11',
stand.age >= -10 & stand.age < 0 ~ '-1 to -10',
stand.age >= 0 & stand.age <= 10 ~ '0 to 10',
stand.age > 10 & stand.age <= 20 ~ '11 to 20',
stand.age > 20 & stand.age <= 30 ~ '21 to 30',
stand.age > 30 & stand.age <= 40 ~ '31 to 34'))
# pixel.data
#Stand Age years
p6 <- ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = date)) + facet_wrap(~age.bin)
p6
ggsave(filename = 'Fig6_Stand_age_bins.png', height=12.5, width= 16, units = 'cm', dpi=900)
#Create new name for data bins
#Bin names will need to be updated
pixel.data <- pixel.data %>% mutate(year.bin = case_when(
fire_year_last >= 1981 & fire_year_last <= 1990 ~ '1984-1990',
fire_year_last >= 1991 & fire_year_last <= 2000 ~ '1991-2000',
fire_year_last >= 2001 & fire_year_last <= 2010 ~ '2001-2010',
fire_year_last >= 2011 & fire_year_last <= 2020 ~'2011-2017')) # end function
# summary(pixel.data)
#
# pixel.data %>% filter(fire_sev_last == 1)
#Fire Severity Bins
pixel.data <- pixel.data %>% mutate(sev.bin = case_when(
fire_sev_last == '0' ~ 'No Fire',
fire_sev_last == '1' ~ 'Lowest',
fire_sev_last == '2' ~ 'Low',
fire_sev_last == '3' ~ 'Mid',
fire_sev_last == '4' ~ 'High',
fire_sev_last == '255' ~ 'Masked')) # end function
pixel.data
#Make the bin lables in the correct order
pixel.data$elevation.control = with(pixel.data, factor(elevation.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
pixel.data$temp.control = with(pixel.data, factor(temp.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
pixel.data$precip.control = with(pixel.data, factor(precip.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
#Make the years bin lables in the correct order
pixel.data$sev.bin = with(pixel.data, factor(sev.bin, levels = c('Masked', 'Lowest', 'Low','Mid', 'High')))
#Burn Severity Bin
pixel.data$age.bin = with(pixel.data, factor(age.bin, levels = c('-32 to -21', '-20 to -11', '-10 to -1','0 to 10', '11 to 20', '21 to 30', '31 to 34')))
#Fire Year Bins
pixel.data$year.bin = with(pixel.data, factor(year.bin, levels = c('2011-2017','2001-2010','1991-2000','1984-1990')))
#Calculate dNDMI based on predictions
pixel.data$dNDMI <- pixel.data$NDMI - pixel.data$NDMI.predict
summary(pixel.data)
p1 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -5 & !is.na(NDMI) & fire_sev_last != 255), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) +
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0 & !is.na(NDMI) & fire_sev_last != 255), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, mapping = aes(color = sev.bin)) +
geom_vline(xintercept = 0) + xlab('Year') +
scale_fill_gradient2(limits = c(0,100), breaks = c(25,50,75), midpoint = 400, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p1
p1 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -5 & !is.na(NDMI) & fire_sev_last != 255), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) +
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0 & !is.na(NDMI) & fire_sev_last != 255), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, mapping = aes(color = sev.bin)) +
geom_vline(xintercept = 0) + xlab('Year') +
scale_fill_gradient2(limits = c(0,100), breaks = c(25,50,75), midpoint = 50, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p1
p1 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -5 & !is.na(NDMI) & fire_sev_last != 255), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) +
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0 & !is.na(NDMI) & fire_sev_last != 255), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, mapping = aes(color = sev.bin)) +
geom_vline(xintercept = 0) + xlab('Year') +
scale_fill_gradient2(limits = c(0,200), breaks = c(50,100,150), midpoint = 100, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p1
p1 <- ggplot(data = filter(pixel.data, vi.year <= 2012 & stand.age >= -5 & !is.na(NDMI) & fire_sev_last != 255), mapping = aes(x = stand.age, y = NDMI)) + geom_bin2d(binwidth = c(2, 0.015)) +
geom_smooth(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0 & !is.na(NDMI) & fire_sev_last != 255), method = 'gam', formula = y ~ s(x, bs = "cs", k = 5), se = FALSE, mapping = aes(color = sev.bin)) +
geom_vline(xintercept = 0) + xlab('Year') +
scale_fill_gradient2(limits = c(0,400), breaks = c(100,200,300), midpoint = 200, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent')
p1
ggsave(filename = 'Fig1_NDMI_Chrono_Sequence_filtered.png', height=12.5, width= 16, units = 'cm', dpi=900)
pixel.data$Tree_Cover <- pixel.data$Tree_Cover / 100
pixel.data$Shrub_Cover <- pixel.data$Shrub_Cover / 100
pixel.data$Herb_Cover <- pixel.data$Herb_Cover / 100
pixel.data$Bare_Cover <- pixel.data$Bare_Cover / 100
#Create a manual color scale
cols <- c("Shrub"="green","Herb"="brown","Tree"="forest green", "Bare" = "gray")
p9 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Create a Tree Cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Tree_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Create an Herb cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Herb_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Create a Bare cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Bare_Cover) & vi.year <= 2012) %>%
group_by(stand.age) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Cover (%)')) + xlab('Years Since Fire') + theme_bw()
p9
p9 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012) %>%
group_by(stand.age, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Create a Tree Cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Tree_Cover) & vi.year <= 2012) %>%
group_by(stand.age, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Create an Herb cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Herb_Cover) & vi.year <= 2012) %>%
group_by(stand.age, sev.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Create a Bare cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Bare_Cover) & vi.year <= 2012) %>%
group_by(stand.age, sev.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Cover (%)')) + xlab('Years Since Fire') + facet_grid(factor(sev.bin, levels = c("Lowest", "Low", "Mid", "High")) ~ .) + theme_bw()
p9
p9 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire_sev_last != 255) %>%
group_by(stand.age, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub'), size = 1) +
#Create a Tree Cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Tree_Cover) & vi.year <= 2012 & fire_sev_last != 255) %>%
group_by(stand.age, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree'), size = 1) +
#Create an Herb cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Herb_Cover) & vi.year <= 2012 & fire_sev_last != 255) %>%
group_by(stand.age, sev.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb'), size = 1) +
#Create a Bare cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -15 & fire.year >= 1911 & !is.na(Bare_Cover) & vi.year <= 2012 & fire_sev_last != 255) %>%
group_by(stand.age, sev.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare'), size = 1) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
ylab(expression('Cover (%)')) + xlab('Years Since Fire') + facet_grid(factor(sev.bin, levels = c("Lowest", "Low", "Mid", "High")) ~ .) + theme_bw()
p9
#Save the data
ggsave(filename = 'Fig28_veg_cover_stand_age.png', height=40, width= 15, units = 'cm', dpi=900)
#Save the data
ggsave(filename = 'Fig28_veg_cover_stand_age.png', height=20, width= 20, units = 'cm', dpi=900)
#Save the data
ggsave(filename = 'Fig28_veg_cover_stand_age.png', height=16, width= 20, units = 'cm', dpi=900)
