pixel.data$date <- as.Date(as.character(pixel.data$year), format = '%Y')
# pixel.data$vi.year <- format(pixel.data$date , '%Y')
pixel.data$vi.year <- pixel.data$year
#Use the FRAP fire perimeter year
pixel.data$fire.year <- pixel.data$perimeter_year
pixel.data$stand.age <- as.numeric(pixel.data$year) - as.numeric(pixel.data$fire.year)
#Update Cover data to 100% scale
pixel.data$Tree_Cover <- pixel.data$Tree_Cover_mean / 100
pixel.data$Shrub_Cover <- pixel.data$Shrub_Cover_mean / 100
pixel.data$Herb_Cover <- pixel.data$Herb_Cover_mean / 100
pixel.data$Bare_Cover <- pixel.data$Bare_Cover_mean / 100
#Convert the SPI48 scale back to decimal
pixel.data$SPI48 <- pixel.data$SPI48_mean / 100
#Try to fix soil moisture by dividing by 10
pixel.data$Soil_Moisture <- pixel.data$Soil_Moisture_mean / 10
#Rename ppt and Water Stress
pixel.data$Water_Stress <- pixel.data$Water_Stress_mean
pixel.data$ppt <- pixel.data$ppt_mean
pixel.data$AET <- pixel.data$AET_mean
pixel.data$GPP <- pixel.data$GPP_mean
pixel.data$elevation <- pixel.data$elevation_mean
pixel.data$PrET <- pixel.data$ppt - pixel.data$AET
pixel.data <- pixel.data %>% mutate(stand.age.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
is.na(fire.year) ~ 'No Fire',
fire.year >= 1910 & fire.year <=  1934 ~ '1910-1934',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
fire.year >= 1935 & fire.year <= 1959 ~ '1935-1959',#'56-80',
# fire.year >= 1971 & fire.year <= 1980 ~ '35-44',
fire.year >= 1960 & fire.year <= 1984 ~ '1960-1984',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year >= 1985 & fire.year <= 2010 ~ '1985-2010',
# fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
pixel.data <- pixel.data %>% mutate(fire.year.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
is.na(fire.year) ~ 'No Fire',
fire.year <=  1920 ~ '1900-1919',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
fire.year > 1920 & fire.year <= 1950 ~ '1921-1950',#'56-80',
fire.year > 1950 & fire.year <= 1980 ~ '1951-1980',#'56-80',
# fire.year >= 1971 & fire.year <= 1980 ~ '35-44',
##fire.year >= 1999 & fire.year <= 2001 ~ '1999-2001',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year > 1980 & fire.year <= 2010 ~ '1981-2010',
#fire.year >= 1986 & fire.year <= 2000 ~ '1986-2000',
#fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
summary(pixel.data)
pixel.data$stand.age.bin = with(pixel.data, factor(stand.age.bin, levels = c('2019-2020', '2011-2018', '1985-2010', '1960-1984', '1935-1959', '1910-1934', 'No Fire')))#c('0-4','5-30','31-55','56-80',
#'81-95')))
pixel.data$fire.year.bin = with(pixel.data, factor(fire.year.bin, levels = c('2019-2020', '2011-2018', '1981-2010', '1951-1980', '1921-1950', '1900-1919', 'No Fire')))#c('0-4','5-30','31-55','56-80',
summary(pixel.data)
#Create a manual color scale
cols <- c("Shrub"="green","Herb"="brown","Tree"="forest green", "Bare" = "gray")
fills <- c("Shrub"="green","Herb"="brown","Tree"="forest green", "Bare" = "gray")
fills
p35 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_point(data = pixel.data %>%
dplyr::filter((!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))
) %>%
group_by(date, fire.year, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()), #%>%
# filter(if_else(fire.year.bin == '1981-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)) %>%
# group_by(date, fire.year.bin) %>%
# summarize(Tree_Cover.diff = Tree_Cover.mean[treatment == 'Buffer'] - Tree_Cover.mean[treatment == 'Wildfire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(Tree_Cover.diff.mean = mean(Tree_Cover.diff)),
mapping = aes(x = date, y = Tree_Cover.mean, color = treatment, shape = treatment),
size = 0.1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
#               filter(if_else(fire.year.bin == '1981-2010', Tree_Cover.n >= 490, Tree_Cover.n >= 0)) %>%
#               group_by(date, fire.year.bin) %>%
#               summarize(Tree_Cover.diff = Tree_Cover.mean[treatment == 'Wildfire'] - Tree_Cover.mean[treatment == 'Buffer'],
#                         Tree_Cover.se.diff = sqrt((Tree_Cover.sd[treatment == 'Wildfire']/sqrt(Tree_Cover.n[treatment == 'Wildfire']))^2 + (Tree_Cover.sd[treatment == 'Buffer']/sqrt(Tree_Cover.n[treatment == 'Buffer']))^2)), #%>%
#             mapping = aes(ymin=Tree_Cover.diff - 1.96*(Tree_Cover.se.diff),
#                           ymax=Tree_Cover.diff + 1.96*(Tree_Cover.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_shape(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_wrap(.~ fire.year) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) + #ylim(25, 55) +
ylab(expression('Tree (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p35
p35 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_point(data = pixel.data %>%
dplyr::filter((!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1921) #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))
) %>%
group_by(date, fire.year, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()), #%>%
# filter(if_else(fire.year.bin == '1981-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)) %>%
# group_by(date, fire.year.bin) %>%
# summarize(Tree_Cover.diff = Tree_Cover.mean[treatment == 'Buffer'] - Tree_Cover.mean[treatment == 'Wildfire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(Tree_Cover.diff.mean = mean(Tree_Cover.diff)),
mapping = aes(x = date, y = Tree_Cover.mean, color = treatment),
size = 0.1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
#               filter(if_else(fire.year.bin == '1981-2010', Tree_Cover.n >= 490, Tree_Cover.n >= 0)) %>%
#               group_by(date, fire.year.bin) %>%
#               summarize(Tree_Cover.diff = Tree_Cover.mean[treatment == 'Wildfire'] - Tree_Cover.mean[treatment == 'Buffer'],
#                         Tree_Cover.se.diff = sqrt((Tree_Cover.sd[treatment == 'Wildfire']/sqrt(Tree_Cover.n[treatment == 'Wildfire']))^2 + (Tree_Cover.sd[treatment == 'Buffer']/sqrt(Tree_Cover.n[treatment == 'Buffer']))^2)), #%>%
#             mapping = aes(ymin=Tree_Cover.diff - 1.96*(Tree_Cover.se.diff),
#                           ymax=Tree_Cover.diff + 1.96*(Tree_Cover.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_shape(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_wrap(.~ fire.year) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) + #ylim(25, 55) +
ylab(expression('Tree (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p35
#Save the data
ggsave(filename = 'Fig73_fire year_tree_cover_frap_perimeter.png', height=18, width= 20, units = 'cm', dpi=900)
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggmap', 'ggplot2', 'magrittr', 'raster',
'rgdal', 'sp', 'sf', 'RStoolbox', 'ncdf4', 'gtools', 'tigris', 'patchwork',
'rlist', 'ggspatial', 'svglite', 'mgcv')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/pixel_sample')
#The data directory
dir_in <- "D:\\Fire_Dieoff"
fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the data
# pixel.data <- read.csv(file.path(dir_in, "Stratified_sample_stand_age_2012_no_fire_history_mask_20210629_30m_v2.csv"), header = TRUE, na.strings = "NaN") #v2 is for all of Sierra and Socal
# pixel.data <- read.csv(file.path(fire_in, "Stratified_sample_stand_age_no_fire_history_mask_01242022_30m.csv"), header = TRUE, na.strings = "NaN")
# pixel.data <- read.csv(file.path(dir_in, "fraprx_ecoregion_stratified_sample_100pts_30m_ts8_20220713.csv"), header = TRUE, na.strings = "NaN")
rx.fire.data <- read.csv(file.path(dir_in, "fraprx_ecoregion_simple_sample_by_rxfire_10pt_300m_ts8_20220927.csv"), header = TRUE, na.strings = "NaN")
rx.fire.data$fire.year <- rx.fire.data$perimeter_year
rx.fire.data$treatment <- 'Wildfire'
# list.files(fire_in)
# list.files(fire_in)
rx.control.data <- read.csv(file.path(dir_in, "fraprx_ecoregion_simple_sample_by_1pt5km_rxfire_buffers_10pt_300m_ts8_20221005.csv"), header = TRUE, na.strings = "NaN")
# summary(control.data)
#Get a  of the data
# summary(pixel.data)
# pixel.data <- pixel.data %>% filter(fire.year >= 1919 & !is.na(stand.age) & !is.na(NDMI))
rx.control.data$fire.year <- rx.control.data$perimeter_year
# rx.control.data$perimeter_year <- NA
# rx.control.data$fire.year <- rx.control.data$perimeter_year
rx.control.data$treatment <- 'Buffer' #Try making this 1-km versus, 2-km
#Data on 2-km buffers
# rx.control.data.4km <- read.csv(file.path(dir_in, "fraprx_ecoregion_simple_sample_by_4km_rxfire_buffers_10pt_300m_ts8_20220927.csv"), header = TRUE, na.strings = "NaN")
# # summary(control.data)
# #Get a  of the data
# # summary(pixel.data)
# # pixel.data <- pixel.data %>% filter(fire.year >= 1919 & !is.na(stand.age) & !is.na(NDMI))
# rx.control.data.4km$fire.year <- rx.control.data.4km$perimeter_year
# rx.control.data.4km$treatment <- '4-km Buffer' #Try making this 1-km versus, 2-km
# summary(fire.data)
# summary(control.data)
#Combine the data together
rx.pixel.data <- rbind(rx.fire.data, rx.control.data)
# rx.pixel.data <- rbind(rx.combine.data, rx.control.data.4km)
summary(rx.pixel.data)
`%notin%` <- Negate(`%in%`)
#Convert data to long format
rx.pixel.data <- rx.pixel.data %>% #dplyr::select(-c('latitude', 'longitude')) %>%
pivot_longer(cols = X10_AET_mean:X9_tpa_max_mode, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
rx.pixel.data$year <- as.numeric(rx.pixel.data$year) + 1984
#Convert missing TPA data to NAs
rx.pixel.data[rx.pixel.data$tpa_max_mean < 0,]$tpa_max_mean <- NA
#Convert fire data -9999 to NAs
rx.pixel.data[rx.pixel.data$fire_type_2010_mode == -9999,]$fire_type_2010_mode <- NA
rx.pixel.data[rx.pixel.data$fire_year_2010_mode == -9999,]$fire_year_2010_mode <- NA
rx.pixel.data[rx.pixel.data$fire_year_2019_mode == -9999,]$fire_year_2019_mode <- NA
rx.pixel.data[rx.pixel.data$fire_type_2020_mode == -9999,]$fire_type_2020_mode <- NA
rx.pixel.data[rx.pixel.data$fire_year_2020_mode == -9999,]$fire_year_2020_mode <- NA
#Convert to trees per hectare
rx.pixel.data$tpa_max <- rx.pixel.data$tpa_max_mean * 2.47105
#Make the dates into date time format for R
rx.pixel.data$date <- as.Date(as.character(rx.pixel.data$year), format = '%Y')
# rx.pixel.data$vi.year <- format(rx.pixel.data$date , '%Y')
rx.pixel.data$vi.year <- rx.pixel.data$year
#Use the FRAP fire perimeter year
rx.pixel.data$fire.year <- rx.pixel.data$perimeter_year
rx.pixel.data$stand.age <- as.numeric(rx.pixel.data$year) - as.numeric(rx.pixel.data$fire.year)
#Update Cover data to 100% scale
rx.pixel.data$Tree_Cover <- rx.pixel.data$Tree_Cover_mean / 100
rx.pixel.data$Shrub_Cover <- rx.pixel.data$Shrub_Cover_mean / 100
rx.pixel.data$Herb_Cover <- rx.pixel.data$Herb_Cover_mean / 100
rx.pixel.data$Bare_Cover <- rx.pixel.data$Bare_Cover_mean / 100
#Convert the SPI48 scale back to decimal
rx.pixel.data$SPI48 <- rx.pixel.data$SPI48_mean / 100
#Try to fix soil moisture by dividing by 10
rx.pixel.data$Soil_Moisture <- rx.pixel.data$Soil_Moisture_mean / 10
#Rename ppt and Water Stress
rx.pixel.data$Water_Stress <- rx.pixel.data$Water_Stress_mean
rx.pixel.data$ppt <- rx.pixel.data$ppt_mean
rx.pixel.data$AET <- rx.pixel.data$AET_mean
rx.pixel.data$GPP <- rx.pixel.data$GPP_mean
rx.pixel.data$elevation <- rx.pixel.data$elevation_mean
rx.pixel.data$PrET <- rx.pixel.data$ppt - rx.pixel.data$AET
rx.pixel.data <- rx.pixel.data %>% mutate(fire.year.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
is.na(fire.year) ~ 'No Fire',
fire.year >= 1910 & fire.year <=  1970 ~ '1910-1970',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
fire.year >= 1971 & fire.year <= 1980 ~ '1971-1980',#'56-80',
fire.year >= 1981 & fire.year <= 1990 ~ '1981-1990',
fire.year >= 1991 & fire.year <= 2000 ~ '1991-2000',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
# fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
rx.pixel.data <- rx.pixel.data %>% mutate(stand.age.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
is.na(fire.year) ~ 'No Fire',
fire.year >= 1910 & fire.year <=  1970 ~ '1910-1970',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
fire.year >= 1971 & fire.year <= 1985 ~ '1971-1985',#'56-80',
# fire.year >= 1971 & fire.year <= 1980 ~ '35-44',
fire.year >= 1986 & fire.year <= 2000 ~ '1986-2000',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
# fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
summary(rx.pixel.data)
rx.pixel.data$stand.age.bin = with(rx.pixel.data, factor(stand.age.bin, levels = c('2019-2020', '2011-2018', '2001-2010', '1986-2000', '1970-1985', '1910-1969', 'No Fire')))#c('0-4','5-30','31-55','56-80',
#'81-95')))
rx.pixel.data$fire.year.bin = with(rx.pixel.data, factor(fire.year.bin, levels = c('2019-2020', '2011-2018', '2001-2010', '1991-2000', '1981-1990', '1971-1980','1951-1970', '1900-1950', 'No Fire')))#c('0-4','5-30','31-55','56-80',
summary(rx.pixel.data)
#Create a manual color scale
cols <- c("Shrub"="green","Herb"="brown","Tree"="forest green", "Bare" = "gray")
fills <- c("Shrub"="green","Herb"="brown","Tree"="forest green", "Bare" = "gray")
fills
#
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_point(data = rx.pixel.data %>%
dplyr::filter((!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1971) #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))
) %>%
group_by(date, fire.year, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()), #%>%
# filter(if_else(fire.year.bin == '1981-2010', Tree_Cover.n >= 600, Tree_Cover.n >= 0)) %>%
# group_by(date, fire.year.bin) %>%
# summarize(Tree_Cover.diff = Tree_Cover.mean[treatment == 'Buffer'] - Tree_Cover.mean[treatment == 'Wildfire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(Tree_Cover.diff.mean = mean(Tree_Cover.diff)),
mapping = aes(x = date, y = Tree_Cover.mean, color = treatment),
size = 0.1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(Tree_Cover) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()) %>%
#               filter(if_else(fire.year.bin == '1981-2010', Tree_Cover.n >= 490, Tree_Cover.n >= 0)) %>%
#               group_by(date, fire.year.bin) %>%
#               summarize(Tree_Cover.diff = Tree_Cover.mean[treatment == 'Wildfire'] - Tree_Cover.mean[treatment == 'Buffer'],
#                         Tree_Cover.se.diff = sqrt((Tree_Cover.sd[treatment == 'Wildfire']/sqrt(Tree_Cover.n[treatment == 'Wildfire']))^2 + (Tree_Cover.sd[treatment == 'Buffer']/sqrt(Tree_Cover.n[treatment == 'Buffer']))^2)), #%>%
#             mapping = aes(ymin=Tree_Cover.diff - 1.96*(Tree_Cover.se.diff),
#                           ymax=Tree_Cover.diff + 1.96*(Tree_Cover.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Treatment') +
scale_shape(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_wrap(.~ fire.year) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) + #ylim(25, 55) +
ylab(expression('Tree (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p26
#Save the data
ggsave(filename = 'Fig75_fire year_tree_cover_frap_perimeter.png', height=18, width= 20, units = 'cm', dpi=900)
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom', 'sf')
# If necessary: install/update packages
# install.packages('rlang',repo='https://cloud.r-project.org/')
# library("agricolae")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
#setwd("/C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data")
#cd /C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data
#cd /C/Users/can02/mystuff/fireDieoff/FIA
#Command for calling the script in the command line: R < stand_age_dieoff.r --vanilla
#INstalling packages: install.packages('RColorBrewer',repo='https://cran.cnr.berkeley.edu/')
setwd('C:/Users/can02/mystuff/fireDieoff/FIA')
#Add Data Sets
sql_dir <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_version' #Download from FIA DataMart
dir_usfs <- "D:\\Large_Files\\USFS\\data\\subsections"
fiaCA <- file.path(sql_dir, 'FIADB_CA.db')
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = fiaCA)
#Creating a plot of mortality by tree species in two time periods and drought sequences.
#Create a notin operator
`%notin%` <- Negate(`%in%`)
#Add USFS EcoRegion maps
usfs_in <- "D:\\Large_Files\\USFS\\data\\subsections"
usfs.regions <- st_read(file.path(usfs_in, 'S_USA.EcomapSubsections.shp'))
#South Sierra
usfs.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S =='M261Eq' | MAP_UNIT_S =='M261Eu' | MAP_UNIT_S =='M261Er'  | MAP_UNIT_S =='M261Eo'  | MAP_UNIT_S =='M261Es' |
#North Sierra
MAP_UNIT_S == 'M261Ea'  | MAP_UNIT_S =='M261Eb'  | MAP_UNIT_S =='M261Ec'  | MAP_UNIT_S =='M261Ed'  | MAP_UNIT_S =='M261Ef'  | MAP_UNIT_S =='M261Eg'  | MAP_UNIT_S =='M261Eh'  | MAP_UNIT_S =='M261Ej'  | MAP_UNIT_S =='M261Ek'  | MAP_UNIT_S =='M261El'  | MAP_UNIT_S =='M261Em'  | MAP_UNIT_S =='M261Et')
#North Sierra Union
south.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S =='M261Eq' | MAP_UNIT_S =='M261Eu' | MAP_UNIT_S =='M261Er'  | MAP_UNIT_S =='M261Eo'  | MAP_UNIT_S =='M261Es') %>% st_union()
#South Sierra Union
north.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ea'  | MAP_UNIT_S =='M261Eb'  | MAP_UNIT_S =='M261Ec'  | MAP_UNIT_S =='M261Ed'  | MAP_UNIT_S =='M261Ef'  | MAP_UNIT_S =='M261Eg' |
MAP_UNIT_S =='M261Eh'  | MAP_UNIT_S =='M261Ej'  | MAP_UNIT_S =='M261Ek'  | MAP_UNIT_S =='M261El'  | MAP_UNIT_S =='M261Em'  | MAP_UNIT_S =='M261Et') %>% st_union()
#Add extension functions, allows more math functions
initExtension(db)
# summary(db)
#Query for FIA live trees, 2014-2019
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd,
c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage,
c.dstrbcd1, c.dstrbyr1, p.ecosubcd, p.lat, p.lon
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means non-forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 1.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
--All Sierra Eco SubCodes
--South Sierra
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR
--NOrth Sierra
P.ECOSUBCD = 'M261Ea' OR P.ECOSUBCD = 'M261Eb' OR P.ECOSUBCD = 'M261Ec' OR P.ECOSUBCD = 'M261Ed' OR P.ECOSUBCD = 'M261Ef' OR P.ECOSUBCD = 'M261Eg' OR P.ECOSUBCD = 'M261Eh' OR P.ECOSUBCD = 'M261Ej' OR P.ECOSUBCD = 'M261Ek' OR P.ECOSUBCD = 'M261El' OR P.ECOSUBCD = 'M261Em' OR P.ECOSUBCD = 'M261Et')
--Combined Sierra and SoCal Stand Age
--AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR P.ECOSUBCD = 'M262Bd' OR P.ECOSUBCD = 'M262Be' OR P.ECOSUBCD = 'M262Bg' OR P.ECOSUBCD = 'M262Bh' OR P.ECOSUBCD = 'M262Bf' OR P.ECOSUBCD = 'M262Bo' OR P.ECOSUBCD = 'M262Bi' OR P.ECOSUBCD = 'M262Bm' OR P.ECOSUBCD = 'M262Bl' OR P.ECOSUBCD = 'M262Bc' OR P.ECOSUBCD = 'M262Bp' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba')
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) -- No Fires OR c.dstrbcd1 = 30 OR c.dstrbcd1 = 31 OR c.dstrbcd1 = 32)
")
#DSTRBCD1 == 30, 31, 32 reference fires
all <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(all)
#Convert per acre to per hectare
all$count <- all$count * 2.47105 # Convert to per hectare
all$DIA <- all$DIA * (2.54) #Convert to centimeters
all$basal_area <- (((all$DIA / 2)^2) * pi)*(1/10000) * all$count
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE), ECOSUBCD = first(ECOSUBCD), latitude = median(LAT), longitude = median(LON))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
summary(join)
spat.join <- join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & (!is.na(STDAGE) & STDAGE != 9999) & STDAGE > 0)
# summary(spat.join)
#Make the FIA data into spatila points
# coordinates(spat.join) <- ~ longitude + latitude
spat.join <- st_as_sf(spat.join, coords=c("longitude", "latitude"), crs="EPSG:4326")
# spat.join <- spat.join %>% st_as_sf()
# crs(spat.join) <-
plot(spat.join)
south.sierra.fia <- spat.join %>% filter(ECOSUBCD == 'M261Ep' | ECOSUBCD =='M261Eq' | ECOSUBCD =='M261Eu' | ECOSUBCD =='M261Es')
plot(south.sierra.fia)
south.sierra.fia
south.sierra.fia %>% summary()
dir_in <- "D:\\Large_Files\\CECS"
#FRAP data
frap_in <- "D:\\Large_Files\\FRAP\\fire21_1_shp"
#EPA Ecoregion data
eco_in <- "D:\\Large_Files\\EcoRegion"
#Severity DAta
sev_in <- "D:\\Large_Files\\USFS\\Fire_Severity\\VebBurnSeverity18_1_shp"
frap <- read_sf(file.path(frap_in, "firep21_1.shp"))
#Load Prescribed Burn FRAP data
rxburn <- read_sf(file.path(frap_in, "rxburn21_1.shp"))
#Extract the CRS from the FRAP data
frap.crs <- crs(frap)
#USFS Fire severity
fire.sev <- read_sf(file.path(sev_in, "VegBurnSeverity18.shp"))
#Transform the CRS to match FRAP
# eco.region <- st_transform(eco.region, crs(frap))
#Add California Boundary shape file
us_states_20m <- states(cb = TRUE, resolution = "20m", class = "sf")
ca_20m <- us_states_20m[us_states_20m$NAME == "California", ]
ca_20m <- st_as_sf(ca_20m)
ca_20m <- st_transform(ca_20m, frap.crs)
#Select the Sierra Polygon
# sierra <- eco.region[eco.region$US_L3NAME == 'Sierra Nevada', ]
# sierra
#Select USFS EcoRegion for South Sierra Nevada
# usfs.regions <- st_read(file.path(usfs_in, 'S_USA.EcomapSubsections.shp'))
# # usfs.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S == 'M261Eq' | MAP_UNIT_S == 'M261Es' | MAP_UNIT_S == 'M261Eu' | MAP_UNIT_S == 'M261Er' | MAP_UNIT_S == 'M261Eo') # | MAP_UNIT_S == 'M261Ev') #MAP_UNIT_S == 'M261Et' |
#
# south.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S =='M261Eq' | MAP_UNIT_S =='M261Eu' | MAP_UNIT_S =='M261Es') #MAP_UNIT_S =='M261Er'  | MAP_UNIT_S =='M261Eo'  |
#
# #South Sierra Union
# north.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ea'  | MAP_UNIT_S =='M261Eb'  | MAP_UNIT_S =='M261Ec'  | MAP_UNIT_S =='M261Ed'  | MAP_UNIT_S =='M261Ef'  | MAP_UNIT_S =='M261Eg' |
#                          MAP_UNIT_S =='M261Eh'  | MAP_UNIT_S =='M261Ej'  | MAP_UNIT_S =='M261Ek'  | MAP_UNIT_S =='M261El'  | MAP_UNIT_S =='M261Em'  | MAP_UNIT_S =='M261Et')
#Merge Sierra Nevada polygons into one larger polygon
#South Sierra
south.sierra.union <- south.sierra %>% st_union()
south.sierra.union <- st_transform(south.sierra.union, frap.crs)
south.sierra.sf <- st_as_sf(south.sierra.union)
#North Sierra
north.sierra.union <- north.sierra %>% st_union()
north.sierra.union <- st_transform(north.sierra.union, frap.crs)
north.sierra.sf <- st_as_sf(north.sierra.union)
#Check which FRAP polygons are valid
#Is this still necessary?
frap$valid <- sf::st_is_valid(frap)
# frap %>% dplyr::select(valid) %>% summary()
#Add the fire date
# frap$fire.date <- as.Date(frap$ALARM_DATE)
frap$year <- frap$YEAR_
# frap$Area.sf <- st_area(frap) #m^2 units
#Add date to FRAP Rx Burn
rxburn <- st_transform(rxburn, frap.crs)
# rxburn$fire.date <- as.Date(rxburn$START_DATE)
rxburn$year <- rxburn$YEAR_  #format(rxburn$fire.date, '%Y')
# rxburn$Area.sf <- st_area(rxburn) #m^2 units
rxburn$valid <- sf::st_is_valid(rxburn) #True or False
plot(frap)
frap.south.sierra <- st_intersection(frap[frap$valid == TRUE, ], south.sierra.sf)
plot(frap.south.sierra)
frap.fia <- st_intersection(frap.south.sierra, south.sierra.fia)
fia.transform <- st_transfrom(south.sierra.fia, frap.crs)
fia.transform <- st_transform(south.sierra.fia, frap.crs)
frap.fia <- st_intersection(frap.south.sierra, fia.transform)
frap.fia <- st_intersection(fia.transform, frap.south.sierra)
plot(frap.fia)
summary(frap.fia)
ggplot() + geom_point(data = frap.fia, mapping = aes(x = year, y = basal_area.dead))
ggplot() + geom_point(data = frap.fia %>% filter(year >= 1921 & year <= 2010), mapping = aes(x = year, y = basal_area.dead))
ggsave(filename = 'Fig27_FIA_mortality_v_FRAP_year.png', height=16, width= 36, units = 'cm', dpi=900)
