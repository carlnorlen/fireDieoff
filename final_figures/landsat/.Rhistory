#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, color = "Tree",  linetype = treatment), alpha = 0.3) +
#Create an Herb cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb',  linetype = treatment), size = 1) +
#Herb Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover),
Herb_Cover.sd = sd(Herb_Cover), Herb_Cover.n = n()),
mapping = aes(ymin=Herb_Cover.mean - 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
ymax=Herb_Cover.mean + 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
x = stand.age, color = "Herb",  linetype = treatment), alpha = 0.3) +
#Create a Bare cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare',  linetype = treatment), size = 1) +
#Bare Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover),
Bare_Cover.sd = sd(Bare_Cover), Bare_Cover.n = n()),
mapping = aes(ymin=Bare_Cover.mean - 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
ymax=Bare_Cover.mean + 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
x = stand.age, color = "Bare",  linetype = treatment), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_fill_manual(values = fills) + facet_grid(fire.year.bin ~ sev.bin) +
guides(fill = "none") +
ylab(expression('Cover (%)')) + xlab('Years Since Fire')
p18
sev.pixel.sample <- sev.pixel.sample %>% mutate(fire.year.bin = case_when(
# fire.year < 1980 ~ '< 1980',
fire.year >= 1985 & fire.year <= 1990 ~ '1985-1990',
fire.year >= 1991 & fire.year <= 1995 ~ '1991-1995',
fire.year >= 1996 & fire.year <= 2000 ~ '1996-2000',
fire.year >= 2001 & fire.year <= 2005 ~ '2001-2005',
fire.year >= 2006 & fire.year <= 2010 ~ '2006-2010'))
#Fire year bins for Fire Severity Data
sev.pixel.data$fire.year.bin = with(sev.pixel.data, factor(fire.year.bin, levels = c('2006-2010', '2001-2005','1996-2000', '1991-1995','1985-1990')))
p18 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire perimeter and fier year by pixel match
group_by(stand.age, treatment, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub', linetype = treatment), size = 1) +
#Shrub Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover),
Shrub_Cover.sd = sd(Shrub_Cover), Shrub_Cover.n = n()),
mapping = aes(ymin=Shrub_Cover.mean - 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
ymax=Shrub_Cover.mean + 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
x = stand.age, color = "Shrub",  linetype = treatment), alpha = 0.3) +
#Create a Tree Cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree',  linetype = treatment), size = 1) +
#Tree Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, color = "Tree",  linetype = treatment), alpha = 0.3) +
#Create an Herb cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb',  linetype = treatment), size = 1) +
#Herb Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover),
Herb_Cover.sd = sd(Herb_Cover), Herb_Cover.n = n()),
mapping = aes(ymin=Herb_Cover.mean - 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
ymax=Herb_Cover.mean + 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
x = stand.age, color = "Herb",  linetype = treatment), alpha = 0.3) +
#Create a Bare cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare',  linetype = treatment), size = 1) +
#Bare Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover),
Bare_Cover.sd = sd(Bare_Cover), Bare_Cover.n = n()),
mapping = aes(ymin=Bare_Cover.mean - 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
ymax=Bare_Cover.mean + 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
x = stand.age, color = "Bare",  linetype = treatment), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_fill_manual(values = fills) + facet_grid(fire.year.bin ~ sev.bin) +
guides(fill = "none") +
ylab(expression('Cover (%)')) + xlab('Years Since Fire')
p18
#Save the data
ggsave(filename = 'Fig8c_sev_stand_age_veg_cover.png', height=18, width= 20, units = 'cm', dpi=900)
p18 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire perimeter and fier year by pixel match
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = 'Shrub', linetype = treatment), size = 1) +
#Shrub Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover),
Shrub_Cover.sd = sd(Shrub_Cover), Shrub_Cover.n = n()),
mapping = aes(ymin=Shrub_Cover.mean - 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
ymax=Shrub_Cover.mean + 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
x = stand.age, color = "Shrub",  linetype = treatment), alpha = 0.3) +
#Create a Tree Cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = 'Tree',  linetype = treatment), size = 1) +
#Tree Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, color = "Tree",  linetype = treatment), alpha = 0.3) +
#Create an Herb cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover)), mapping = aes(x = stand.age, y = Herb_Cover.mean, color = 'Herb',  linetype = treatment), size = 1) +
#Herb Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Herb_Cover.mean = mean(Herb_Cover),
Herb_Cover.sd = sd(Herb_Cover), Herb_Cover.n = n()),
mapping = aes(ymin=Herb_Cover.mean - 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
ymax=Herb_Cover.mean + 1.96*(Herb_Cover.sd / sqrt(Herb_Cover.n)),
x = stand.age, color = "Herb",  linetype = treatment), alpha = 0.3) +
#Create a Bare cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover)), mapping = aes(x = stand.age, y = Bare_Cover.mean, color = 'Bare',  linetype = treatment), size = 1) +
#Bare Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, treatment, sev.bin, fire.year.bin) %>%
summarize(Bare_Cover.mean = mean(Bare_Cover),
Bare_Cover.sd = sd(Bare_Cover), Bare_Cover.n = n()),
mapping = aes(ymin=Bare_Cover.mean - 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
ymax=Bare_Cover.mean + 1.96*(Bare_Cover.sd / sqrt(Bare_Cover.n)),
x = stand.age, color = "Bare",  linetype = treatment), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_fill_manual(values = fills) + facet_grid(fire.year.bin ~ sev.bin) +
guides(fill = "none") +
ylab(expression('Cover (%)')) + xlab('Years Since Fire')
p18
#Save the data
ggsave(filename = 'Fig8c_sev_stand_age_veg_cover.png', height=18, width= 20, units = 'cm', dpi=900)
p19 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover[treatment == 'Disturb']) - mean(Tree_Cover[treatment == 'Control'])),
mapping = aes(x = stand.age, y = Tree_Cover.mean), size = 1) +
#Tree Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover[treatment == 'Disturb']) - mean(Tree_Cover[treatment == 'Control']),
Tree_Cover.sd = sd(Tree_Cover[treatment == 'Disturb'])^2 + sd(Tree_Cover[treatment == 'Control'])^2,
Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / Tree_Cover.n),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / Tree_Cover.n),
x = stand.age)) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') + facet_grid(. ~ sev.bin) +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Tree Reduction (%)')) + xlab('Years Since Fire')
p19
#Save the data
ggsave(filename = 'Fig9c_sev_stand_age_tree_cover.png', height=8, width= 20, units = 'cm', dpi=900)
p20 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(AET.mean = mean(AET[treatment == 'Disturb']) - mean(AET[treatment == 'Control'])),
mapping = aes(x = stand.age, y = AET.mean), size = 1) +
#Tree Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(stand.age, sev.bin) %>%
summarize(AET.mean = mean(AET[treatment == 'Disturb']) - mean(AET[treatment == 'Control']),
AET.sd = sd(AET[treatment == 'Disturb'])^2 + sd(AET[treatment == 'Control'])^2,
AET.n = n()),
mapping = aes(ymin=AET.mean - 1.96*(AET.sd / AET.n),
ymax=AET.mean + 1.96*(AET.sd / AET.n),
x = stand.age)) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') + facet_grid(. ~ sev.bin) +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('AET Reduction (mm yr'^-1*')')) + xlab('Years Since Fire')
p20
#Save the data
ggsave(filename = 'Fig10c_sev_stand_age_AET.png', height=8, width= 20, units = 'cm', dpi=900)
p21 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover[treatment == 'Disturb']) - mean(Shrub_Cover[treatment == 'Control'])),
mapping = aes(x = stand.age, y = Shrub_Cover.mean), size = 1) +
#Tree Cover 95% CI
geom_errorbar(data = sev.pixel.sample %>%
filter(stand.age >= -5 & stand.age <= 12 & !is.na(Shrub_Cover) & vi.year <= 2014 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper &  clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower & #Filter to make the later fires for similar to the earlier fires
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>% #Only include places where the fire
group_by(stand.age, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover[treatment == 'Disturb']) - mean(Shrub_Cover[treatment == 'Control']),
Shrub_Cover.sd = sd(Shrub_Cover[treatment == 'Disturb'])^2 + sd(Shrub_Cover[treatment == 'Control'])^2,
Shrub_Cover.n = n()),
mapping = aes(ymin=Shrub_Cover.mean - 1.96*(Shrub_Cover.sd / Shrub_Cover.n),
ymax=Shrub_Cover.mean + 1.96*(Shrub_Cover.sd / Shrub_Cover.n),
x = stand.age)) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') + facet_grid(. ~ sev.bin) +
scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Shrub Change (%)')) + xlab('Years Since Fire')
p21
#Save the data
ggsave(filename = 'Fig11c_sev_stand_age_shrub.png', height=8, width= 20, units = 'cm', dpi=900)
p22 <- ggplot(data = sev.pixel.sample %>% filter(fire.year <= 2010 & fire.year > 1986 & !is.na(tpa_max) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_wrap(.~ sev.bin) + theme_bw() +
geom_point(mapping = aes(color = treatment), size = 1) +
geom_smooth(mapping = aes(color = treatment), method = 'lm') +
stat_cor(mapping = aes(color = treatment)) +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
#Save the data
ggsave(filename = 'Fig7c_sev_stand_age_dieoff.png', height=24, width= 24, units = 'cm', dpi=900)
