q()
remove.packages('terra')
.libPaths
.libPaths()
remove.packages('terra', "C:/Users/can02/AppData/Local/Programs/R-4.0.2/library")
#Set up a python environment
# ee_install(py_env = "rgee")
library('rgee')
#Initialize Google Earth Engine
ee_Initialize(user = 'cnorlen@uci.edu', drive = TRUE)
p <- c('rgee', 'terra', 'sf')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu', drive = 'TRUE')
srtm <- ee$Image("USGS/SRTMGL1_003")
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu')
srtm <- ee$Image("USGS/SRTMGL1_003")
viz <- list(
max = 4000,
min = 0,
palette = c("#000000","#5AAD5A","#A9AD84","#FFFFFF")
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM',
legend = TRUE
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM'
)
ee_check()
ee_check_python()
ee_check_credentials()
ee_Initialize(user='cnorlen@uci.edu', drive = TRUE)
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
print(ee_path_user)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
googledrive::drive_auth(
email = NULL,
cache = ee_path_user
)
full_credentials
drive_condition
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
drive_credentials <- full_credentials[drive_condition]
email <- sub("^[^_]*_", "", basename(drive_credentials))
print(ee_path_user)
print(email)
ee_clean_credentials("cnorlen@uci.edu")
ee_Initialize("cnorlen")
ee_Initialize("cnorlen", drive = TRUE)
googledrive::drive_auth(email="cnorlen@uci.edu")
gargle_oauth_email = "cnorlen@uci.edu"
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
library(googledrive)
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
googledrive::drive_auth(email= "cnorlen@uci.edu")
ee_check_credentials()
ee_Initialize(drive = TRUE)
library(Rcpp)
install.packages('Rcpp',repo='https://cran.r-project.org/')
install.packages("Rcpp", repo = "https://cran.r-project.org/")
library(Rcpp)
install.packages('httpuv',repo='https://cran.r-project.org/')
library(httpuv)
ee_Initialize(drive = TRUE)
library(rgee)
ee_Initialize(drive = TRUE)
p <- c('rgee', 'rgeeExtra','terra', 'sf')
# install.packages('terra',repo='https://cran.r-project.org/')
# library(rgeeExtra)
# install.packages('httpuv',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
# library(rgee)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/pixel_sample')
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu', drive = TRUE)
palettes <- module('users/gena/packages:palettes')
palettes
# install.packages('terra',repo='https://cran.r-project.org/')
library(reticulate)
#Install a python package
py_install("regex")
#Import a python package
regex <- import("regex")
#Load a GEE package
palettes <- module('users/gena/packages:palettes')
#Install a python package
py_install("jsbeautifier")
jsb <- import("jsbeautifier")
#Load a GEE package
palettes <- module('users/gena/packages:palettes')
#Load a GEE package
palettes <- module('users/gena/packages:palettes')
batch <- module('users/fitoprincipe/geetools:batch')
batch
js.batch <- 'users/fitoprincipe/geetools:batch'
batch <- module(js.batch)
js.batch <- 'https:/github.com/fitoprincipe/gee-code-editor/batch'
batch <- module(js.batch)
js.batch <- 'https://github.com/fitoprincipe/gee-code-editor/batch'
batch <- module(js.batch)
js.batch <- 'https://github.com/fitoprincipe/geetools-code-editor/blob/master/batch'
batch <- module(js.batch)
frap.year <- ee$ImageCollection('users/cnorlen/Fire_Dieoff/frap_year_bin')
Map$addLayer(frap.year, {}, 'FRAP Year Data')
Map$addLayer(frap.year$first, {}, 'FRAP Year Data')
frap.year <- ee$Image('users/cnorlen/Fire_Dieoff/frap_year_bin')
Map$addLayer(frap.year, {}, 'FRAP Year Data')
#Load a GEE package
# palettes <- module('users/gena/packages:palettes')
# js.batch <- 'https://github.com/fitoprincipe/geetools-code-editor/blob/master/batch'
# batch <- module(js.batch)
# batch
lsmod <- 'users/sofiaermida/landsat_smw_lst:modules/Landsat_LST.js'
mod <- module(lsmod)
mod
geom <- ee$Geometry$Rectangle(-8.91, 40.0, -8.3, 40.4)
LST <- mod$collection("L8", "2018-05-15", "2018-05-31", geom, TRUE)
print(LST)
Map.addLayer(LST$mean, {}, 'LST')
Map$addLayer(LST$mean, {}, 'LST')
Map$addLayer(ee$Image(LST$mean), {}, 'LST')
Map$addLayer(ee$Image(LST$first), {}, 'LST')
Map$addLayer(LST$first, {}, 'LST')
print(LST)
print(LST$first)
LST$mean
#Load a GEE package
palettes <- module('users/gena/packages:palettes.js')
#Load a GEE package
palettes <- module('users/gena/packages:palettes')
yearViz <- list(
min = 1919,
max = 2020,
palette = c("yellow", "red")
)
Map$addLayer(frap.year, yearViz, 'FRAP Year Data')
ggplot() +
ggR(img = frap.year, layer = 1, maxpixels = 1e10, geom_raster = TRUE, ggLayer = TRUE)
library(ggplot2)
ggplot() +
ggR(img = frap.year, layer = 1, maxpixels = 1e10, geom_raster = TRUE, ggLayer = TRUE)
# # install.packages('terra',repo='https://cran.r-project.org/')
# library(reticulate)
# library(ggplot2)
libary(RStoolbox)
# # install.packages('terra',repo='https://cran.r-project.org/')
# library(reticulate)
# library(ggplot2)
library(RStoolbox)
ggplot() +
ggR(img = frap.year, layer = 1, maxpixels = 1e10, geom_raster = TRUE, ggLayer = TRUE)
yearViz <- list(
min = 1919,
max = 2020,
palette = c("yellow", "orange", "red")
)
Map$addLayer(frap.year, yearViz, 'FRAP Year Data')
frap.raster <- ee_as_raster(image = frap.year, via = 'drive', container = 'Fire_Dieoff')
data_in <- 'D://Fire_Dieoff'
list.files(data_in)
list.files(data_in)
files <- list.files(data_in)
files[1]
frap.year.1 <- rast(file.path(data_in, files[1]))
frap.year.2 <- rast(file.path(data_in, files[3]))
#Combine the two rasters
frap.year <- merge(frap.year.1, frap.year.2)
frap.year.m <- frap.year == 0
frap.year.mask <-  mask(frap.year, mask = frap.year.m, maskvalues = 1)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e10, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis()
RSToolbox::toRaster
RStoolbox::toRaster
install.packages('RStoolbox',repo='https://cran.r-project.org/')
install.packages('RStoolbox',repo='https://cran.r-project.org/')
install.packages("RStoolbox", repo = "https://cran.r-project.org/")
RStoolbox::toRaster
p <- c('reticulate', 'rgee', 'rgeeExtra','terra', 'sf', 'ggplot2', 'RStoolbox')
# # install.packages('terra',repo='https://cran.r-project.org/')
# library(reticulate)
# library(ggplot2)
# library(RStoolbox)
# install.packages('RStoolbox',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e10, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis()
library(raster)
frap.year.1 <- raster(file.path(data_in, files[1]))
frap.year.2 <- raster(file.path(data_in, files[3]))
#Combine the two rasters
frap.year <- merge(frap.year.1, frap.year.2)
frap.year.m <- frap.year == 0
frap.year.mask <-  mask(frap.year, mask = frap.year.m, maskvalue = 1)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e10, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e5, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis()
# # install.packages('terra',repo='https://cran.r-project.org/')
library(viridis)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e5, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e5, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis(na.value = NA)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e5, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis(na.value = NA) + theme_bw()
# # install.packages('terra',repo='https://cran.r-project.org/')
library(tigris)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
coord_sf() +
scale_fill_viridis(na.value = NA) + theme_bw()
us_states_20m <- states(cb = TRUE, resolution = "20m", class = "sf")
us_states_20m <- st_transform(us_states_20m, c)
ca_20m <- us_states_20m[us_states_20m$NAME == "California", ]
ca_20m <- st_as_sf(ca_20m)
ca_20m <- st_transform(ca_20m, c)
c <- crs("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
us_states_20m <- st_transform(us_states_20m, c)
ca_20m <- us_states_20m[us_states_20m$NAME == "California", ]
ca_20m <- st_as_sf(ca_20m)
ca_20m <- st_transform(ca_20m, c)
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
coord_sf() +
scale_fill_viridis(na.value = NA) + theme_bw()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
coord_sf() +
scale_fill_brewer(palette = 'RdYlGr', na.value = NA) + theme_bw()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
coord_sf() +
scale_fill_brewer(palette = 'RdYlGn', na.value = NA) + theme_bw()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
coord_sf() +
scale_fill_viridis(name = 'Fire Year', palette = 'inferno', na.value = NA) + theme_bw()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
coord_sf() +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw()
usfs_in <- "D:\\Large_Files\\USFS\\data\\subsections"
usfs.regions <- st_read(file.path(usfs_in, 'S_USA.EcomapSubsections.shp'))
usfs.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S == 'M261Eq' | MAP_UNIT_S == 'M261Es' | MAP_UNIT_S == 'M261Eu' | MAP_UNIT_S == 'M261Er' | MAP_UNIT_S == 'M261Eo') # | MAP_UNIT_S == 'M261Ev') #MAP_UNIT_S == 'M261Et' |
#Merge Sierra Nevada polygons into one larger polygon
usfs.sierra.union <- usfs.sierra %>% st_union()
ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.6,  fill = NA) +
coord_sf() +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw()
p1 <- ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.6,  fill = NA) +
coord_sf() + xlab('longitude') + xlab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw()
p1 <- ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.6,  fill = NA) +
coord_sf() + xlab('longitude') + xlab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical"))
p1
p1 <- ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.6,  fill = NA) +
coord_sf() + xlab('longitude') + xlab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
p1 <- ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.6,  fill = NA) +
coord_sf() + ylab('longitude') + xlab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
ggsave(filename = 'Fig36_FRAP_conifer_forest_map.png', height=10, width= 20, units = 'cm', dpi=900)
p1 <- ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + ylab('longitude') + xlab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
ggsave(filename = 'Fig36_FRAP_conifer_forest_map.png', height=12, width= 6, units = 'cm', dpi=900)
ggsave(filename = 'Fig36_FRAP_conifer_forest_map.png', height=16, width= 12, units = 'cm', dpi=900)
p1 <- ggplot() +
ggR(img = frap.year.mask, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
ggsave(filename = 'Fig36_FRAP_conifer_forest_map.png', height=16, width= 12, units = 'cm', dpi=900)
