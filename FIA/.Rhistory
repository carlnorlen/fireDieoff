drive_condition
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
drive_credentials <- full_credentials[drive_condition]
email <- sub("^[^_]*_", "", basename(drive_credentials))
print(ee_path_user)
print(email)
ee_clean_credentials("cnorlen@uci.edu")
ee_Initialize("cnorlen")
ee_Initialize("cnorlen", drive = TRUE)
googledrive::drive_auth(email="cnorlen@uci.edu")
gargle_oauth_email = "cnorlen@uci.edu"
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
library(googledrive)
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
googledrive::drive_auth(email= "cnorlen@uci.edu")
ee_check_credentials()
ee_Initialize(drive = TRUE)
library(Rcpp)
install.packages('Rcpp',repo='https://cran.r-project.org/')
install.packages("Rcpp", repo = "https://cran.r-project.org/")
library(Rcpp)
install.packages('httpuv',repo='https://cran.r-project.org/')
library(httpuv)
ee_Initialize(drive = TRUE)
library(rgee)
ee_Initialize(drive = TRUE)
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom', 'rFIA', 'sf', 'grid', 'gridExtra', 'purrr')
# install.packages("rFIA")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
setwd('C:/Users/can02/mystuff/subsequent-drought')
#Add Data Sets
fiaCA <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_CSV' #Downloaedd from FIA DataMart
dir_usfs <- "D:\\Large_Files\\USFS\\data\\subsections"
#Load teh FIA data
ca <- readFIA(fiaCA)
#Creating a plot of mortality by tree species in two time periods and drought sequences.
#Create a notin operator
`%notin%` <- Negate(`%in%`)
#Possible way to deal with non-conifer forests
forest.names <- ca$REF_FOREST_TYPE
forest.names$FORTYPCD <- forest.names$VALUE
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo' ,'M262Bb' ,'M262Ba') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo' ,'M262Bb' ,'M262Ba') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, COMMON_NAME, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.2015 <- left_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR','COMMON_NAME'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Combine multiple inventory years into one plot estimate
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.2015 <- left_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
join.2015$BAA.dead <- join.2015$BAA.dead * (1/4.356)
join.2015$BAA <- join.2015$BAA * (1/4.356)
#Calculate total Basal Area
join.2015$BAA.all<- join.2015$BAA + join.2015$BAA.dead
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.2015 <- left_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Combine the 1999-2002 and 2012-2015 plots values
# join.second.2002$time.period <- '1999-2002'
# join.second.2015$time.period <- '2012-2015'
# all.second <- rbind(join.second.2002, join.second.2015)
#Combine all the all the data together for drought regions
# all.both$sequence <- 'Both Droughts'
# all.second$sequence <- '2nd Drought Only'
# all.forest <- rbind(all.both, all.second)
#Try to do a mortality without tree species analysis
##Both Droughts regions estimates
#Doing a combined estimated of the Basal Area for Both Droughts during 1999-2002
#Total basal area and tpa estimates by species
# all.forest$tree_type <- recode(.x=all.forest$COMMON_NAME, 'California black oak' = 'oak', 'California juniper' = 'juniper', 'California live oak' = 'oak', 'California sycamore' = 'deciduous', 'Coulter pine' = 'pine', 'chinkapin oak' = 'oak', 'Jeffrey pine' = 'pine',
#                                  'bigcone Douglas-fir' = 'fir', 'bigleaf maple' = 'deciduous', 'canyon live oak' = 'oak', 'curlleaf mountain-mahogany' = 'deciduous', 'incense-cedar' = 'cedar', 'interior live oak' = 'oak', 'limber pine' = 'pine',
#                                  'lodgepole pine' = 'pine', 'ponderosa pine' = 'pine', 'singleleaf pinyon' = 'pine', 'sugar pine' = 'pine', 'Utah juniper' = 'juniper', 'western juniper' = 'juniper', 'white alder' = 'deciduous', 'white fir' = 'fir', 'California laurel' = 'deciduous',
#                                  'California-laurel' = 'deciduous', 'Oregon ash' = 'deciduous', 'Douglas-fir' = 'fir', 'honey mesquite' = 'deciduous', 'desert ironwood' = 'deciduous', 'California red fir' = 'fir', 'California buckeye' = 'deciduous', 'Engelmann oak' = 'oak', 'grand fir' = 'fir', 'western white pine' = 'pine',
#                                  "western white pine" = 'pine', "whitebark pine" = 'pine', "mountain hemlock" = "other conifer", "gray or California foothill pine" = "pine", "foxtail pine" = 'pine', "blue oak" = 'oak', "California white oak" = 'oak', "quaking aspen" = 'deciduous',
#                                  "giant sequoia" = 'other conifer', "Unknown dead conifer" = 'unknown conifer', "ash spp." = 'deciduous', "black cottonwood" = 'deciduous', "California torreya (nutmeg)" = 'deciduous', "Oregon white oak" = 'oak', "Port-Orford-cedar" = 'cedar', "Pacific dogwood" = 'deciduous')
#Convert units for Basal area
join.2015$BAA.dead <- join.2015$BAA.dead * (1/4.356)
join.2015$BAA <- join.2015$BAA * (1/4.356)
#Calculate total Basal Area
join.2015$BAA.all<- join.2015$BAA + join.2015$BAA.dead
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, polys = ECOSUBCD, returnSatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, polys = ECOSUBCD, returnSatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Combine multiple inventory years into one plot estimate
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.2015 <- left_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, polys = ECOSUBCD, returnSatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, polys = ECOSUBCD, returnSatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, polys = ECOSUBCD, returnSpatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, polys = ECOSUBCD, returnSpatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa?
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, polys = ECOSUBCD, returnSpatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, returnSpatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa()
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, returnSpatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.all.2015 <- tpa(ca, byPlot = TRUE, treeType = 'live', bySpecies = FALSE, returnSpatial = TRUE, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.mort.2015
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
join.2015 <- left_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
join.2015 <- st_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
plot(join.2015)
plot(join.2015['BAA.dead'])
join.2015$BAA.dead <- join.2015$BAA.dead * (1/4.356)
join.2015$BAA <- join.2015$BAA * (1/4.356)
#Calculate total Basal Area
join.2015$BAA.all<- join.2015$BAA + join.2015$BAA.dead
plot(join.2015['BAA'])
usfs_in <- "D:\\Large_Files\\USFS\\data\\subsections"
usfs.regions <- st_read(file.path(usfs_in, 'S_USA.EcomapSubsections.shp'))
usfs.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S =='M261Eq' | MAP_UNIT_S =='M261Eu' | MAP_UNIT_S =='M261Er'  | MAP_UNIT_S =='M261Eo'  | MAP_UNIT_S =='M261Es' | MAP_UNIT_S ==
'M261Ea'  | MAP_UNIT_S =='M261Eb'  | MAP_UNIT_S =='M261Ec'  | MAP_UNIT_S =='M261Ed'  | MAP_UNIT_S =='M261Ef'  | MAP_UNIT_S =='M261Eg'  | MAP_UNIT_S =='M261Eh'  | MAP_UNIT_S =='M261Ej'  | MAP_UNIT_S =='M261Ek'  | MAP_UNIT_S =='M261El'  | MAP_UNIT_S =='M261Em'  | MAP_UNIT_S =='M261Et')
tpa.all.2015 <- tpa(ca , byPlot = TRUE, treeType = 'live', bySpecies = FALSE, returnSpatial = TRUE, polys = usfs.sierra, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, byPlot = TRUE, treeType = 'dead', bySpecies = FALSE, returnSpatial = TRUE, polys = usfs.sierra, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.mort.2015
#Combine multiple inventory years into one plot estimate
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
#For a spatial join
join.2015 <- st_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Convert units for Basal area
join.2015$BAA.dead <- join.2015$BAA.dead * (1/4.356)
join.2015$BAA <- join.2015$BAA * (1/4.356)
#Calculate total Basal Area
join.2015$BAA.all<- join.2015$BAA + join.2015$BAA.dead
plotFIA(join.2015, y = 'BAA')
plotFIA(join.2015, y = 'BAA.dead')
join.2015
tpa.all.2015 <- tpa(ca , treeType = 'live', bySpecies = FALSE, returnSpatial = TRUE, polys = usfs.sierra, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & #Try removing 2015
DIA >= 1, #Trying to remove any earlier MORTYR values
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
#Dead basal area
tpa.mort.2015 <- tpa(ca, treeType = 'dead', bySpecies = FALSE, returnSpatial = TRUE, polys = usfs.sierra, treeDomain = INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") &
DIA >= 1 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq', 'M261Eu', 'M261Er' ,'M261Eo' ,'M261Es',
'M261Ea' ,'M261Eb' ,'M261Ec' ,'M261Ed' ,'M261Ef' ,'M261Eg' ,'M261Eh' ,'M261Ej' ,'M261Ek' ,'M261El' ,'M261Em' ,'M261Et') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.mort.2015
#Combine multiple inventory years into one plot estimate
tpa.mort.2015 <- tpa.mort.2015 %>% dplyr::select(pltID, YEAR, BAA, TPA) %>% dplyr::rename(BAA.dead = BAA, TPA.dead = TPA)
#For a spatial join
join.2015 <- st_join(tpa.all.2015, tpa.mort.2015, by = c('pltID', 'YEAR'))
#Replace the NAs with 0s
join.2015 <- join.2015 %>% dplyr::mutate(BAA.dead = replace(BAA.dead, is.na(BAA.dead), 0))
#Convert units for Basal area
join.2015$BAA.dead <- join.2015$BAA.dead * (1/4.356)
join.2015$BAA <- join.2015$BAA * (1/4.356)
#Calculate total Basal Area
join.2015$BAA.all<- join.2015$BAA + join.2015$BAA.dead
join.2015
plotFIA(join.2015, y = 'BAA.dead')
plotFIA(join.2015)
plotFIA(join.2015 y = 'BAA')
plotFIA(join.2015, y = 'BAA')
plotFIA(join.2015, y = BAA)
plotFIA(join.2015, y = 'BAA.dead')
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom')
# If necessary: install/update packages
# install.packages('rlang',repo='https://cloud.r-project.org/')
# library("agricolae")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
#setwd("/C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data")
#cd /C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data
#cd /C/Users/can02/mystuff/fireDieoff/FIA
#Command for calling the script in the command line: R < stand_age_dieoff.r --vanilla
#INstalling packages: install.packages('RColorBrewer',repo='https://cran.cnr.berkeley.edu/')
setwd('C:/Users/can02/mystuff/fireDieoff/FIA')
#Add Data Sets
sql_dir <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_version' #Download from FIA DataMart
fiaCA <- file.path(sql_dir, 'FIADB_CA.db')
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = fiaCA)
#Add extension functions, allows more math functions
initExtension(db)
# summary(db)
#Query for FIA live trees, 2014-2019
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd,
c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage,
c.dstrbcd1, c.dstrbyr1
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means non-forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 1.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
--South Sierra
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR
--NOrth Sierra
P.ECOSUBCD = 'M261Ea' OR P.ECOSUBCD = 'M261Eb' OR P.ECOSUBCD = 'M261Ec' OR P.ECOSUBCD = 'M261Ed' OR P.ECOSUBCD = 'M261Ef' OR P.ECOSUBCD = 'M261Eg' OR P.ECOSUBCD = 'M261Eh' OR P.ECOSUBCD = 'M261Ej' OR P.ECOSUBCD = 'M261Ek' OR P.ECOSUBCD = 'M261El' OR P.ECOSUBCD = 'M261Em' OR P.ECOSUBCD = 'M261Et')
--Combined Sierra and SoCal Stand Age
--AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR P.ECOSUBCD = 'M262Bd' OR P.ECOSUBCD = 'M262Be' OR P.ECOSUBCD = 'M262Bg' OR P.ECOSUBCD = 'M262Bh' OR P.ECOSUBCD = 'M262Bf' OR P.ECOSUBCD = 'M262Bo' OR P.ECOSUBCD = 'M262Bi' OR P.ECOSUBCD = 'M262Bm' OR P.ECOSUBCD = 'M262Bl' OR P.ECOSUBCD = 'M262Bc' OR P.ECOSUBCD = 'M262Bp' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba')
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) -- No Fires OR c.dstrbcd1 = 30 OR c.dstrbcd1 = 31 OR c.dstrbcd1 = 32)
")
#DSTRBCD1 == 30, 31, 32 reference fires
all <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(all)
#Convert per acre to per hectare
all$count <- all$count * 2.47105 # Convert to per hectare
all$DIA <- all$DIA * (2.54) #Convert to centimeters
all$basal_area <- (((all$DIA / 2)^2) * pi)*(1/10000) * all$count
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
summary(join)
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE), ECOSUBCD = median(ECOSUBCD))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area), ECOSUBCD = median(ECOSUBCD))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd,
c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage,
c.dstrbcd1, c.dstrbyr1, p.ecosubcd
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means non-forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 1.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
--South Sierra
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR
--NOrth Sierra
P.ECOSUBCD = 'M261Ea' OR P.ECOSUBCD = 'M261Eb' OR P.ECOSUBCD = 'M261Ec' OR P.ECOSUBCD = 'M261Ed' OR P.ECOSUBCD = 'M261Ef' OR P.ECOSUBCD = 'M261Eg' OR P.ECOSUBCD = 'M261Eh' OR P.ECOSUBCD = 'M261Ej' OR P.ECOSUBCD = 'M261Ek' OR P.ECOSUBCD = 'M261El' OR P.ECOSUBCD = 'M261Em' OR P.ECOSUBCD = 'M261Et')
--Combined Sierra and SoCal Stand Age
--AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR P.ECOSUBCD = 'M262Bd' OR P.ECOSUBCD = 'M262Be' OR P.ECOSUBCD = 'M262Bg' OR P.ECOSUBCD = 'M262Bh' OR P.ECOSUBCD = 'M262Bf' OR P.ECOSUBCD = 'M262Bo' OR P.ECOSUBCD = 'M262Bi' OR P.ECOSUBCD = 'M262Bm' OR P.ECOSUBCD = 'M262Bl' OR P.ECOSUBCD = 'M262Bc' OR P.ECOSUBCD = 'M262Bp' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba')
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) -- No Fires OR c.dstrbcd1 = 30 OR c.dstrbcd1 = 31 OR c.dstrbcd1 = 32)
")
#DSTRBCD1 == 30, 31, 32 reference fires
all <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(all)
#Convert per acre to per hectare
all$count <- all$count * 2.47105 # Convert to per hectare
all$DIA <- all$DIA * (2.54) #Convert to centimeters
all$basal_area <- (((all$DIA / 2)^2) * pi)*(1/10000) * all$count
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE), ECOSUBCD = median(ECOSUBCD))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area), ECOSUBCD = median(ECOSUBCD))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
summary(join)
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE), ECOSUBCD = first(ECOSUBCD))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area), ECOSUBCD = first(ECOSUBCD))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
summary(join)
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE), ECOSUBCD = first(ECOSUBCD))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
summary(join)
ecosubcd.summary <- join %>% group_by(ECOSUBCD) %>% summarize(BAA.all = mean(basal_area.all), BAA.dead = mean(basal_area.dead), stdage.mean = mean(STDAGE), tpa.all = mean(tpa.all), tpa.dead = mean(tpa.dead))
ecosubcd.summary
ecosubcd.summary <- join %>% filter(!is.na(STDAGE)) %>% group_by(ECOSUBCD) %>% summarize(BAA.all = mean(basal_area.all), BAA.dead = mean(basal_area.dead), stdage.mean = mean(STDAGE), tpa.all = mean(tpa.all), tpa.dead = mean(tpa.dead))
ecosubcd.summary
usfs.sierra
ecos.sum <- ecosubcd.summary %>% rename(ECOSUBCD = MAP_UNIT_S)
ecos.sum
usfs.sierra
#REname the ECOSUBCD Column
ecos.sum <- ecosubcd.summary %>% rename(MAP_UNIT_S = ECOSUBCD)
ecos.sum
usfs.sierra
ecosubcd.join <- st_join(usfs.sierra, ecos.sum)
ecosubcd.join <- st_join(ecos.sum, usfs.sierra)
ecosubcd.join <- left_join(usfs.sierra, ecos.sum, by = 'MAP_UNIT_S')
ecosubcd.join
ggplot() +
geom_sf(data=ecosubcd.join, aes(fill=stdage.mean, lwd=0.4, alpha=0.4)) +
theme_bw()+
scale_fill_viridis_d("Average Tree Age")
ggplot() +
geom_sf(data=ecosubcd.join, aes(fill=stdage.mean, lwd=0.4, alpha=0.4)) +
theme_bw()+
scale_fill_viridis_c("Average Tree Age")
ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=stdage.mean), lwd=0.4, alpha=0.4) +
theme_bw()+
scale_fill_viridis_c("Average Tree Age")
p1 <- ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=stdage.mean), lwd=0.8, alpha=0.6) +
theme_bw()+
scale_fill_viridis_c("Average Tree Age")
p1
p2 <- ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=BAA.all), lwd=0.8, alpha=0.6) +
theme_bw()+
scale_fill_viridis_c("Mean Basal Area (m^2/ha")
p2
p3 <- ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=BAA.dead), lwd=0.8, alpha=0.6) +
theme_bw()+
scale_fill_viridis_c("Mean Mortality (m^2/ha")
p3
p1 <- ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=stdage.mean), lwd=0.8, alpha=0.6) +
theme_bw()+
scale_fill_viridis_c("Average Tree Age")
p1
ggsave(filename = 'Fig20_FIA_average_tree_age.png', height=16, width= 12, units = 'cm', dpi=900)
p2 <- ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=BAA.all), lwd=0.8, alpha=0.6) +
theme_bw()+
scale_fill_viridis_c("Mean Basal Area (m^2/ha")
p2
ggsave(filename = 'Fig21_FIA_average_basal_area.png', height=16, width= 12, units = 'cm', dpi=900)
p3 <- ggplot() +
geom_sf(data=ecosubcd.join, mapping = aes(fill=BAA.dead), lwd=0.8, alpha=0.6) +
theme_bw()+
scale_fill_viridis_c("Mean Mortality (m^2/ha")
p3
ggsave(filename = 'Fig21_FIA_average_mortality.png', height=16, width= 12, units = 'cm', dpi=900)
