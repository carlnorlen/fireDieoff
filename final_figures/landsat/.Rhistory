ylab('Die-off\n(% Area)')
#ADS Die-off proportion time series graph
#Try adding geom_errorbar
p2 <- ggplot() +
geom_rect(data = data.frame(xmin = as.Date('1998-10-01'), xmax = as.Date('2002-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_line(data = time.series, mapping = aes(x = time_start, y = dNDMI_mean, color = drought), size = 1) +
# geom_ribbon(data=time.series, mapping=aes(x=time_start, ymin=dNDMI_mean - dNDMI_stdDev, ymax=dNDMI_mean + dNDMI_stdDev, fill = drought), alpha = 0.2, outline.type = c("both")) +
geom_errobar(data=time.series, mapping=aes(x=time_start, ymin=dNDMI_mean - dNDMI_stdDev, ymax=dNDMI_mean + dNDMI_stdDev, color = drought)) +
theme_bw() + geom_hline(yintercept = 0, linetype='dashed') +
# scale_linetype_manual(values=c("twodash", "solid")) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), axis.title.x=element_blank(), legend.position = 'none',
axis.text.x=element_blank(), plot.margin = unit(c(0.5,0.5,0.5,0.5), "pt"), legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab('dNDMI')
#Pr-ET time series graph
p3 <- ggplot() +
geom_rect(data = data.frame(xmin = as.Date('1998-10-01'), xmax = as.Date('2002-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_line(data = time.series, mapping = aes(x = time_start, y = PET_mean, color = drought), size = 1) +
# geom_ribbon(data= time.series, mapping=aes(x=time_start, ymin=PET_mean - PET_stdDev, ymax=PET_mean + PET_stdDev, fill = drought), alpha = 0.2, outline.type = c("both")) +
geom_errobar(data=time.series, mapping=aes(x=time_start, ymin=dNDMI_mean - dNDMI_stdDev, ymax=dNDMI_mean + dNDMI_stdDev, color = drought)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
# scale_linetype_manual(values=c("twodash", "solid")) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
theme(axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), axis.title.x = element_text(size = 10), legend.position = 'none',
axis.title.y = element_text(size = 10), plot.margin = unit(c(0.5,0.5,0.5,0.5), "pt"), legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
xlab('Year') + ylab(expression('Pr-ET\n(mm yr'^-1*')'))
p1 <- ggplot() +
geom_rect(data = data.frame(xmin = as.Date('1998-10-01'), xmax = as.Date('2002-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_line(data = time.series, mapping = aes(x = time_start, y = tpa_low_area, color = drought), size = 1, na.rm = TRUE) +
theme_bw() + guides(color = guide_legend(title = 'Drought Sequence', nrow = 2, title.position = 'top'), linetype = FALSE) +
# scale_linetype_manual(values=c("twodash", "solid")) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), axis.title.x = element_blank(), legend.position = c(0.2, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(), plot.margin = unit(c(0.5,0.5,0.5,0.5), "pt"), legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab('Die-off\n(% Area)')
#ADS Die-off proportion time series graph
#Try adding geom_errorbar
p2 <- ggplot() +
geom_rect(data = data.frame(xmin = as.Date('1998-10-01'), xmax = as.Date('2002-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_line(data = time.series, mapping = aes(x = time_start, y = dNDMI_mean, color = drought), size = 1) +
# geom_ribbon(data=time.series, mapping=aes(x=time_start, ymin=dNDMI_mean - dNDMI_stdDev, ymax=dNDMI_mean + dNDMI_stdDev, fill = drought), alpha = 0.2, outline.type = c("both")) +
geom_errorbar(data=time.series, mapping=aes(x=time_start, ymin=dNDMI_mean - dNDMI_stdDev, ymax=dNDMI_mean + dNDMI_stdDev, color = drought)) +
theme_bw() + geom_hline(yintercept = 0, linetype='dashed') +
# scale_linetype_manual(values=c("twodash", "solid")) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10), axis.title.x=element_blank(), legend.position = 'none',
axis.text.x=element_blank(), plot.margin = unit(c(0.5,0.5,0.5,0.5), "pt"), legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab('dNDMI')
#Pr-ET time series graph
p3 <- ggplot() +
geom_rect(data = data.frame(xmin = as.Date('1998-10-01'), xmax = as.Date('2002-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
geom_line(data = time.series, mapping = aes(x = time_start, y = PET_mean, color = drought), size = 1) +
# geom_ribbon(data= time.series, mapping=aes(x=time_start, ymin=PET_mean - PET_stdDev, ymax=PET_mean + PET_stdDev, fill = drought), alpha = 0.2, outline.type = c("both")) +
geom_errorbar(data=time.series, mapping=aes(x=time_start, ymin=dNDMI_mean - dNDMI_stdDev, ymax=dNDMI_mean + dNDMI_stdDev, color = drought)) +
theme_bw() +
geom_hline(yintercept = 0, linetype='dashed') +
# scale_linetype_manual(values=c("twodash", "solid")) +
scale_color_manual(values=c("#E66100", "#5D3A9B")) +
theme(axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), axis.title.x = element_text(size = 10), legend.position = 'none',
axis.title.y = element_text(size = 10), plot.margin = unit(c(0.5,0.5,0.5,0.5), "pt"), legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
xlab('Year') + ylab(expression('Pr-ET\n(mm yr'^-1*')'))
(p1 / p2 / p3) + plot_annotation(tag_levels = 'a', theme = theme(legend.margin=margin(t = 0, unit='cm'))) + plot_layout(heights = c(0.95,0.95,1))
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggplot2', 'magrittr', 'stats', 'patchwork','ggpmisc', 'raster', 'RStoolbox', 'quantreg','segmented', 'RColorBrewer',
'gt', 'gtsummary', 'webshot', 'stargazer', 'kableExtra', 'broom', 'svglite','sjPlot','purrr', 'sjmisc', 'magick', 'magrittr', 'knitr', 'xtable')
# install.packages('quantreg',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
# dir <- "C:\\Users\\Carl\\mystuff\\Large_Files\\CECS"
dir <- "D:\\Large_Files\\CECS"
memory.limit(32000)
#Set the working directory
# setwd('C:/Users/can02/mystuff/fireDieoff/final_figures/landsat')
setwd('C:/Users/Carl/mystuff/fireDieoff/final_figures/landsat')
#The data directory
# dir_in <- "D:\\Fire_Dieoff"
# fire_in <- "D:\\Large_Files\\Fire_Dieoff"
dir_in <- "C:\\Users\\Carl\\mystuff\\Large_Files\\Fire_Dieoff"
# fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the Wildfire data
frap.fire.data <- read.csv(file.path(dir_in, "fire_south_sierra_FRAP_wildfire_500pt_fire_year_5tree_ts8_300m_20230403.csv"), header = TRUE, na.strings = "NaN")
#Add the treatment column
frap.fire.data$treatment <- 'Disturb'
#Add the Wildfire buffer data
frap.control.data <- read.csv(file.path(dir_in, "control_south_sierra_FRAP_2km_buffer_500pt_fire_year_5tree_ts16_300m_20230403.csv"), header = TRUE, na.strings = "NaN")
#Add Fire Columns
frap.control.data$fire_count_2010 <- -9999
frap.control.data$fire_type_2019 <- -9999
frap.control.data$fire_year_2019 <- -9999
frap.control.data$fire_year_2019 <- -9999
frap.control.data$fire_count_2019 <- -9999
frap.control.data$fire_type_2020 <- -9999
frap.control.data$fire_year_2020 <- -9999
frap.control.data$fire_count_2020 <- -9999
#Add the treatment Column
frap.control.data$treatment <- 'Control'
#Combine the data together
frap.pixel.data <- rbind(frap.fire.data, frap.control.data)
#Add the Rx fire data
rx.data <- read.csv(file.path(dir_in, "fire_south_sierra_FRAP_rxfire_500pt_fire_year_5tree_ts8_300m_20230403.csv"), header = TRUE, na.strings = "NaN")
#Add the treatment column
rx.data$treatment <- 'Disturb'
#Add teh Rx fire buffer data
rx.control.data <- read.csv(file.path(dir_in, "control_south_sierra_Rx_2km_buffer_500pt_fire_year_5tree_ts16_300m_20230403.csv"), header = TRUE, na.strings = "NaN")
#Add Fire Columns
rx.control.data$fire_count_2010 <- -9999
rx.control.data$fire_type_2019 <- -9999
rx.control.data$fire_year_2019 <- -9999
rx.control.data$fire_year_2019 <- -9999
rx.control.data$fire_count_2019 <- -9999
rx.control.data$fire_type_2020 <- -9999
rx.control.data$fire_year_2020 <- -9999
rx.control.data$fire_count_2020 <- -9999
#Add the treatment column
rx.control.data$treatment <- 'Control' #Try making this 1-km versus, 2-km
#Combine the data together
rx.pixel.data <- rbind(rx.data, rx.control.data)
#Combine all the data together
pixel.data <- rbind(frap.pixel.data, rx.pixel.data)
`%notin%` <- Negate(`%in%`)
# summary(pixel.data)
#Convert fire data -9999 to NAs
# pixel.data[pixel.data$fire_type_2010 == -9999,]$fire_type_2010 <- NA
# pixel.data[pixel.data$fire_year_2010 == -9999,]$fire_year_2010 <- NA
pixel.data[pixel.data$fire_type_2019 == -9999,]$fire_type_2019 <- NA
pixel.data[pixel.data$fire_year_2019 == -9999,]$fire_year_2019 <- NA
pixel.data[pixel.data$fire_type_2020 == -9999,]$fire_type_2020 <- NA
pixel.data[pixel.data$fire_year_2020 == -9999,]$fire_year_2020 <- NA
#Use the FRAP fire perimeter year (use fire year 2010)
pixel.data$fire.year <- pixel.data$fire_year_2010
#Add the fire year bins
pixel.data <- pixel.data %>% mutate(fire.year.bin = case_when(
treatment == 'Control' | fire.year < 1980 ~ 'Control',
fire.year >= 1980 & fire.year <= 2010 ~ 'Disturb',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
pixel.data <- pixel.data %>% mutate(fire.type.bin = case_when(
fire_type_2010 == 1 ~ 'Wildfire',
fire_type_2010 == 2 ~ 'Rxfire'
))
summary(pixel.data)
pixel.data$fire.year.bin = with(pixel.data, factor(fire.year.bin, levels = c('2019-2020', '2011-2018', 'Control', 'Disturb')))#
#Recode the veg type data
# pixel.data$veg_name <- recode(.x=pixel.data$lf_evt_2001, .default = NA_character_, '2015' = 'Redwood', '2019' = 'Pinyon Juniper', '2020' = 'Bristlecone Pine', '2027' = 'Mixed Conifer', '2028' = 'White Fir', '2031' = 'Jeffrey Pine',
#                               '2032' = 'Red Fir', '2033' = 'Subalpine', '2034' = 'Knobcone Pine', '2043' = 'Mixed Conifer', '2044' = 'Subalpine', '2045' = 'Mixed Conifer',
#                               '2053' = 'Ponderosa Pine', '2058' = 'Lodgepole Pine', '2061' = 'Mixed Conifer', '2112' = 'Blue Oak Woodland', '2172' = 'White Fir', '2173' = 'Lodgepole Pine', '2201' = 'Oregon White Oak', '2230' = 'Blue Oak - Digger Pine')
#Select strat categories for fire treatments
#Select strat categories for fire treatments
frap.disturb <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n())
rx.disturb <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n())
# print(frap.strat)
frap.control <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n())
rx.control <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n())
#Get final stratlayers and numbers to sample from each
frap.strat <- inner_join(frap.disturb, frap.control, by = 'stratlayer') %>%
group_by(stratlayer) %>% summarize(n = min(n.x,n.y))
rx.strat <- inner_join(rx.disturb, rx.control, by = 'stratlayer') %>% #Inner Join the disturb and control data sets
group_by(stratlayer) %>% summarize(n = min(n.x,n.y)) #Take the minimum of the number of pixels as the sample number
# rx.strat %>% pull(n)
#Set the random number seed
set.seed(4561)
# colnames(pixel.data %>% dplyr::select(-'AET':'tpa_max'))
#Sample the prescribed fire control pixels
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Sample the Wildfire Control control pixels
frap.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Sample the moderate severity control pixels
#Make sure the stratlayer bins match with the sampled control bins
#Make sure the stratlayer disturb bins match with the sampled control bins
rx.disturb <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Sample the Wildfire Disturb pixels
frap.disturb <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data                                                                                                                 fire.type.bin == 'Wildfire' ~ stratlayer %in% (frap.strat %>% pull(stratlayer))))
#Combine the sampled data back together
pixel.sample <- rbind(frap.disturb, rx.disturb, rx.sample, frap.sample)
#Convert data to long format
#This should be moved later
pixel.sample <- pixel.sample %>%
pivot_longer(cols = X10_AET:X9_tpa_max, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
#Convert the year outputs to actual years
pixel.sample$year <- as.numeric(pixel.sample$year) + 1984
#Convert missing TPA data to NAs
pixel.sample[pixel.sample$tpa_max < 0,]$tpa_max <- NA
#Convert to trees per hectare
pixel.sample$tpa_max <- pixel.sample$tpa_max * 2.47105
#Make the dates into date time format for R
pixel.sample$date <- as.Date(as.character(pixel.sample$year), format = '%Y')
pixel.sample$vi.year <- pixel.sample$year
pixel.sample$stand.age <- as.numeric(pixel.sample$year) - as.numeric(pixel.sample$fire.year)
#Update Cover data to 100% scale
#Update Cover data to 100% scale
pixel.sample$Tree_Cover.2 <- pixel.sample$Tree_Cover / 100
pixel.sample$Shrub_Cover.2 <- pixel.sample$Shrub_Cover / 100
pixel.sample$Herb_Cover.2 <- pixel.sample$Herb_Cover / 100
pixel.sample$Bare_Cover.2 <- pixel.sample$Bare_Cover / 100
#Add Montana Veg Cover
pixel.sample$Tree_Cover <- pixel.sample$TRE
pixel.sample$Shrub_Cover <- pixel.sample$SHR
pixel.sample$Herb_Cover <- pixel.sample$AFG + pixel.sample$PFG
pixel.sample$Bare_Cover <- pixel.sample$BGR
# #Rename Montana Tree Cover
# pixel.sample$Tree_Cover <- pixel.sample$TRE
#Convert the SPI48 scale back to decimal
pixel.sample$SPI48 <- pixel.sample$SPI48 / 100
#Try to fix soil moisture by dividing by 10
pixel.sample$Soil_Moisture <- pixel.sample$Soil_Moisture / 10
#Calculate Pr-ET
pixel.sample$PrET <- pixel.sample$ppt - pixel.sample$AET
#Filter the data into subsets for modeling
pixel.filter <- pixel.sample %>% filter(fire.year <= 2010 & fire.year >= 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
# filter(case_when(fire.type.bin == 'Wildfire' ~ stratlayer %in% frap.strat,
#                  fire.type.bin == 'Rxfire' ~ stratlayer %in% rx.strat)) %>%
dplyr::group_by(system.index) %>%
summarize(dTree = mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2011, 2012)]),
RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])) / mean(Tree_Cover[vi.year %in% c(2011, 2012)]),
Tree_Cover = mean(Tree_Cover[vi.year %in% c(2011,2012)]),
PrET_4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
Water_Stress = Water_Stress[vi.year == 2015],
ADS = mean(tpa_max[vi.year %in% c(2015, 2016, 2017)]),
dNDMI = mean(NDMI[vi.year %in% c(2016, 2017)]) - mean(NDMI[vi.year %in% c(2009, 2010, 2011)]),
fire.year.bin = fire.year.bin[vi.year == 2010],
treatment = treatment[vi.year == 2010],
fire.type.bin = fire.type.bin[vi.year == 2010])
frap.disturb <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
rx.disturb <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
frap.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
View(frap.disturb)
rx.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data                                                                                                                 fire.type.bin == 'Wildfire' ~ stratlayer %in% (frap.strat %>% pull(stratlayer))))
View(frap.disturb)
View(frap.strat)
View(frap.disturb)
View(frap.control)
View(frap.strat)
View(frap.disturb)
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggplot2', 'magrittr', 'stats', 'patchwork','ggpmisc', 'raster', 'RStoolbox', 'quantreg','segmented', 'RColorBrewer',
'gt', 'gtsummary', 'webshot', 'stargazer', 'kableExtra', 'broom', 'svglite','sjPlot','purrr', 'sjmisc', 'magick', 'magrittr', 'knitr', 'xtable', 'purrr')
# install.packages('quantreg',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n)))
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n)))
View(frap.disturb.sample)
View(frap.disturb.sample)
print(frap.disturb.sample %>% dplyr::filter(stratlayer == 1990500))
View(frap.disturb)
View(frap.strat)
print(frap.disturb.sample %>% dplyr::filter(stratlayer == 19900500))
pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n))
rx.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n))
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n))
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n)))
print(frap.disturb.sample %>% dplyr::filter(stratlayer == 19900500))
View(frap.disturb.sample)
View(frap.disturb)
View(frap.disturb)
View(frap.control)
View(frap.control)
View(frap.control)
print(frap.disturb.sample[39, ])
print(frap.disturb %>% dplyr::filter(stratlayer == 19900600))
print(frap.control %>% dplyr::filter(stratlayer == 19900600))
print(frap.strat %>% dplyr::filter(stratlayer == 19900600))
print(frap.disturb.sample[39, ])
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n)))
print(frap.disturb.sample[39, ])
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
mutate(n = (frap.strat %>% pull(n)))
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.strat %>% pull(n)))
print(frap.strat %>% dplyr::filter(stratlayer == 19900600))
print(frap.disturb.sample[39, ])
frap.strat %>% pull(n)
frap.strat %>% pull(stratlayer)
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup()
frap.disturb.sample %>% pull(stratlayer)
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest()
print(frap.disturb.sample[39, ])
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
inner_join(frap.strat)
print(frap.disturb.sample[39, ])
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
inner_join(frap.strat)
print(frap.disturb.sample[39, ])
frap.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
inner_join(frap.strat) %>% #Add the sample sizes for the stratlayers in the disturbed data
ungroup() %>% #Un group the data
# mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
inner_join(rx.strat) %>%
ungroup() %>% #Un group the data
# mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Sample the Wildfire Control control pixels
frap.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Wildfire' & stratlayer %in% (frap.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
inner_join(frap.strat) %>%
ungroup() %>% #Un group the data
# mutate(n = (frap.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Sample the moderate severity control pixels
#Make sure the stratlayer bins match with the sampled control bins
#Make sure the stratlayer disturb bins match with the sampled control bins
rx.disturb.sample <- pixel.data %>%
filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire' & stratlayer %in% (rx.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
inner_join(rx.strat) %>%
ungroup() %>% #Un group the data
# mutate(n = (rx.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
pixel.sample <- rbind(frap.disturb.sample, rx.disturb.sample, rx.sample, frap.sample)
#Convert data to long format
#This should be moved later
pixel.sample <- pixel.sample %>%
pivot_longer(cols = X10_AET:X9_tpa_max, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
#Convert the year outputs to actual years
pixel.sample$year <- as.numeric(pixel.sample$year) + 1984
#Convert missing TPA data to NAs
pixel.sample[pixel.sample$tpa_max < 0,]$tpa_max <- NA
#Convert to trees per hectare
pixel.sample$tpa_max <- pixel.sample$tpa_max * 2.47105
#Make the dates into date time format for R
pixel.sample$date <- as.Date(as.character(pixel.sample$year), format = '%Y')
pixel.sample$vi.year <- pixel.sample$year
pixel.sample$stand.age <- as.numeric(pixel.sample$year) - as.numeric(pixel.sample$fire.year)
#Update Cover data to 100% scale
#Update Cover data to 100% scale
pixel.sample$Tree_Cover.2 <- pixel.sample$Tree_Cover / 100
pixel.sample$Shrub_Cover.2 <- pixel.sample$Shrub_Cover / 100
pixel.sample$Herb_Cover.2 <- pixel.sample$Herb_Cover / 100
pixel.sample$Bare_Cover.2 <- pixel.sample$Bare_Cover / 100
#Add Montana Veg Cover
pixel.sample$Tree_Cover <- pixel.sample$TRE
pixel.sample$Shrub_Cover <- pixel.sample$SHR
pixel.sample$Herb_Cover <- pixel.sample$AFG + pixel.sample$PFG
pixel.sample$Bare_Cover <- pixel.sample$BGR
# #Rename Montana Tree Cover
# pixel.sample$Tree_Cover <- pixel.sample$TRE
#Convert the SPI48 scale back to decimal
pixel.sample$SPI48 <- pixel.sample$SPI48 / 100
#Try to fix soil moisture by dividing by 10
pixel.sample$Soil_Moisture <- pixel.sample$Soil_Moisture / 10
#Calculate Pr-ET
pixel.sample$PrET <- pixel.sample$ppt - pixel.sample$AET
