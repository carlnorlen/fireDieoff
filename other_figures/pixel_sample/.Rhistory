) +
#Dead Trees 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max),
tpa_max.sd = sd(tpa_max), tpa_max.n = n()), #%>%
# filter(if_else(sev.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(ymin=tpa_max.mean - 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
ymax=tpa_max.mean + 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
x = date, fill = sev.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.07, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ sev.bin) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
mypalette <- brewer_pal('seq', "YlOrRd")(5)[2:5]
# p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggmap', 'ggplot2', 'magrittr', 'raster',
#        'rgdal', 'sp', 'sf', 'RStoolbox', 'ncdf4', 'gtools', 'tigris', 'patchwork',
#        'rlist', 'ggspatial', 'svglite', 'mgcv', 'zoo', 'purrr', 'mgcViz', 'relaimpo', 'dplyr')
# install.packages('mgcViz',repo='https://cran.r-project.org/')
# library(dplyr)
# library(zoo)
library(scales)
mypalette <- brewer_pal('seq', "YlOrRd")(5)[2:5]
#Figure of Dead Trees per acre separated by fire years with time series
p1a <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()), # %>%
# filter(if_else(sev.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.mean, color = sev.bin, linetype = treatment),
size = 1
) +
#Dead Trees 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max),
tpa_max.sd = sd(tpa_max), tpa_max.n = n()), #%>%
# filter(if_else(sev.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(ymin=tpa_max.mean - 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
ymax=tpa_max.mean + 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
x = date, fill = sev.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.07, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-08-01'),as.Date('2020-01-01')) + facet_grid(. ~ sev.bin) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p1a
#Create the
p1b <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), count = n()), #%>%
# filter(case_when(sev.bin == 'Unchanged or Low' ~ count >= 2500, sev.bin == 'Mid or High' ~ count >= 2700, sev.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = sev.bin, linetype = treatment),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), count = n()), # %>%
# filter(case_when(sev.bin == 'Unchanged or Low' ~ count >= 2500, sev.bin == 'Mid or High' ~ count >= 2700, sev.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(count)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(count)),
x = date, fill = sev.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_grid(. ~ sev.bin) +
xlim(as.Date('2010-08-01'),as.Date('2020-01-01')) + #ylim(20, 45) + #facet_grid(. ~ sev.bin) + #ylim(20, 50) +
ylab(expression('Tree Cover (%)')) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p1b
p1c <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(AET.mean = mean(AET), AET.n = n(), count = n()), # %>%
# filter(case_when(sev.bin == 'Unchanged or Low' ~ count >= 2500, sev.bin == 'Mid or High' ~ count >= 2700, sev.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = AET.mean, color = sev.bin, linetype = treatment),
size = 1) +
#AET 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(AET.mean = mean(AET),
AET.sd = sd(AET), AET.n = n(), count = n()), #%>%
# filter(case_when(sev.bin == 'Unchanged or Low' ~ count >= 2500, sev.bin == 'Mid or High' ~ count >= 2700, sev.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=AET.mean - 1.96*(AET.sd / sqrt(AET.n)),
ymax=AET.mean + 1.96*(AET.sd / sqrt(AET.n)),
x = date, fill = sev.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_grid(. ~ sev.bin) +
xlim(as.Date('2010-08-01'),as.Date('2020-01-01')) + ylim(200, 550) +
#facet_grid(. ~ sev.bin) +
ylab(expression('AET (mm yr'^-1*')')) + xlab('Year')
p1c
f2 <- ggarrange(p1a, p1b, p1c, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a', 'b', 'c'))
f2
#Save the data
ggsave(filename = 'Fig3_dieoff_tree_cover_severity_time_series.png', height=18, width= 18, units = 'cm', dpi=900)
p2a <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(ppt.mean = mean(ppt), ppt.n = n(), count = n()), # %>%
# filter(case_when(sev.bin == 'Unchanged or Low' ~ count >= 2500, sev.bin == 'Mid or High' ~ count >= 2700, sev.bin == 'No Fire' ~ count >= 0)),
mapping = aes(x = date, y = ppt.mean, color = sev.bin, linetype = treatment),
size = 1) +
#Precip 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(ppt.mean = mean(ppt),
ppt.sd = sd(ppt), ppt.n = n(), count = n()), #%>%
# filter(case_when(sev.bin == 'Unchanged or Low' ~ count >= 2500, sev.bin == 'Mid or High' ~ count >= 2700, sev.bin == 'No Fire' ~ count >= 0)),
mapping = aes(ymin=ppt.mean - 1.96*(ppt.sd / sqrt(ppt.n)),
ymax=ppt.mean + 1.96*(ppt.sd / sqrt(ppt.n)),
x = date, fill = sev.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.09, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_grid(. ~ sev.bin) +
xlim(as.Date('2010-08-01'),as.Date('2020-01-01')) + #
ylab(expression('Precip (mm yr'^-1*')')) + xlab('Year')
p2a
#Create a AET time series figure
p2b <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>%
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(PrET.mean = mean(PrET), PrET.n = n(), count = n()),
mapping = aes(x = date, y = PrET.mean, color = sev.bin, linetype = treatment),
size = 1) +
#Water Stress 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>%
filter(vi.year >= 2010) %>%
group_by(date, sev.bin, treatment) %>%
summarize(PrET.mean = mean(PrET),
PrET.sd = sd(PrET), PrET.n = n(), count = n()), #%>%
mapping = aes(ymin=PrET.mean - 1.96*(PrET.sd / sqrt(PrET.n)),
ymax=PrET.mean + 1.96*(PrET.sd / sqrt(PrET.n)),
x = date, fill = sev.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) + facet_grid(. ~ sev.bin) +
xlim(as.Date('2010-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ sev.bin) +
ylab(expression('Pr-ET (mm yr'^-1*')')) + xlab('Year')
p2b
#Create the Water Stress Panel
f3 <- ggarrange(p2a, p2b, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a', 'b'))
f3
#Save the data
ggsave(filename = 'FigS2_sev_water_fluxes_time_series.png', height=12, width= 18, units = 'cm', dpi=900)
p <- c('reticulate', 'rgee', 'rgeeExtra','raster', 'sf', 'ggplot2', 'RStoolbox', 'viridis', 'tigris')
# # install.packages('terra',repo='https://cran.r-project.org/')
# library(tigris)
# library(ggplot2)
# library(RStoolbox)
# install.packages('RStoolbox',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
# library(raster)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/pixel_sample')
#Set up a python environment
# ee_install(py_env = "rgee")
#Upgrade the python API version
# ee_install_upgrade(version = '0.1.312')
#Intialize RGEE
# ee_Initialize(user = 'cnorlen@uci.edu', drive = TRUE)
#Install a python package
# py_install("jsbeautifier")
#Import a python package
# regex <- import("regex")
# jsb <- import("jsbeautifier")
#Load a GEE package
# palettes <- module('users/gena/packages:palettes')
# js.batch <- 'https://github.com/fitoprincipe/geetools-code-editor/blob/master/batch'
# batch <- module(js.batch)
# batch
#Some how the LST module works, but other ones don't
# lsmod <- 'users/sofiaermida/landsat_smw_lst:modules/Landsat_LST.js'
# mod <- module(lsmod)
# mod
# geom <- ee$Geometry$Rectangle(-8.91, 40.0, -8.3, 40.4)
# LST <- mod$collection("L8", "2018-05-15", "2018-05-31", geom, TRUE)
# print(LST$first)
# LST$mean
# Map$addLayer(LST$first, {}, 'LST')
# frap.year <- ee$Image('users/cnorlen/Fire_Dieoff/frap_year_bin')
# yearViz <- list(
#   min = 1919,
#   max = 2020,
#   palette = c("yellow", "orange", "red")
# )
# Map$addLayer()
# Map$addLayer(frap.year, yearViz, 'FRAP Year Data')
#Setting variable for ESPG 5070, proj4 crs
c <- raster::crs("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
#Add California Boundary shape file
us_states_20m <- states(cb = TRUE, resolution = "20m", class = "sf")
us_states_20m <- st_transform(us_states_20m, c)
ca_20m <- us_states_20m[us_states_20m$NAME == "California", ]
ca_20m <- st_as_sf(ca_20m)
ca_20m <- st_transform(ca_20m, c)
#Select USFS EcoRegion for South Sierra Nevada
usfs_in <- "D:\\Large_Files\\USFS\\data\\subsections"
usfs.regions <- st_read(file.path(usfs_in, 'S_USA.EcomapSubsections.shp'))
usfs.sierra <- subset(usfs.regions, MAP_UNIT_S == 'M261Ep' | MAP_UNIT_S == 'M261Eq' | MAP_UNIT_S == 'M261Es' | MAP_UNIT_S == 'M261Eu' | MAP_UNIT_S == 'M261Er' | MAP_UNIT_S == 'M261Eo') # | MAP_UNIT_S == 'M261Ev') #MAP_UNIT_S == 'M261Et' |
#Merge Sierra Nevada polygons into one larger polygon
usfs.sierra.union <- usfs.sierra %>% st_union()
st_bbox(usfs.sierra.union)
usfs.sierra.union$bbox
sierra.extent <- st_bbox(usfs.sierra.union)
# crs(sierra.extent) <- c
#Export the FRAP raster
# frap.raster <- ee_as_raster(image = frap.year, via = 'drive', container = 'Fire_Dieoff')
#Load in the exported data for my hard drive
data_in <- 'D://Fire_Dieoff'
files <- list.files(data_in)
files
# files[1]
#Import as spatial rasters
#Select FRAP fire rasters
# frap.year.1 <- raster::raster(file.path(data_in, files[4]))
# frap.year.2 <- raster::raster(file.path(data_in, files[5]))
#Select the frap year layers
# frap.year.1990 <- raster::raster(file.path(data_in, files[16]))
# frap.year.1990.m <- frap.year.1990 == 0
# frap.year.1990.mask <-  raster::mask(frap.year.1990, mask = frap.year.1990.m, maskvalue = 1)
#
# frap.year.2000 <- raster::raster(file.path(data_in, files[17]))
# frap.year.2000.m <- frap.year.2000 == 0
# frap.year.2000.mask <-  raster::mask(frap.year.2000, mask = frap.year.2000.m, maskvalue = 1)
#FRAP Wildfire layer
frap.year.2010 <- raster::raster(file.path(data_in, 'FRAP_wildfire_2010_300m.tif'))
frap.year.2010.m <- frap.year.2010== 0
frap.year.2010.mask <-  raster::mask(frap.year.2010, mask = frap.year.2010.m, maskvalue = 1)
frap.year.2010.mask
frap.year.2010.mask.crop <- crop(frap.year.2010.mask, sierra.extent)
sierra.extent
# # install.packages('terra',repo='https://cran.r-project.org/')
library(terra)
ext(sierra.extent)
sierra.extent$bbox
sierra.extent
sierra.extent[2]
sierra.extent[,2]
slice(sierra.extent,2)
as.data.frame(sierra.extent)
as.list(sierra.extent)
sierra.extent[1,2]
sierra.extent[1,]
sierra.extent[1]
sierra.extent <- ext(-119.9852, 34.8167, -117.8697, 38.82613)
frap.year.2010.mask.crop <- terra::crop(frap.year.2010.mask, sierra.extent)
frap.year.2010 <- terra::rast(file.path(data_in, 'FRAP_wildfire_2010_300m.tif'))
frap.year.2010.m <- frap.year.2010== 0
frap.year.2010.mask <-  terra::mask(frap.year.2010, mask = frap.year.2010.m, maskvalue = 1)
frap.year.2010.mask.crop <- terra::crop(frap.year.2010.mask, sierra.extent)
# frap.year.2010.mask
#Hack to deal with this until I find a better way
ext(usfs.sierra.union)
# frap.year.2010.mask
#Hack to deal with this until I find a better way
ext(vect(usfs.sierra.union))
# frap.year.2010.mask
#Hack to deal with this until I find a better way
sierra.extent <- ext(vect(usfs.sierra.union))
# sierra.extent <- ext(-119.9852, 34.8167, -117.8697, 38.82613)
frap.year.2010.mask.crop <- terra::crop(frap.year.2010.mask, sierra.extent)
crs(frap.year.2010.mask)
crs(usfs.sierra.union)
st_crs(usfs.sierra.union)
#Setting variable for ESPG 5070, proj4 crs
c <- terra::crs("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=23 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
c <- crs(frap.year.2010.mask)
# st_crs(usfs.sierra.union)
# frap.year.2010.mask
#Hack to deal with this until I find a better way
sierra.extent <- ext(project(vect(usfs.sierra.union),c))
# sierra.extent <- ext(-119.9852, 34.8167, -117.8697, 38.82613)
frap.year.2010.mask.crop <- terra::crop(frap.year.2010.mask, sierra.extent)
frap.buffer.year.2010 <- terra::rast(file.path(data_in, 'FRAP_wildfire_buffer_2010_300m.tif'))
frap.buffer.year.2010.m <- frap.buffer.year.2010== 0
frap.buffer.year.2010.mask <-  terra::mask(frap.buffer.year.2010, mask = frap.buffer.year.2010.m, maskvalue = 1)
frap.year.2010.mask.crop <- terra::crop(frap.buffer.2010.mask, sierra.extent)
frap.year.2010.mask.crop <- terra::crop(frap.buffer.year.2010.mask, sierra.extent)
p1 <- ggplot() +
ggR(img = frap.buffer.year.2010.mask.crop, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE, alpha = 0.2) +
ggR(img = frap.year.2010.mask.crop, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
frap.buffer.year.2010.mask.crop <- terra::crop(frap.buffer.year.2010.mask, sierra.extent)
# sierra.extent <- ext(-119.9852, 34.8167, -117.8697, 38.82613)
frap.year.2010.mask.crop <- terra::crop(frap.year.2010.mask, sierra.extent)
p1 <- ggplot() +
ggR(img = frap.buffer.year.2010.mask.crop, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE, alpha = 0.2) +
ggR(img = frap.year.2010.mask.crop, layer = 1, maxpixels = 1e6, geom_raster = TRUE, ggLayer = TRUE) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
install.packages('tidyterra',repo='https://cran.r-project.org/')
install.packages("tidyterra", repo = "https://cran.r-project.org/")
library(tidyterra)
p1 <- ggplot() +
geom_spatraster(img = frap.buffer.year.2010.mask.crop) +
geom_spatraster(img = frap.year.2010.mask.crop) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1 <- ggplot() +
geom_spatraster(data = frap.buffer.year.2010.mask.crop) +
geom_spatraster(data = frap.year.2010.mask.crop) +
geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
p1 <- ggplot() +
geom_spatraster(data = frap.buffer.year.2010.mask.crop, mapping = aes(fill = fire_year_last)) +
geom_spatraster(data = frap.year.2010.mask.crop, mapping = aes(fill = fire_year_last)) +
# geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
frap_in <- "D:\\Large_Files\\FRAP\\fire21_1_shp"
frap <- read_sf(file.path(frap_in, "firep21_1.shp"))
frap <- st_read(file.path(frap_in, "firep21_1.shp"))
frap
frap <- read_sf(file.path(frap_in),layer = "firep21_1.shp")
frap <- read_sf(file.path(frap_in, "firep21_1.shp"))
p <- c('sf', 'ggplot2', 'tidyterra', 'viridis', 'tigris','terra')
# install.packages('tidyterra',repo='https://cran.r-project.org/')
# library(tidyterra)
# library(ggplot2)
# library(RStoolbox)
# install.packages('RStoolbox',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
frap <- read_sf(file.path(frap_in, "firep21_1.shp"))
frap
#Load Prescribed Burn FRAP data
rxburn <- read_sf(file.path(frap_in, "rxburn21_1.shp"))
list.files(file.path(frap_in, "firep21_1.shp"))
list.files(file.path(frap_in))
frap <- read_sf(file.path(frap_in)[6])
frap.files <- list.files(file.path(frap_in))
frap <- read_sf(frap.files[6])
#Load Prescribed Burn FRAP data
rxburn <- read_sf(frap.files[22])
frap <- st_read(frap.files[6])
#Load Prescribed Burn FRAP data
rxburn <- read_sf(file.path(frap_in, "rxburn21_1"))
#Load Prescribed Burn FRAP data
rxburn <- read_sf(file.path(frap_in, "rxburn21_1.shp"))
#Load Prescribed Burn FRAP data
rxburn <- sf::st_read("D:\\Large_Files\\FRAP\\fire21_1_shp\\rxburn21_1.shp")
#Load Prescribed Burn FRAP data
#The shape files won't load for some reason
rxburn <- sf::st_read("D:\\Large_Files\\FRAP\\fire21_1_shp\\rxburn21_1")
#Load Prescribed Burn FRAP data
#The shape files won't load for some reason
rxburn <- sf::st_read("D:\\Large_Files\\FRAP\\fire21_1_shp\\rxburn21_1.shp")
p1 <- ggplot() +
geom_spatraster(data = frap.buffer.year.2010.mask.crop, mapping = aes(fill = fire_type_last)) +
geom_spatraster(data = frap.year.2010.mask.crop, mapping = aes(fill = fire_type_last)) +
# geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis(name = 'Fire Year', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
p1 <- ggplot() +
geom_spatraster(data = frap.buffer.year.2010.mask.crop, mapping = aes(fill = fire_type_last)) +
geom_spatraster(data = frap.year.2010.mask.crop, mapping = aes(fill = fire_type_last)) +
# geom_sf(data = ca_20m, color='black', size = 0.2, fill=NA) +
geom_sf(data = usfs.sierra.union, color='black', size = 0.4,  fill = NA) +
coord_sf() + xlab('longitude') + ylab('latitude') +
scale_fill_viridis_c(name = 'Fire Type', option = 'inferno', na.value = NA) + theme_bw() +
theme(
legend.justification = c(1, 0),
legend.position = c(0.89, 0.6),
legend.text = element_text(size = 6),
legend.title = element_text(size = 8),
legend.direction = "vertical")
p1
