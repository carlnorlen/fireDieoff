theme(legend.position = c(0.3, 0.7), legend.background = element_rect(colour = NA, fill = NA),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
guides(color = guide_legend(title = 'EPA Eco-Region'), linetype = guide_legend(title = 'EPA Eco-Region')) + ylim(0,650) +
ylab('Fire Number') + xlab('Year')
p4
ggsave(filename = 'Fig4_FRAP_time_series_by_ecoregion.png', height=10, width=16, units = 'cm', dpi=900)
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom', 'rFIA')
# If necessary: install/update packages
# install.packages('rlang',repo='https://cloud.r-project.org/')
# library("agricolae")
# Load packages
lapply(p,require,character.only=TRUE)
#Get the FIA directory
fiaCA <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_CSV' #Downloaedd from FIA DataMart
# dir_usfs <- "D:\\Large_Files\\USFS\\data\\subsections"
# fiaCA <- file.path(sql_dir, 'FIADB_CA.db')
# ref <- getFIA(states = 'ref', tables = c('FOREST_TYPE', 'FOREST_TYPE_GROUP'), dir = fiaCA)
ca <- readFIA(fiaCA)
# ca <- getFIA(states = 'CA', dir = 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_CSV')
# summary(ca)
#Creating a plot of mortality by tree species in two time periods and drought sequences.
#Create a notin operator
`%notin%` <- Negate(`%in%`)
forest.names <- ca$REF_FOREST_TYPE
forest.names$FORTYPCD <- forest.names$VALUE
##Both Droughts regions estimates
#Doing a combined estimated of the Basal Area for Both Droughts during 1999-2002
#Total basal area and tpa estimates by species
tpa.all <- tpa(ca, byPlot = TRUE, treeType = 'all', treeDomain = DIA >= 5 & STDAGE >= 0,
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.all <- tpa(ca, byPlot = TRUE, treeType = 'all', treeDomain = DIA >= 5 ,
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1 & STDAGE >= 0)
summary(tpa.all)
tpa.all <- tpa(ca, byPlot = TRUE, treeType = 'all', grpBy = 'STDAGE', treeDomain = DIA >= 5 ,
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
summary(tpa.all)
tpa.all
tpa.all <- tpa(ca, byPlot = TRUE, treeType = 'dead', grpBy = 'STDAGE', treeDomain = DIA >= 5 &
MORTYR %notin% c(""), #c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
tpa.all
stdage.q <- as.data.frame(unname(quantile(tpa.all$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2,0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
tpa.all <- tpa.all %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '155-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '110-154',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '86-109',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-85'))
#Order the stand age bins
tpa.all$stdage.bin = with(tpa.all, factor(stdage.bin, levels = c('0-85','86-109','110-154','155-209','210+')))
ggplot() + geom_line(data = tpa.all %>% group_by(YEAR, pltID) %>%
summarize(BAA = sum(BAA), stdage.bin = mode(stdage.bin)),
mapping = aes(x = as.Date(YEAR), y  = BAA, color = stdage.bin))
ggplot() + geom_line(data = tpa.all %>% group_by(YEAR, pltID) %>%
summarize(BAA = sum(BAA), stdage.bin = mode(stdage.bin)),
mapping = aes(x = as.Date(YEAR, format ='%YYYY'), y  = BAA, color = stdage.bin))
ggplot() + geom_line(data = tpa.all %>% group_by(INVYR, pltID) %>%
summarize(BAA = sum(BAA), stdage.bin = mode(stdage.bin)),
mapping = aes(x = as.Date(INVYR, format ='%YYYY'), y  = BAA, color = stdage.bin))
ggplot() + geom_line(data = tpa.all %>% group_by(YEAR, pltID) %>%
summarize(BAA = sum(BAA), stdage.bin = mode(stdage.bin)),
mapping = aes(x = YEAR, y  = BAA, color = stdage.bin))
ggplot() + geom_line(data = tpa.all, #%>% group_by(YEAR, pltID) %>%
# summarize(BAA = sum(BAA), stdage.bin = mode(stdage.bin)),
mapping = aes(x = YEAR, y  = BAA, color = stdage.bin))
ggplot() + geom_line(data = tpa.all %>% group_by(YEAR, pltID) %>%
summarize(BAA = mean(BAA), stdage.bin = stdage.bin),
mapping = aes(x = YEAR, y  = BAA, color = stdage.bin))
ggplot() + geom_line(data = tpa.all %>% group_by(YEAR, stdage.bin) %>%
summarize(BAA = mean(BAA)),
mapping = aes(x = YEAR, y  = BAA, color = stdage.bin))
mort <- growMort(ca, byPlot = 'TRUE', treeType = 'dead', stateVar = 'BAA', grpBy = 'STDAGE', treeDomain = DIA >= 5 &
MORTYR %notin% c(""), #c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
mort <- growMort(ca, byPlot = 'TRUE', treeType = 'gs', stateVar = 'BAA', grpBy = 'STDAGE', treeDomain = DIA >= 5 &
MORTYR %notin% c(""), #c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
mort <- growMort(ca, byPlot = TRUE, treeType = 'gs', stateVar = 'BAA', grpBy = 'STDAGE', treeDomain = DIA >= 5 &
MORTYR %notin% c(""), #c("2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
areaDomain = ECOSUBCD %in% c('M261Ep', 'M261Eq' ,'M261Eu' ,'M261Er' ,'M261Eo', 'M261Es') &
DSTRBCD1 %in% c(0, 10, 11, 12, 54, 70) & COND_STATUS_CD == 1)
mort
summary(mort)
stdage.q <- as.data.frame(unname(quantile(mort$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2,0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
mort <- mort %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '150+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '102-149',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '80-101',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '48-79',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-47'))
#Order the stand age bins
mort$stdage.bin = with(mort, factor(mort, levels = c('0-47','48-79','80-101','102-149','150+')))
ggplot() + geom_line(data = mort %>% group_by(YEAR, stdage.bin) %>%
summarize(MORT_BAA = mean(MORT_BAA)),
mapping = aes(x = YEAR, y  = MORT_BAA, color = stdage.bin))
#Order the stand age bins
mort$stdage.bin = with(mort, factor(stdage.bin, levels = c('0-47','48-79','80-101','102-149','150+')))
ggplot() + geom_line(data = mort %>% group_by(YEAR, stdage.bin) %>%
summarize(MORT_BAA = mean(MORT_BAA)),
mapping = aes(x = YEAR, y  = MORT_BAA, color = stdage.bin))
ggplot() + geom_line(data = mort %>% filter(MORT_BAA > 0) %>%
group_by(YEAR, stdage.bin) %>%
summarize(MORT_BAA = mean(MORT_BAA)),
mapping = aes(x = YEAR, y  = MORT_BAA, color = stdage.bin))
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom')
# If necessary: install/update packages
# install.packages('rlang',repo='https://cloud.r-project.org/')
# library("agricolae")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
#setwd("/C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data")
#cd /C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data
#cd /C/Users/can02/mystuff/fireDieoff/FIA
#Command for calling the script in the command line: R < stand_age_dieoff.r --vanilla
#INstalling packages: install.packages('RColorBrewer',repo='https://cran.cnr.berkeley.edu/')
setwd('C:/Users/can02/mystuff/fireDieoff/FIA')
#Add Data Sets
sql_dir <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_version' #Download from FIA DataMart
fiaCA <- file.path(sql_dir, 'FIADB_CA.db')
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = fiaCA)
#Add extension functions, allows more math functions
initExtension(db)
# summary(db)
#Query for FIA live trees, 2014-2019
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd, c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 5.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es') --South Sierra Nevada P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba' OR
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70)
")
live <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(live)
#Convert per acre to per hectare
live$count <- live$count * 2.47105
f1<- ggplot() + geom_line(data = live %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = live %>% filter(STATUSCD == 2 & !is.na(MORTYR)) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count)), mapping = aes(x = MORTYR, y = Dead.count), color = 'red') +
xlab('Year') + ylab(expression('Count (trees ha'^-1*')')) + theme_bw()
f1
f1<- ggplot() + geom_line(data = live %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(Live.count = sum(count)) %>% ungroup() %>% group(INVYR) %>% summarize(Live = mean(Live.count)), mapping = aes(x = INVYR, y = Live), color = 'green') +
geom_line(data = live %>% filter(STATUSCD == 2 & !is.na(MORTYR)) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count)) %>% ungroup() %>% group(MORTYR) %>% summarize(Dead = mean(Dead.count)), mapping = aes(x = MORTYR, y = Dead), color = 'red') +
xlab('Year') + ylab(expression('Count (trees ha'^-1*')')) + theme_bw()
f1
f1<- ggplot() + geom_line(data = live %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(Live.count = sum(count)) %>% ungroup() %>% group_by(INVYR) %>% summarize(Live = mean(Live.count)), mapping = aes(x = INVYR, y = Live), color = 'green') +
geom_line(data = live %>% filter(STATUSCD == 2 & !is.na(MORTYR)) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count)) %>% ungroup() %>% group_by(MORTYR) %>% summarize(Dead = mean(Dead.count)), mapping = aes(x = MORTYR, y = Dead), color = 'red') +
xlab('Year') + ylab(expression('Count (trees ha'^-1*')')) + theme_bw()
f1
live$DIA <- live$DIA * (2.54) #Convert to centimeters
live$basal_area <- (((live$DIA / 2)^2) * pi)*(1/10000) * live$count
#Region white counts of dead and live trees
f1<- ggplot() + geom_line(data = live %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(Live.BA = sum(basal_area)) %>% ungroup() %>% group_by(INVYR) %>% summarize(Live = mean(Live.BA)), mapping = aes(x = INVYR, y = Live), color = 'green') +
geom_line(data = live %>% filter(STATUSCD == 2 & !is.na(MORTYR)) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.BA = sum(basal_area)) %>% ungroup() %>% group_by(MORTYR) %>% summarize(Dead = mean(Dead.BA)), mapping = aes(x = MORTYR, y = Dead), color = 'red') +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
f1
ggsave(filename = 'Fig1_mortality_time_series_FIA.png', height=6, width= 10, units = 'cm', dpi=900)
stdage.q <- as.data.frame(unname(quantile(live$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2,0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
live <- live %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '125-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '95-124',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-94'))
#Order the stand age bins
live$stdage.bin = with(live, factor(stdage.bin, levels = c('0-94','95-124','125-159','160-209','210+')))
live[is.na(live$MORTYR), ]$MORTYR <- live[is.na(live$MORTYR), ]$INVYR
# live%>% dplyr::filter(stdage.bin == '138-154')
#Calculate the Quintiles of tree age (breast height age)
bhage.q <- as.data.frame(unname(quantile(live$BHAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(bhage.q) <- 'BHAGE'
bhage.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
bhage.q
live <- live %>% filter(!is.na(BHAGE)) %>% mutate(bhage.bin = case_when(
BHAGE >= bhage.q %>% filter(Quintile == 0.8) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '171+',
BHAGE >= bhage.q %>% filter(Quintile == 0.6) %>% dplyr::select(BHAGE) %>% as.numeric() &
BHAGE < bhage.q %>% filter(Quintile == 0.8) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '110-170',
BHAGE >= bhage.q %>% filter(Quintile == 0.4) %>% dplyr::select(BHAGE) %>% as.numeric() &
BHAGE < bhage.q %>% filter(Quintile == 0.6) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '78-109',
BHAGE >= bhage.q %>% filter(Quintile == 0.2) %>% dplyr::select(BHAGE) %>% as.numeric()  &
BHAGE < bhage.q %>% filter(Quintile == 0.4) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '57-77',
BHAGE < bhage.q %>% filter(Quintile == 0.2) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '6-56'))
#Order the stand age bins
live$bhage.bin = with(live, factor(bhage.bin, levels = c('6-56','57-77','78-109','110-170','171+')))
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = live %>% filter(STATUSCD == 2 & !is.na(MORTYR) & !is.na(STDAGE)) %>% group_by(MORTYR, PLOT, stdage.bin) %>% summarize(BA = sum(basal_area)) %>% ungroup() %>% group_by(MORTYR, standage.bin) %>% summarize(BA = mean(BA)), mapping = aes(x = MORTYR, y = BA, color = standage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw() + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = live %>% filter(STATUSCD == 2 & !is.na(MORTYR) & !is.na(STDAGE)) %>% group_by(MORTYR, PLOT, stdage.bin) %>% summarize(BA = sum(basal_area)) %>% ungroup() %>% group_by(MORTYR, stdage.bin) %>% summarize(BA = mean(BA)), mapping = aes(x = MORTYR, y = BA, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
#Mortality binned by stand age
live %>% filter(STATUSCD == 2 & !is.na(MORTYR) & !is.na(STDAGE)) %>% group_by(MORTYR, PLOT)
live %>% filter(STATUSCD == 2 & !is.na(MORTYR) & !is.na(STDAGE)) %>% group_by(MORTYR, stdage.bin) %>% summarize(Dead.count = sum(count))
live %>% filter(STATUSCD == 2 & !is.na(MORTYR) & !is.na(STDAGE)) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count), STDAGE = STDAGE)
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count), Dead.basal_area = sum(basal_area), STDAGE = STDAGE)
live.plot
View(live.plot)
live %>% filter(!is.na(MORTYR)) %>% select(PLOT) %>% unique()
live %>% filter(!is.na(MORTYR)) %>% select(PLOT) %>% unique() %>% count()
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count), Dead.basal_area = sum(basal_area), STDAGE = STDAGE, stdage.bin = stdage.bin)
live.plot
View(live.plot)
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(MORTYR, PLOT) %>% summarize(Dead.count = sum(count), Dead.basal_area = sum(basal_area), STDAGE = STDAGE, stdage.bin = stdage.bin) %>% ungroup()
live.plot
View(live.plot)
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(MORTYR = MORTYR, Dead.count = sum(count), Dead.basal_area = sum(basal_area), STDAGE = STDAGE, stdage.bin = stdage.bin) %>% ungroup()
live.plot
View(live.plot)
live %>% select(PLOT) %>% unique()
live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR)
live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR) %>% unique()
live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR) %>% summarize(count = n())
test <- live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR) %>% summarize(count = n())
View(test)
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count = n(), MORTYR = MORTYR, Dead.count = sum(count), Dead.basal_area = sum(basal_area), STDAGE = STDAGE, stdage.bin = stdage.bin)
View(live.plot)
View(live.plot)
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count = n(), Dead.count = sum(count), Dead.basal_area = sum(basal_area), STDAGE = STDAGE, stdage.bin = stdage.bin)
View(live.plot)
live.plot <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count = n(), Dead.count = sum(count), Dead.basal_area = sum(basal_area))
View(live.plot)
live.plot <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), Dead.count = sum(count), Dead.basal_area = sum(basal_area))
View(live.plot)
dead <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count = n(), Dead.count = sum(count), Dead.basal_area = sum(basal_area))
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), Dead.count = sum(count), Dead.basal_area = sum(basal_area))
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area))
dead <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), stdage.bin = stdage.bin)
dead <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% group_by(INVYR, PLOT, stdage.bin) %>% summarize(BA.dead = sum(basal_area.dead)), mapping = aes(x = MORTYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% group_by(INVYR, PLOT, stdage.bin) %>% summarize(BA.dead = sum(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = sum(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
View(join)
live
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), stdage.bin = mode(stdage.bin))
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
join
join$stdage.bin <- as.string(join.stdage.bin)
join$stdage.bin <- as.string(join$stdage.bin)
join$stdage.bin <- is.string(join$stdage.bin)
join$stdage.bin <- toString(join$stdage.bin)
join
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), stdage.bin = mode(STDAGE))
dead <- live %>% filter(STATUSCD == 2) %>% group_by(INVYR, PLOT) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
join
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
join
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), stdage.bin = mode(is.numeric(STDAGE)))
total
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), stdage.bin = mode(STDAGE))
total
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), STDAGE = median(STDAGE))
total
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2,0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '125-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '95-124',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-94'))
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-94','95-124','125-159','160-209','210+')))
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/10), type = 3, na.rm = TRUE)))
stdage.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
# temp.q
stdage.q
join %>% group_by(INVYR, stdage.bin) %>% summarize(count = n())
join %>% group_by(stdage.bin) %>% summarize(count = n())
join %>% filter(is.na(stdage.bin))
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(STDAGE <= 50) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(STDAGE <= 50) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead)) + #, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(STDAGE > 50 & STDAGE <= 95) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead)) + #, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(STDAGE <= 75) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead)) + #, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(STDAGE > 75 & STDAGE <= 95) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead)) + #, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/10), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
# temp.q
stdage.q
join$stdage.bin = with(join, factor(stdage.bin, levels = c('75-94','0-94','95-107','108-119','120-144',
'145-159','160-189','190-209','209-259','260+')))
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(is.na(STDAGE)) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead)) + #, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(!is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.9) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '260+',
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.9) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210-259',
STDAGE >= stdage.q %>% filter(Quintile == 0.7) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '190-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.7) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-189',
STDAGE >= stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '145-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-144',
STDAGE >= stdage.q %>% filter(Quintile == 0.3) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '108-119',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.3) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '95-107',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE >= stdage.q %>% filter(Quintile == 0.1) %>% dplyr::select(STDAGE) %>% as.numeric() ~  '75-94',
STDAGE < stdage.q %>% filter(Quintile == 0.1) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-74'))
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-74','75-94','95-107','108-119','120-144',
'145-159','160-189','190-209','210-259','260+')))
join
join %>% group_by(stdage.bin) %>% summarize(count = n())
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
dead <- live %>% filter(STATUSCD == 2) %>% group_by(MOTYR, PLOT) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
dead <- live %>% filter(STATUSCD == 2) %>% group_by(MORTYR, PLOT) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
dead <- dead %>% mutate(INVYR = MORTYR)
dead
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/10), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
# temp.q
stdage.q
#Bin data by Stand Age. Bins are quintiles.
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.9) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '260+',
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.9) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210-259',
STDAGE >= stdage.q %>% filter(Quintile == 0.7) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '190-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.7) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-189',
STDAGE >= stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '145-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-144',
STDAGE >= stdage.q %>% filter(Quintile == 0.3) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '108-119',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.3) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '95-107',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE >= stdage.q %>% filter(Quintile == 0.1) %>% dplyr::select(STDAGE) %>% as.numeric() ~  '75-94',
STDAGE < stdage.q %>% filter(Quintile == 0.1) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-74'))
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-74','75-94','95-107','108-119','120-144',
'145-159','160-189','190-209','210-259','260+')))
join %>% group_by(stdage.bin) %>% summarize(count = n())
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '95-119',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-94'))
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-94','95-119','120-159',
'160-209','210+')))
join %>% group_by(stdage.bin) %>% summarize(count = n())
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin)) +
xlab('Year') + ylab(expression('Mortality (m'^2*'ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
f3
