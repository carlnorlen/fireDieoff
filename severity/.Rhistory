q()
remove.packages('terra')
.libPaths
.libPaths()
remove.packages('terra', "C:/Users/can02/AppData/Local/Programs/R-4.0.2/library")
p <- c('ggplot2', 'ggpubr', 'viridis', 'tidyr', 'dplyr', 'gtools', 'tigris', 'patchwork')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/severity')
#The data directory
dir_in <- "D:\\Large_Files\\CECS\\Stand_Age"
fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the data
pixel.data <- read.csv(file.path(fire_in, "Stratified_sample_fire_year_fire_severity_01242022_30m.csv"), header = TRUE, na.strings = "NaN")
#Get a summary of the data
summary(pixel.data)
#Convert missing TPA data to NAs
pixel.data[pixel.data$tpa_max == -9999,]$tpa_max <- NA
#Convert to trees per hectare
pixel.data$tpa_max <- pixel.data$tpa_max * 2.47105
#Make the dates into date time format for R
pixel.data$date <- as.Date(pixel.data$date)
pixel.data$vi.year <- format(pixel.data$date , '%Y')
pixel.data$fire.year <- pixel.data$fire_year
# head(pixel.data)
pixel.data$stand.age <- as.numeric(pixel.data$vi.year) - as.numeric(pixel.data$fire.year)
#Update Cover data to 100% scale
pixel.data$Tree_Cover <- pixel.data$Tree_Cover / 100
pixel.data$Shrub_Cover <- pixel.data$Shrub_Cover / 100
pixel.data$Herb_Cover <- pixel.data$Herb_Cover / 100
pixel.data$Bare_Cover <- pixel.data$Bare_Cover / 100
# summary(pixel.data %>% filter(bin == 13))
#Calculate the Quintiles of precip climate normals
precip.q <- as.data.frame(unname(quantile(pixel.data$clm_precip_sum, prob = seq(0,1, 1/5))))
# precip.q
colnames(precip.q) <- 'Precip'
precip.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
precip.q
# precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()
#Plot a histogram with precip quartiles.
ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = clm_precip_sum)) +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black')
ggsave(filename = 'Fig1_Precip_Quartiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#Bin data by precip climatology
pixel.data <- pixel.data %>% mutate(precip.control = case_when(
clm_precip_sum >= precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric() ~ '> 80 %',
clm_precip_sum >= precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric() &
clm_precip_sum < precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric() ~ '60 to 80 %',
clm_precip_sum >= precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric() &
clm_precip_sum < precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric() ~ '40 to 60 %',
clm_precip_sum >= precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()  &
clm_precip_sum < precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric() ~ '20 to 40 %',
clm_precip_sum < precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric() ~ '0 to 20%'))
#Calculate the Quintiles of temperature climate normals
temp.q <- as.data.frame(unname(quantile(pixel.data$clm_temp_mean, prob = seq(0,1, 1/5))))
# precip.q
colnames(temp.q) <- 'Temp'
temp.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
#Histogram Plot of temperature quantiles
ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = clm_temp_mean)) +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black')
ggsave(filename = 'Fig2_Temp_Quartiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#Create temperature bins for analysis with quantiles
pixel.data <- pixel.data %>% mutate(temp.control = case_when(
clm_temp_mean >= temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric() ~ '> 80 %',
clm_temp_mean >= temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric() &
clm_temp_mean < temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric() ~ '60 to 80 %',
clm_temp_mean >= temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric() &
clm_temp_mean < temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric() ~ '40 to 60 %',
clm_temp_mean >= temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric()  &
clm_temp_mean < temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric() ~ '20 to 40 %',
clm_temp_mean < temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric() ~ '0 to 20%'))
#Calculate the Quintiles of elevation
elev.q <- as.data.frame(unname(quantile(pixel.data$elevation, prob = seq(0,1, 1/5))))
# precip.q
colnames(elev.q) <- 'elevation'
elev.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
elev.q
#Histogram Plot of temperature quantiles
ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = elevation)) +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black')
ggsave(filename = 'Fig3_Elevation_Quintiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#Bin data by elevation. Bins are quintiles.
pixel.data <- pixel.data %>% mutate(elevation.control = case_when(
elevation >= elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric() ~ '> 80 %',
elevation >= elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric() &
elevation < elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric() ~ '60 to 80 %',
elevation >= elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric() &
elevation < elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric() ~ '40 to 60 %',
elevation >= elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric()  &
elevation < elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric() ~ '20 to 40 %',
elevation < elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric() ~ '0 to 20%'))
# pixel.data
#Bin data by elevation
# pixel.data <- pixel.data %>% mutate(year.control = case_when(fire.year > 2000 ~ '2001-2020',
# 															 fire.year > 1980 & fire.year <= 2000 ~ '1981-2000',
# 															 fire.year > 1960 & fire.year <= 1980 ~ '1961-1980',
# 															 fire.year > 1940 & fire.year <= 1960 ~ '1941-1960',
# 															 fire.year > 1920 & fire.year <= 1940 ~ '1921-1940',
# 															 fire.year >= 1900 & fire.year <= 1920 ~ '1900-1920')) # end function
# summary(pixel.data)
#New bins based on stand age
pixel.data <- pixel.data %>% mutate(age.bin = case_when(
stand.age >= -32 & stand.age < -20 ~ '-32 to -21',
stand.age >= -20 & stand.age < -10 ~ '-20 to -11',
stand.age >= -10 & stand.age < 0 ~ '-1 to -10',
stand.age >= 0 & stand.age <= 10 ~ '0 to 10',
stand.age > 10 & stand.age <= 20 ~ '11 to 20',
stand.age > 20 & stand.age <= 30 ~ '21 to 30',
stand.age > 30 & stand.age <= 40 ~ '31 to 34'))
#Create a GAM to predict NDMI by stand.age
ndmi.gam <- gam(data = filter(pixel.data, vi.year <= 2012 & stand.age >= 0), #fire.year >= 1919 &
formula = NDMI ~ s(stand.age, bs = "cs", k = 5) + s(fire_sev_last, bs = "cs", k = 3))
summary(ndmi.gam)
# summary(ndmi.gam)
#Add a new column
pixel.data$NDMI.predict <- NA
pixel.data$NDMI.predict[pixel.data$stand.age <= 0] <- filter(pixel.data, stand.age <= 0)$NDMI
pixel.data$NDMI.predict[pixel.data$stand.age > 0] <- predict(newdata = filter(pixel.data, stand.age > 0), object = ndmi.gam)
# pixel.data
#Stand Age years
p6 <- ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = date)) + facet_wrap(~age.bin)
p6
ggsave(filename = 'Fig6_Stand_age_bins.png', height=12.5, width= 16, units = 'cm', dpi=900)
#Create new name for data bins
#Bin names will need to be updated
pixel.data <- pixel.data %>% mutate(year.bin = case_when(
fire_year_last >= 1981 & fire_year_last <= 1990 ~ '1984-1990',
fire_year_last >= 1991 & fire_year_last <= 2000 ~ '1991-1995',
fire_year_last >= 1996 & fire_year_last <= 2000 ~ '1996-2000',
fire_year_last >= 2001 & fire_year_last <= 2005 ~ '2001-2005',
fire_year_last >= 2006 & fire_year_last <= 2010 ~ '2006-2010',
fire_year_last >= 2011 & fire_year_last <= 2015 ~ '2011-2015',
fire_year_last >= 2016 & fire_year_last <= 2020 ~'2016-2017')) # end function
# summary(pixel.data)
#
# pixel.data %>% filter(fire_sev_last == 1)
# bin >= 1981 & bin <= 1995 ~ '20-34',
# # bin >= 1991 & bin <= 2000 ~ '15-24',
# bin >= 1996 & bin <= 2010 ~ '5-19',
# bin >= 2011 & bin <= 2020 ~'0-4'))
#Bin names will need to be updated
pixel.data <- pixel.data %>% mutate(stand.age.bin = case_when(
fire_year_last >= 1984 & fire_year_last <= 1990 ~ '25-31', #Calculated Relative to 2015,
fire_year_last >= 1991 & fire_year_last <= 2000 ~ '15-24',
fire_year_last >= 2001 & fire_year_last <= 2010 ~ '5-14',
fire_year_last >= 2011 & fire_year_last <= 2020 ~ '0-4')) # end function
#Fire Severity Bins
pixel.data <- pixel.data %>% mutate(sev.bin = case_when(
fire_sev_last == '0' ~ 'No Fire',
fire_sev_last == '1' ~ 'Unchanged',
fire_sev_last == '2' ~ 'Low',
fire_sev_last == '3' ~ 'Mid',
fire_sev_last == '4' ~ 'High',
fire_sev_last == '255' ~ 'Masked')) # end function
pixel.data
#Make the bin lables in the correct order
pixel.data$elevation.control = with(pixel.data, factor(elevation.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
pixel.data$temp.control = with(pixel.data, factor(temp.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
pixel.data$precip.control = with(pixel.data, factor(precip.control, levels = c('0 to 20%', '20 to 40 %', '40 to 60 %', '60 to 80 %', '> 80 %')))
#Make the years bin lables in the correct order
pixel.data$sev.bin = with(pixel.data, factor(sev.bin, levels = c('Masked', 'No Fire', 'Lowest', 'Low','Mid', 'High')))
#Burn Severity Bin
pixel.data$age.bin = with(pixel.data, factor(age.bin, levels = c('-32 to -21', '-20 to -11', '-10 to -1','0 to 10', '11 to 20', '21 to 30', '31 to 34')))
#Fire Year Bins
pixel.data$year.bin = with(pixel.data, factor(year.bin, levels = c('2011-2017','2001-2010','1991-2000','1984-1990')))
#Stand Age Bins
pixel.data$stand.age.bin = with(pixel.data, factor(stand.age.bin, levels = c('0-4', '5-14', '15-24', '25-31')))
#Calculate dNDMI based on predictions
pixel.data$dNDMI <- pixel.data$NDMI - pixel.data$NDMI.predict
p8 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(tpa_max) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(tpa_max.mean = mean(tpa_max)), mapping = aes(x = as.Date(date), y = tpa_max.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.7), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p8
#Do tree cover recovery
p9 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
# geom_bin2d(alpha = 0.8, binwidth = c(365,5)) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(Tree_Cover) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = as.Date(date), y = Tree_Cover.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
ylab(expression('Tree Cover (%)')) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p9
#Combine the figures together
f1 <- ggarrange(p8, p9, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(1, 1), align = "v")
ggsave(filename = 'Fig8_Dieoff_fire_year_severity_time_series.png', height=12.5, width= 20, units = 'cm', dpi=900)
p8 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(tpa_max) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(tpa_max.mean = mean(tpa_max)), mapping = aes(x = as.Date(date), y = tpa_max.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.7), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p8
pixel.data <- pixel.data %>% mutate(sev.bin = case_when(
fire_sev_last == '0' ~ 'No Fire',
fire_sev_last == '1' ~ 'Unchanged',
fire_sev_last == '2' ~ 'Low',
fire_sev_last == '3' ~ 'Mid',
fire_sev_last == '4' ~ 'High',
fire_sev_last == '255' ~ 'Masked')) # end function
p8 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(tpa_max) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(tpa_max.mean = mean(tpa_max)), mapping = aes(x = as.Date(date), y = tpa_max.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.7), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) +
ylab(expression(atop('Die-off Severity', '(trees ha'^-1*')'))) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p8
p9 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
# geom_bin2d(alpha = 0.8, binwidth = c(365,5)) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(Tree_Cover) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = as.Date(date), y = Tree_Cover.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
ylab(expression('Tree Cover (%)')) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p9
#Combine the figures together
f1 <- ggarrange(p8, p9, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(1, 1), align = "v")
ggsave(filename = 'Fig8_Dieoff_fire_year_severity_time_series.png', height=12.5, width= 20, units = 'cm', dpi=900)
p11 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
# geom_bin2d(alpha = 0.8, binwidth = c(365,5)) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(AET) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(AET.mean = mean(AET)), mapping = aes(x = as.Date(date), y = AET.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.3), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) +
ylab(expression('Water Use (AET; mm yr'^-1*')')) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p11
#Do tree cover recovery
p12 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
# geom_bin2d(alpha = 0.8, binwidth = c(365,5)) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(Soil_Moisture) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(Soil_Moisture.mean = mean(Soil_Moisture)), mapping = aes(x = as.Date(date), y = Soil_Moisture.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
ylab(expression('Soil Moisture (mm)')) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p12
#Water Stress
p13 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
# geom_bin2d(alpha = 0.8, binwidth = c(365,5)) +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
filter(fire.year <= 2010 & !is.na(Water_Stress) & fire_sev_last != 255 & stand.age >= 5) %>%
group_by(date, sev.bin, stand.age.bin) %>%
summarize(Water_Stress.mean = mean(Water_Stress)), mapping = aes(x = as.Date(date), y = Water_Stress.mean, color = stand.age.bin, linetype = stand.age.bin),
size = 1
) +
scale_color_brewer(type = 'seq', palette = 'Greens', name = 'Years Since Fire') +
scale_linetype(name = 'Years Since Fire') +
guides(color = guide_legend(), linetype = guide_legend()) +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
ylab(expression('Water Stress (mm)')) + xlab('Year') +
facet_grid(. ~ factor(sev.bin, levels = c("Unchanged", "Low", "Mid", "High")))
p13
#Combine the figures together
f2 <- ggarrange(p11, p12, p13, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(1, 0.9, 1), align = "v")
f2
ggsave(filename = 'Fig8_Dieoff_fire_year_severity_time_series.png', height=18, width= 20, units = 'cm', dpi=900)
