q()
remove.packages('terra')
.libPaths
.libPaths()
remove.packages('terra', "C:/Users/can02/AppData/Local/Programs/R-4.0.2/library")
#Set up a python environment
# ee_install(py_env = "rgee")
library('rgee')
#Initialize Google Earth Engine
ee_Initialize(user = 'cnorlen@uci.edu', drive = TRUE)
p <- c('rgee', 'terra', 'sf')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu', drive = 'TRUE')
srtm <- ee$Image("USGS/SRTMGL1_003")
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu')
srtm <- ee$Image("USGS/SRTMGL1_003")
viz <- list(
max = 4000,
min = 0,
palette = c("#000000","#5AAD5A","#A9AD84","#FFFFFF")
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM',
legend = TRUE
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM'
)
ee_check()
ee_check_python()
ee_check_credentials()
ee_Initialize(user='cnorlen@uci.edu', drive = TRUE)
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
print(ee_path_user)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
googledrive::drive_auth(
email = NULL,
cache = ee_path_user
)
full_credentials
drive_condition
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
drive_credentials <- full_credentials[drive_condition]
email <- sub("^[^_]*_", "", basename(drive_credentials))
print(ee_path_user)
print(email)
ee_clean_credentials("cnorlen@uci.edu")
ee_Initialize("cnorlen")
ee_Initialize("cnorlen", drive = TRUE)
googledrive::drive_auth(email="cnorlen@uci.edu")
gargle_oauth_email = "cnorlen@uci.edu"
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
library(googledrive)
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
googledrive::drive_auth(email= "cnorlen@uci.edu")
ee_check_credentials()
ee_Initialize(drive = TRUE)
library(Rcpp)
install.packages('Rcpp',repo='https://cran.r-project.org/')
install.packages("Rcpp", repo = "https://cran.r-project.org/")
library(Rcpp)
install.packages('httpuv',repo='https://cran.r-project.org/')
library(httpuv)
ee_Initialize(drive = TRUE)
library(rgee)
ee_Initialize(drive = TRUE)
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggmap', 'ggplot2', 'magrittr', 'raster',
'rgdal', 'sp', 'sf', 'RStoolbox', 'ncdf4', 'gtools', 'tigris', 'patchwork',
'rlist', 'ggspatial', 'svglite', 'mgcv', 'zoo', 'purrr')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('zoo'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
# library(zoo)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/final_figures/landsat')
#The data directory
# dir_in <- "D:\\Fire_Dieoff"
# fire_in <- "D:\\Large_Files\\Fire_Dieoff"
dir_in <- "D:\\Fire_Dieoff"
# fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the Wildfire data
frap.fire.data <- read.csv(file.path(dir_in, "fire_south_sierra_FRAP_wildfire_500pt_200mm_5tree_ts8_300m_20230320.csv"), header = TRUE, na.strings = "NaN")
#Add the treatment column
frap.fire.data$treatment <- 'Disturb'
#Add the Wildfire buffer data
frap.control.data <- read.csv(file.path(dir_in, "control_south_sierra_FRAP_2km_buffer_500pt_200mm_5tree_ts16_300m_20230320.csv"), header = TRUE, na.strings = "NaN")
#Add Fire Columns
frap.control.data$fire_count_2010 <- -9999
frap.control.data$fire_type_2019 <- -9999
frap.control.data$fire_year_2019 <- -9999
frap.control.data$fire_year_2019 <- -9999
frap.control.data$fire_count_2019 <- -9999
frap.control.data$fire_type_2020 <- -9999
frap.control.data$fire_year_2020 <- -9999
frap.control.data$fire_count_2020 <- -9999
#Add the treatment Column
frap.control.data$treatment <- 'Control'
#Combine the data together
frap.pixel.data <- rbind(frap.fire.data, frap.control.data)
#Add the Rx fire data
rx.data <- read.csv(file.path(dir_in, "fire_south_sierra_FRAP_rxfire_500pt_200mm_5tree_ts8_300m_20230320.csv"), header = TRUE, na.strings = "NaN")
#Add the treatment column
rx.data$treatment <- 'Disturb'
#Add teh Rx fire buffer data
rx.control.data <- read.csv(file.path(dir_in, "control_south_sierra_Rx_2km_buffer_500pt_200mm_5tree_ts16_300m_20230320.csv"), header = TRUE, na.strings = "NaN")
#Add Fire Columns
rx.control.data$fire_count_2010 <- -9999
rx.control.data$fire_type_2019 <- -9999
rx.control.data$fire_year_2019 <- -9999
rx.control.data$fire_year_2019 <- -9999
rx.control.data$fire_count_2019 <- -9999
rx.control.data$fire_type_2020 <- -9999
rx.control.data$fire_year_2020 <- -9999
rx.control.data$fire_count_2020 <- -9999
#Add the treatment column
rx.control.data$treatment <- 'Control' #Try making this 1-km versus, 2-km
#Combine the data together
rx.pixel.data <- rbind(rx.data, rx.control.data)
# pixel.data <- rbind(combine.data, control.data.2km)
summary(rx.pixel.data)
#Combine the wildfire and Rx fire data together
pixel.data <- combine(frap.pixel.data, rx.pixel.data)
summary(pixel.data)
`%notin%` <- Negate(`%in%`)
#Convert data to long format
pixel.data <- pixel.data %>%
pivot_longer(cols = X10_AET:X9_tpa_max, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
pixel.data$year <- as.numeric(pixel.data$year) + 1984
#Convert missing TPA data to NAs
pixel.data[pixel.data$tpa_max < 0,]$tpa_max <- NA
#Convert fire data -9999 to NAs
pixel.data[pixel.data$fire_type_2010 == -9999,]$fire_type_2010 <- NA
pixel.data[pixel.data$fire_year_2010 == -9999,]$fire_year_2010 <- NA
pixel.data[pixel.data$fire_type_2019 == -9999,]$fire_type_2019 <- NA
pixel.data[pixel.data$fire_year_2019 == -9999,]$fire_year_2019 <- NA
pixel.data[pixel.data$fire_type_2020 == -9999,]$fire_type_2020 <- NA
pixel.data[pixel.data$fire_year_2020 == -9999,]$fire_year_2020 <- NA
#Convert to trees per hectare
pixel.data$tpa_max <- pixel.data$tpa_max * 2.47105
#Make the dates into date time format for R
pixel.data$date <- as.Date(as.character(pixel.data$year), format = '%Y')
# pixel.data$vi.year <- format(pixel.data$date , '%Y')
pixel.data$vi.year <- pixel.data$year
#Use the FRAP fire perimeter year (use fire year 2010)
pixel.data$fire.year <- pixel.data$fire_year_2010
pixel.data$stand.age <- as.numeric(pixel.data$year) - as.numeric(pixel.data$fire.year)
#Update Cover data to 100% scale
pixel.data$Tree_Cover <- pixel.data$Tree_Cover / 100
pixel.data$Shrub_Cover <- pixel.data$Shrub_Cover / 100
pixel.data$Herb_Cover <- pixel.data$Herb_Cover / 100
pixel.data$Bare_Cover <- pixel.data$Bare_Cover / 100
#Convert the SPI48 scale back to decimal
pixel.data$SPI48 <- pixel.data$SPI48 / 100
#Try to fix soil moisture by dividing by 10
pixel.data$Soil_Moisture <- pixel.data$Soil_Moisture / 10
#Calculate Pr-ET
pixel.data$PrET <- pixel.data$ppt - pixel.data$AET
pixel.data %>% summary()
pixel.data <- pixel.data %>% mutate(fire.year.bin = case_when(
treatment == 'Control' | fire.year < 1980 ~ 'Control',
fire.year >= 1980 & fire.year <= 2010 ~ 'Disturb',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
pixel.data <- pixel.data %>% mutate(fire.type.bin = case_when(
fire_type_2010 == 1 ~ 'Wildfire',
fire_type_2010 == 2 ~ 'Rxfire'
))
summary(pixel.data)
pixel.data$fire.year.bin = with(pixel.data, factor(fire.year.bin, levels = c('2019-2020', '2011-2018', 'Control', 'Disturb')))#
#Recode the veg type data
pixel.data$veg_name <- recode(.x=pixel.data$lf_evt_2001, .default = NA_character_, '2015' = 'Redwood', '2019' = 'Pinyon Juniper', '2020' = 'Bristlecone Pine', '2027' = 'Mixed Conifer', '2028' = 'White Fir', '2031' = 'Jeffrey Pine',
'2032' = 'Red Fir', '2033' = 'Subalpine', '2034' = 'Knobcone Pine', '2043' = 'Mixed Conifer', '2044' = 'Subalpine', '2045' = 'Mixed Conifer',
'2053' = 'Ponderosa Pine', '2058' = 'Lodgepole Pine', '2061' = 'Mixed Conifer', '2112' = 'Blue Oak Woodland', '2172' = 'White Fir', '2173' = 'Lodgepole Pine', '2201' = 'Oregon White Oak', '2230' = 'Blue Oak - Digger Pine')
#Select strat categories for fire treatments
frap.disturb <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n()/35) #%>% filter(n >= 20) %>% pull(stratlayer)
rx.disturb <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n()/35) #%>% filter(n >= 5) %>% pull(stratlayer)
# print(frap.strat)
frap.control <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n()) %>% pull(stratlayer)
rx.control <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n()) %>% pull(stratlayer)
frap.strat <- intersect((frap.disturb %>% pull(stratlayer)), frap.control)
rx.strat <- intersect((rx.disturb %>% pull(stratlayer)), rx.control)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer)))
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer, system.index) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
pivot_longer()
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp)
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
pivot_longer()
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n) %>% mutate(n = n * 34))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n) %>% mutate(n = n * 34))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n) %>% mutate(n = n * 34))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
frap.disturb <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n() - 1) #%>% filter(n >= 20) %>% pull(stratlayer)
rx.disturb <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n() -1 )
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
frap.disturb <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n()) #%>% filter(n >= 20) %>% pull(stratlayer)
rx.disturb <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Disturb') %>% group_by(stratlayer) %>% summarize(n = n()) #%>% filter(n >= 5) %>% pull(stratlayer)
# print(frap.strat)
frap.control <- pixel.data %>% filter(fire.type.bin == 'Wildfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n()) #%>% pull(stratlayer)
rx.control <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n()) #%>% pull(stratlayer)
frap.strat <- intersect((frap.disturb %>% filter(n >= 35) %>% pull(stratlayer)), (frap.control %>% filter(n >= 35) %>% pull(stratlayer)))
rx.strat <- intersect((rx.disturb %>% filter(n >= 35) %>% pull(stratlayer)), (rx.control %>% filter(n >= 35) %>% pull(stratlayer)))
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
View(frap.disturb)
View(frap.control.data)
View(rx.control)
View(rx.disturb)
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, slice_sample)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work.
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, slice_sample(n = .y))) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, ~ slice_sample(n = .y))) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, slice_sample)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n(replace = TRUE))) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
rx.control <- pixel.data %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat)
rx.control.data <- pixel.data %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat)
rx.split <- split(rx.control.data, rx.control.data$stratlayer)
# where else would it be found?
str(rx.split)
group_sizes <- vapply(rx.split, nrow, integer(1)) # also floating free
sampled_obs <- mapply(sample, group_sizes, (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n)))
sampled_obs <- mapply(sample(replace = TRUE), group_sizes, (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) # I'm floating free too!
rx.n <- (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))
frap.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Wildfire' & stratlayer %in% frap.strat) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.disturb %>% filter(stratlayer %in% frap.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp) #unnest the data
rx.strat <- intersect((rx.disturb %>% filter(n >= 35) %>% pull(stratlayer)), (rx.control %>% filter(n >= 35) %>% pull(stratlayer)))
frap.strat <- intersect((frap.disturb %>% filter(n >= 35) %>% pull(stratlayer)), (frap.control %>% filter(n >= 35) %>% pull(stratlayer)))
rx.strat <- intersect((rx.disturb %>% filter(n >= 35) %>% pull(stratlayer)), (rx.control %>% filter(n >= 35) %>% pull(stratlayer)))
rx.control %>% filter(n >= 35) %>% pull(stratlayer)
rx.control <- pixel.data %>% filter(fire.type.bin == 'Rxfire' & treatment == 'Control') %>% group_by(stratlayer) %>% summarize(n = n())
rx.strat <- intersect((rx.disturb %>% filter(n >= 35) %>% pull(stratlayer)), (rx.control %>% filter(n >= 35) %>% pull(stratlayer)))
#Sample the low severity control pixels
frap.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Wildfire' & stratlayer %in% frap.strat) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (frap.disturb %>% filter(stratlayer %in% frap.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp) #unnest the data
rx.sizes <- vapply(rx.split, nrow, integer(1)) # also floating free
rx.sizes
rx.n
rx.sampled_obs <- mapply(sample(replace = TRUE), group_sizes, rx.n) # I'm floating free too!
rx.sampled_obs <- mapply(sample, group_sizes, rx.n) # I'm floating free too!
rx.sampled_obs <- mapply(slice_sample, group_sizes, rx.n) # I'm floating free too!
rx.sampled_obs <- mapply(slice_n, group_sizes, rx.n) # I'm floating free too!
rx.sampled_obs <- mapply(sample_n, group_sizes, rx.n) # I'm floating free too!
rx.sampled_obs <- mapply(sample, group_sizes, rx.n) # I'm floating free too!
View(rx.control)
View(rx.disturb)
frap.strat <- intersect((frap.disturb %>% filter(n /35 >= 5) %>% pull(stratlayer)), (frap.control %>% filter(n/35 >= 5) %>% pull(stratlayer)))
rx.strat <- intersect((rx.disturb %>% filter(n/35 >= 5) %>% pull(stratlayer)), (rx.control %>% filter(n/35 >= 5) %>% pull(stratlayer)))
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n(replace = TRUE))) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp)
frap.strat <- intersect((frap.disturb %>% filter(n /35 >= 9) %>% pull(stratlayer)), (frap.control %>% filter(n/35 >= 9) %>% pull(stratlayer)))
rx.strat <- intersect((rx.disturb %>% filter(n/35 >= 9) %>% pull(stratlayer)), (rx.control %>% filter(n/35 >= 9) %>% pull(stratlayer)))
rx.sample <- pixel.data %>%
filter(treatment == 'Control' & fire.type.bin == 'Rxfire' & stratlayer %in% rx.strat) %>% #Get just the unchanged control stratification layers
# pivot_wider(names_from = c('vi.year','system.index'), values_from = colnames(pixel.data %>% dplyr::select(-stratlayer))) %>%
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (rx.disturb %>% filter(stratlayer %in% rx.strat) %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample, but slice sample doesn't work, .y = n
# pivot_longer()
dplyr::select(-c(data, n)) %>% #Get rid of the data column
unnest(samp) #unnest the data
