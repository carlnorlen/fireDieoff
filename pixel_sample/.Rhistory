if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
stat_cor(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment), method = 'lm', size = 1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
stat_cor(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment), size = 1) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
stat_cor(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = stand.age, y = dTree, color = treatment)) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
#Save the data
ggsave(filename = 'Fig72_dieoff_stand_age_correlation_300m_frap_perimeter.png', height=18, width= 20, units = 'cm', dpi=900)
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year == fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year == fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
stat_cor(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year == fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment)) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year = fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year = fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
stat_cor(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year = fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment)) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
p26 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_point(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year = fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment, shape = treatment), size = 1) +
geom_smooth(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year = fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment, linetype = treatment), method = 'lm', size = 1) +
stat_cor(data = pixel.data %>%
dplyr::filter(fire.year <= 2010 & fire.year >= 1921 & stand.age > 2 &
elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(treatment, system.index) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
stand.age = stand.age[vi.year == 2014], fire.year = fire.year[vi.year == 2014]), #%>%
# ungroup() %>%
# group_by(stand.age, treatment) %>%
# summarize(dTree.mean = mean(dTree)), # %>%
# group_by(stand.age, fire.name, fire.year) %>%
# summarize(dTree.diff = dTree.mean[treatment == 'Wildfire'] - dTree.mean[treatment == 'Buffer']), #%>%
# group_by(stand.age) %>%
#   summarize(dTree.diff = mean(dTree.diff)),
mapping = aes(x = fire.year, y = dTree, color = treatment)) +
#Tree Cover 95% CI
# geom_ribbon(data = pixel.data %>%
#               filter(stand.age >= -10 & stand.age <= 85 & !is.na(Tree_Cover) & vi.year <= 2014 & fire.year >= 1921 & fire.year <= 2010 & elevation <= elev.upper & elevation >= elev.lower & clm_precip_sum_mean <= ppt.upper & clm_precip_sum_mean >= ppt.lower & clm_temp_mean_mean >= temp.lower) %>%
#               group_by(stand.age, treatment) %>%
#               summarize(Tree_Cover.mean = mean(Tree_Cover),
#                         Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
#             mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
#                           x = stand.age, fill = "Tree"), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.5, 0.1), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
# scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
# scale_fill_manual(values = fills) +
guides(fill = "none") + xlim(1921, 2010) +
ylab(expression('Die-off (% Tree Cover)')) + xlab('Years Since Fire') #+ facet_grid(treatment ~ .)
p26
View(pixel.data)
#Save the data
ggsave(filename = 'Fig72_dieoff_stand_age_correlation_300m_frap_perimeter.png', height=18, width= 20, units = 'cm', dpi=900)
