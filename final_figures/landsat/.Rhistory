labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab('Die-off (dTree %)')
p1
p1 <- ggplot(data = sev.all.models) +
#Create the density layer
geom_bin2d(binwidth = c(200, 1), mapping = aes(x = Water_Stress, y = dTree, group = ..count..)) +
#Piecewise linear regression fit line
geom_line(mapping = aes(x=Water_Stress, y=dTree.fit), size=2, color = 'black', linetype = 'dotdash') +
#Piecewise fit uncertainty
geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit), alpha = 0.4) +
guides(alpha = FALSE) +
scale_fill_gradient2(limits = c(10,360), breaks = c(5,90,180,270), midpoint = 180, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
facet_grid(factor(sev.bin, levels = c('Low', 'Mid', 'High')) ~ treatment) +
scale_alpha(range = c(1, 1), limits = c(10, 360), na.value = 0.4) +
# stat_cor( mapping = aes(x = Water_Stress, y = dTree), color = 'black') + facet_grid(fire.type.bin ~ treatment) +
labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab('Die-off (dTree %)')
p1
p1 <- ggplot(data = sev.all.models) +
#Create the density layer
geom_bin2d(binwidth = c(200, 2), mapping = aes(x = Water_Stress, y = dTree, group = ..count..)) +
#Piecewise linear regression fit line
geom_line(mapping = aes(x=Water_Stress, y=dTree.fit), size=2, color = 'black', linetype = 'dotdash') +
#Piecewise fit uncertainty
geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit), alpha = 0.4) +
guides(alpha = "none") +
scale_fill_gradient2(limits = c(5,360), breaks = c(5,90,180,270), midpoint = 180, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
facet_grid(factor(sev.bin, levels = c('Low', 'Mid', 'High')) ~ treatment) +
scale_alpha(range = c(1, 1), limits = c(5, 360), na.value = 0.4) +
# stat_cor( mapping = aes(x = Water_Stress, y = dTree), color = 'black') + facet_grid(fire.type.bin ~ treatment) +
labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab('Die-off (dTree %)')
p1
p1 <- ggplot(data = sev.all.models) +
#Create the density layer
geom_bin2d(binwidth = c(200, 2), mapping = aes(x = Water_Stress, y = dTree, group = ..count..)) +
#Piecewise linear regression fit line
geom_line(mapping = aes(x=Water_Stress, y=dTree.fit), size=2, color = 'black', linetype = 'dotdash') +
#Piecewise fit uncertainty
geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit), alpha = 0.4) +
guides(alpha = "none") +
scale_fill_gradient2(limits = c(0,360), breaks = c(5,90,180,270), midpoint = 180, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
facet_grid(factor(sev.bin, levels = c('Low', 'Mid', 'High')) ~ treatment) +
scale_alpha(range = c(1, 1), limits = c(5, 360), na.value = 0.4) +
# stat_cor( mapping = aes(x = Water_Stress, y = dTree), color = 'black') + facet_grid(fire.type.bin ~ treatment) +
labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab('Die-off (dTree %)')
p1
p1 <- ggplot(data = sev.all.models) +
#Create the density layer
geom_bin2d(binwidth = c(200, 2), mapping = aes(x = Water_Stress, y = dTree, group = ..count..)) +
#Piecewise linear regression fit line
geom_line(mapping = aes(x=Water_Stress, y=dTree.fit), size=2, color = 'black', linetype = 'dotdash') +
#Piecewise fit uncertainty
geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit), alpha = 0.4) +
guides(alpha = "none") +
scale_fill_gradient2(limits = c(0,360), breaks = c(5,90,180,270), midpoint = 180, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
scale_alpha(range = c(1, 1), limits = c(5, 360), na.value = 0.4) +
# stat_cor( mapping = aes(x = Water_Stress, y = dTree), color = 'black') + facet_grid(fire.type.bin ~ treatment) +
labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
facet_grid(factor(sev.bin, levels = c('Low', 'Mid', 'High')) ~ treatment) +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab('Die-off (dTree %)')
p1
p2 <- p1 + theme(
legend.background = element_rect(colour = NA, fill = NA), # This removes the white square behind the legend
legend.justification = c(1, 0),
legend.position = c(0.5, 0.4),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.direction = "vertical") +
guides(fill = guide_colorbar(barwidth = 1, barheight = 3,
title.position = "top",
title.hjust = 0.5,
ticks.colour = "black"))
p2
ggsave(filename = 'Fig6c_sev_water_stress_dTree_300m.png', height=24, width= 16, units = 'cm', dpi=900)
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(Tree_Cover > 0 & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2013, 2014)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = Tree_Cover, group = Tree_Cover), binwidth = c(500, 0.25)) +
theme_bw() +
scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p1
# pixel.data %>% summary()
p2<- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2017, 2018)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = dTree, group = dTree), binwidth = c(500, 0.25)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-10, 5), midpoint = 0, na.value = 'transparent') +  #
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p2
#ADS die-off
p3 <- ggplot() +
geom_bin2d(data = sev.pixel.sample %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE), SPI48 = SPI48[vi.year == 2015], elevation = elevation[vi.year == 2015],
latitude = latitude[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = tpa_max, group = tpa_max), binwidth = c(500, 0.25)) +
scale_fill_gradient(name = "Die-off \n(trees per hectare)", low = "white", high = "red", na.value = 'transparent') +
theme_bw() +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude') + xlab('Elevation (m)')
p3
p4<- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2018, 2019)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], count = sum(elevation[vi.year == 2015]), n = n(), SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation), binwidth = c(500, 0.25)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_fill_gradient2(name = "Die-off (% Tree Cover)", limits = c(-50, 20), midpoint = 0, low = "red", mid = "white", high = "blue", na.value = 'transparent') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(. ~ sev.bin) +
ylab('Latitude') + xlab('Elevation (m)')
p4
f1 <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f1
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2013, 2014)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = Tree_Cover, group = Tree_Cover), binwidth = c(500, 0.25)) +
theme_bw() +
scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p1
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = Tree_Cover, group = Tree_Cover), binwidth = c(500, 0.25)) +
theme_bw() +
scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p1
# pixel.data %>% summary()
p2<- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2017, 2018)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = dTree, group = dTree), binwidth = c(500, 0.25)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-10, 5), midpoint = 0, na.value = 'transparent') +  #
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p2
p2<- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2017, 2018)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = dTree, group = dTree), binwidth = c(500, 0.25)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-25, 5), midpoint = 0, na.value = 'transparent') +  #
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p2
p2<- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2017, 2018)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = dTree, group = dTree), binwidth = c(500, 0.25)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-15, 5), midpoint = 0, na.value = 'transparent') +  #
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p2
p3 <- ggplot() +
geom_bin2d(data = sev.pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE), SPI48 = SPI48[vi.year == 2015], elevation = elevation[vi.year == 2015],
latitude = latitude[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation, fill = tpa_max, group = tpa_max), binwidth = c(500, 0.25)) +
scale_fill_gradient(name = "Die-off \n(trees per hectare)", low = "white", high = "red", na.value = 'transparent') +
theme_bw() +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude') + xlab('Elevation (m)')
p3
p4<- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015], Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2018, 2019)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], count = sum(elevation[vi.year == 2015]), n = n(), SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = latitude, x = elevation), binwidth = c(500, 0.25)) +
theme_bw() +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_fill_gradient2(name = "Die-off (% Tree Cover)", limits = c(-50, 20), midpoint = 0, low = "red", mid = "white", high = "blue", na.value = 'transparent') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(. ~ sev.bin) +
ylab('Latitude') + xlab('Elevation (m)')
p4
f1 <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f1
#Save the data
ggsave(filename = 'Fig2c_sev_fire_dieoff_tree_cover_fireyear_geographic_distribution.png', height=28, width= 24, units = 'cm', dpi=900)
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = Water_Stress, x = Tree_Cover, fill = dTree, group = dTree), binwidth = c(500, 2)) +
theme_bw() +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-15, 5), midpoint = 0, na.value = 'transparent') +
# scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p1
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = Water_Stress, x = Tree_Cover, fill = dTree, group = dTree), binwidth = c(2, 500)) +
theme_bw() +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-15, 5), midpoint = 0, na.value = 'transparent') +
# scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude')
p1
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = Water_Stress, x = Tree_Cover, fill = dTree, group = dTree), binwidth = c(2, 500)) +
theme_bw() +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-15, 5), midpoint = 0, na.value = 'transparent') +
# scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude') + xlab('Tree Cover (%)')
p1
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = Water_Stress, x = Tree_Cover, fill = dTree, group = dTree), binwidth = c(5, 500)) +
theme_bw() +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-15, 5), midpoint = 0, na.value = 'transparent') +
# scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Latitude') + xlab('Tree Cover (%)')
p1
p2 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = Water_Stress, x = Tree_Cover, fill = tpa_max, group = tpa_max), binwidth = c(5, 500)) +
theme_bw() +
scale_fill_gradient(name = "Die-off \n(trees per hectare)", low = "white", high = "red", na.value = 'transparent') +
# scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Water Stress') + xlab('Tree Cover (%)')
p2
p1 <- ggplot() +
#Data Summary
geom_bin2d(data = sev.pixel.sample %>% #sev.bin != 'Unchanged' &
filter(fire.year <= 2010 & fire.year > 1986 & !is.na(sev.bin) & (fire_year_2019 <=2010 | treatment == 'Control')) %>% # &
#Match the controls to the disturbed based on the stratified sampling bins
# filter(case_when(sev.bin == 'Unchanged' ~ stratlayer %in% un.strat,
#                  sev.bin == 'Low' ~ stratlayer %in% lo.strat,
#                  sev.bin == 'Mid' ~ stratlayer %in% mid.strat,
#                  sev.bin == 'High' ~ stratlayer %in% hi.strat)) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2016, 2017)]) - mean(Tree_Cover[vi.year %in% c(2011,2012)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
Tree_Cover = (mean(Tree_Cover[vi.year %in% c(2011, 2012)])), elevation = elevation[vi.year == 2015], clm_precip_sum = clm_precip_sum[vi.year == 2015],
latitude = latitude[vi.year == 2015], SPI48 = SPI48[vi.year == 2015]), # filter for drought areas
mapping = aes(y = Water_Stress, x = Tree_Cover, fill = dTree, group = dTree), binwidth = c(5, 500)) +
theme_bw() +
scale_fill_gradient2(name = "Die-off \n(% Tree Cover)", low = "firebrick1", mid = "lightgoldenrodyellow", high = "dodgerblue", limits = c(-15, 5), midpoint = 0, na.value = 'transparent') +
# scale_fill_gradient(name = "Tree Cover (%)", limits = c(0, 100), low = "brown", high = "forest green", na.value = 'transparent') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = "right", axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_grid(treatment ~ sev.bin) +
ylab('Water Stress') + xlab('Tree Cover (%)')
p1
f1 <- ggarrange(p1, p2, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a)', 'b)'))
f1
#Save the data
ggsave(filename = 'Fig2c_sev_fire_dieoff_tree_cover_fireyear_geographic_distribution.png', height=20, width= 24, units = 'cm', dpi=900)
