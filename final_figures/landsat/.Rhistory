group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p3
f2 <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f2
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd,
c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage,
c.dstrbcd1, c.dstrbyr1
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means non-forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 1.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR P.ECOSUBCD = 'M261Er') --South Sierra Nevada
--Combined Sierra and SoCal Stand Age
--AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es' OR P.ECOSUBCD = 'M262Bd' OR P.ECOSUBCD = 'M262Be' OR P.ECOSUBCD = 'M262Bg' OR P.ECOSUBCD = 'M262Bh' OR P.ECOSUBCD = 'M262Bf' OR P.ECOSUBCD = 'M262Bo' OR P.ECOSUBCD = 'M262Bi' OR P.ECOSUBCD = 'M262Bm' OR P.ECOSUBCD = 'M262Bl' OR P.ECOSUBCD = 'M262Bc' OR P.ECOSUBCD = 'M262Bp' OR P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba')
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) -- No Fires OR c.dstrbcd1 = 30 OR c.dstrbcd1 = 31 OR c.dstrbcd1 = 32)
")
#DSTRBCD1 == 30, 31, 32 reference fires
all <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(all)
#Convert per acre to per hectare
all$count <- all$count * 2.47105 # Convert to per hectare
all$DIA <- all$DIA * (2.54) #Convert to centimeters
all$basal_area <- (((all$DIA / 2)^2) * pi)*(1/10000) * all$count
#combined the data together
live <- all %>% filter(STATUSCD == 1) %>% group_by(INVYR, PLOT) %>% summarize(count.live = n(), tpa.live = sum(count), basal_area.live = sum(basal_area), STDAGE = median(STDAGE), FORTYPCD = median(FORTYPCD), MEANING = first(MEANING))
live
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR) & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019")
dead
join <- left_join(live, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
summary(join)
#Add the total basal area calculations
join$count.all <- join$count.live + join$count.dead
join$tpa.all <- join$tpa.live + join$tpa.dead
join$basal_area.all <- join$basal_area.live + join$basal_area.dead
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
#Bin data by Stand Age. Bins are quintiles.
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '93-119',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-92'))
join
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-92','93-119','120-159',
'160-209','210+')))
# join %>% group_by(stdage.bin) %>% summarize(basal_area = mean(basal_area.dead), count = n())
# join %>% filter(is.na(stdage.bin))
# join
# # live.plot
# bhage.q <- as.data.frame(unname(quantile(live$BHAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# live
#Mortality binned by stand age
#Add a new year column
# join <- join %>% mutate(year = case_when(is.na(MORTYR) ~ INVYR, !is.na(MORTYR) ~ MORTYR))
join <- join %>% mutate(age.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE < 120 & STDAGE >= 93 ~ '93-119',
STDAGE >= 30 & STDAGE < 93 ~ '30-92',
STDAGE < 29 ~ '0-29'))
#Order the stand age bins
join$age.bin = with(join, factor(age.bin, levels = c('0-29', '30-92', '93-119','120-159',
'160-209','210+')))
summary(join)
#Region wide counts of dead and live trees
p1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter(MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
geom_ribbon(data = join %>%
filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>%
summarize(BA.dead = mean(basal_area.dead),
BA.dead.sd = sd(basal_area.dead), BA.n = n()),
mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
p1
p2 <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
geom_line(data = join  %>%
filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead), BA.n = n()), mapping = aes(x = INVYR, y = BA.n), color = 'black', size = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab('# Plots') #+ ylim(0, 60)
p2
# join %>% filter(STDAGE <= 10) %>% count()
p3 <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join  %>% filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()), mapping = aes(x = INVYR, y = BA.all), color = 'black', size = 1) +
#The error bars
geom_ribbon(data = join %>%
filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p3
f2 <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f2
ggsave(filename = 'Fig2_mortality_time_series_FIA_conifer_forest.png', height=18, width= 10, units = 'cm', dpi=900)
p1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% #filter(MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
geom_ribbon(data = join %>%
#filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>%
summarize(BA.dead = mean(basal_area.dead),
BA.dead.sd = sd(basal_area.dead), BA.n = n()),
mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
p1
p2 <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
geom_line(data = join  %>%
#filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead), BA.n = n()), mapping = aes(x = INVYR, y = BA.n), color = 'black', size = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab('# Plots') #+ ylim(0, 60)
p2
# join %>% filter(STDAGE <= 10) %>% count()
p3 <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join  %>% #filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()), mapping = aes(x = INVYR, y = BA.all), color = 'black', size = 1) +
#The error bars
geom_ribbon(data = join %>%
#filter( MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p3
f2 <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f2
ggsave(filename = 'Fig2_mortality_time_series_FIA_conifer_forest.png', height=18, width= 10, units = 'cm', dpi=900)
f2 <- ggplot() + geom_histogram(data = (join %>% filter(!is.na(STDAGE) & MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>% select(STDAGE)),
mapping = aes(x =STDAGE), bins = 60) +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
theme_bw() + xlab('Stand Age') + ylab('Count')
f2
ggsave(filename = 'Fig3_Stand_Age_Quintiles_historgram_forest_type.png', height=6, width= 10, units = 'cm', dpi=900)
f4<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)& MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)& MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f4
p4<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)& MEANING %in% c('California mixed conifer', 'White fir', 'Pinyon / juniper woodland', 'Ponderosa pine', 'Jeffrey pine')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p4
p5<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.n, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR, stdage.bin) %>%
#               summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
#             mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p5
p6<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n(), BA.all.sd = sd(basal_area.all)),
mapping = aes(x = INVYR, ymin=BA.all - 1.96*(BA.all.sd / sqrt(BA.n)),
ymax=BA.all + 1.96*(BA.all.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p6
p6<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n(), BA.all.sd = sd(basal_area.all)),
mapping = aes(x = INVYR, ymin=BA.all - 1.96*(BA.all.sd / sqrt(BA.n)),
ymax=BA.all + 1.96*(BA.all.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p6
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/4), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.25, 0.5, 0.75, 1.0)
# temp.q
stdage.q
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.75) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '200+',
# STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
#   STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.75) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '140-199',
STDAGE >= stdage.q %>% filter(Quintile == 0.25) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '100-139',
STDAGE < stdage.q %>% filter(Quintile == 0.25) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-99'))
join
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-99','100-139','140-199',
'200+')))
p4<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p4
p5<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.n, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR, stdage.bin) %>%
#               summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
#             mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p5
p6<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n(), BA.all.sd = sd(basal_area.all)),
mapping = aes(x = INVYR, ymin=BA.all - 1.96*(BA.all.sd / sqrt(BA.n)),
ymax=BA.all + 1.96*(BA.all.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p6
f4 <- ggarrange(p4, p5, p6, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f4
stdage.q <- as.data.frame(unname(quantile((join %>% filter(INVYR %in% c(2015, 2016, 2017, 2108, 2019)))$STDAGE, prob = seq(0,1, 1/4), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.25, 0.5, 0.75, 1.0)
# temp.q
stdage.q
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-109','110-159','160-199','200+')))
p4<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p4
p5<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.n, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR, stdage.bin) %>%
#               summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
#             mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p5
p6<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n(), BA.all.sd = sd(basal_area.all)),
mapping = aes(x = INVYR, ymin=BA.all - 1.96*(BA.all.sd / sqrt(BA.n)),
ymax=BA.all + 1.96*(BA.all.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p6
f4 <- ggarrange(p4, p5, p6, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f4
join %>% summary()
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.75) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '200+',
# STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
#   STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.75) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-199',
STDAGE >= stdage.q %>% filter(Quintile == 0.25) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '110-159',
STDAGE < stdage.q %>% filter(Quintile == 0.25) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-109'))
join
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-109','110-159','160-199','200+')))
join %>% summary()
p4<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p4
p5<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.n, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR, stdage.bin) %>%
#               summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
#             mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p5
p6<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n(), BA.all.sd = sd(basal_area.all)),
mapping = aes(x = INVYR, ymin=BA.all - 1.96*(BA.all.sd / sqrt(BA.n)),
ymax=BA.all + 1.96*(BA.all.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p6
f4 <- ggarrange(p4, p5, p6, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f4
stdage.q <- as.data.frame(unname(quantile((join %>% filter(INVYR %in% c(2015, 2016, 2017, 2108, 2019)))$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '165-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '133-164',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '105-132',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-104'))
join
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-104','105-132','133-164', '165-209', '210+')))
p4<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p4
p5<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.n, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR, stdage.bin) %>%
#               summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
#             mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
p5
p6<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.all = mean(basal_area.all), BA.n = n(), BA.all.sd = sd(basal_area.all)),
mapping = aes(x = INVYR, ymin=BA.all - 1.96*(BA.all.sd / sqrt(BA.n)),
ymax=BA.all + 1.96*(BA.all.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
p6
f4 <- ggarrange(p4, p5, p6, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f4
ggsave(filename = 'Fig4_stand_age_mortality_time_series_FIA.png', height=6, width= 15, units = 'cm', dpi=900)
