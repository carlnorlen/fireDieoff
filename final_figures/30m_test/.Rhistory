p2b
#Create the Water Stress Panel
f3 <- ggarrange(p2a, p2b, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a', 'b'))
f3
#Save the data
ggsave(filename = 'FigS2_sev_water_fluxes_time_series.png', height=12, width= 18, units = 'cm', dpi=900)
#Table 2 and Table S2, Barplots and regression analysis
sev.pixel.filter <- sev.pixel.sample %>% filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
reframe(dTree = mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2012,2013)])) / mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
Tree_Cover = mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
ET = mean(AET[vi.year %in% c(2010, 2011)]),
ADS = sum(tpa_max[vi.year %in% c(2015, 2016, 2017, 2018)]),
# Water_Stress = Water_Stress[vi.year == 2015],
PrET_4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
sev.bin = sev.bin[vi.year == 2010],
sev.bin.cat = fire_sev_2010[vi.year == 2010],
stand.age = stand.age[vi.year == 2010],
treatment.cat = treat[vi.year == 2010],
treatment = treatment[vi.year == 2010])
# summary(sev.pixel.filter)
#Results for Table S2 summarizing Figures 2 and 3
aov.dTree.treatment.sev <- aov(dTree ~ treatment * sev.bin, data = sev.pixel.filter)
summary(aov.dTree.treatment.sev)
aov.ADS.treatment.sev <- aov(ADS ~ treatment * sev.bin, data = sev.pixel.filter)
summary(aov.ADS.treatment.sev)
aov.PrET4yr.treatment.sev <- aov(PrET_4yr ~ treatment * sev.bin, data = sev.pixel.filter)
summary(aov.PrET4yr.treatment.sev)
aov.tree.treatment.sev <- aov(Tree_Cover ~ treatment * sev.bin, data = sev.pixel.filter)
summary(aov.tree.treatment.sev)
aov.ET.treatment.sev <- aov(ET ~ treatment * sev.bin, data = sev.pixel.filter)
summary(aov.tree.treatment.sev)
# aov.dTree.PrET4yrpredict.treatment.sev <- aov(dTree.PrET_4yr.predict ~ treatment * sev.bin, data = sev.pixel.filter)
# summary(aov.dTree.treatment.sev)
#
# aov.ADS.predict.treatment.sev <- aov(ADS.PrET_4yr.predict~ treatment * sev.bin, data = sev.pixel.filter)
# summary(aov.PrET4yrADS.treatment.sev)
#
# aov.dTree.predict.treatment.sev <- aov(dTree.PrET_4yr.predict ~ treatment * sev.bin, data = sev.pixel.filter)
# summary(aov.dTree.treatment.sev)
#
# aov.ADS.predict.treatment.sev <- aov(ADS.PrET_4yr.predict~ treatment * sev.bin, data = sev.pixel.filter)
# summary(aov.ADS.treatment.sev)
#Tukey HSD comparison
tukey.dTree.treatment.sev <- TukeyHSD(aov.dTree.treatment.sev)
print(tukey.dTree.treatment.sev)
tukey.ADS.treatment.sev <- TukeyHSD(aov.ADS.treatment.sev)
print(tukey.ADS.treatment.sev)
tukey.PrET4yr.treatment.sev <- TukeyHSD(aov.PrET4yr.treatment.sev)
print(tukey.PrET4yr.treatment.sev)
tukey.tree.treatment.sev <- TukeyHSD(aov.tree.treatment.sev)
print(tukey.tree.treatment.sev)
tukey.ET.treatment.sev <- TukeyHSD(aov.ET.treatment.sev)
print(tukey.ET.treatment.sev)
#Work on combining the different data sets into a table
#Tukey HSD posthoc tests
#Combine all the t-test results in a list
tHSD <- list(tukey.ADS.treatment.sev, tukey.dTree.treatment.sev,
tukey.tree.treatment.sev, tukey.ET.treatment.sev, tukey.PrET4yr.treatment.sev)
#Combine the t-test results in a data frame
df.tHSD <- as.data.frame(purrr::map_df(tHSD, tidy))
tHSD.filter <- df.tHSD %>% filter(contrast %in% c('Disturb:Unchanged-Control:Unchanged', 'Disturb:Low-Control:Low',
'Disturb:Mid-Control:Mid', 'Disturb:High-Control:High'))
#Add a variable label column
# tHSD.filter$variable
tHSD.filter$variable = c('Dieback (trees ha<sup>-1</sup>)','Dieback (trees ha<sup>-1</sup>)','Dieback (trees ha<sup>-1</sup>)','Dieback (trees ha<sup>-1</sup>)',
'Dieback (% Tree Cover)','Dieback (% Tree Cover)','Dieback (% Tree Cover)','Dieback (% Tree Cover)',
'Pre-Drought Tree Cover (%)','Pre-Drought Tree Cover (%)','Pre-Drought Tree Cover (%)','Pre-Drought Tree Cover (%)',
'Pre-Drought ET (mm yr<sup>-1</sup>)','Pre-Drought ET (mm yr<sup>-1</sup>)','Pre-Drought ET (mm yr<sup>-1</sup>)','Pre-Drought ET (mm yr<sup>-1</sup>)',
'Pr-ET (mm 4yr<sup>-1</sup>)','Pr-ET (mm 4yr<sup>-1</sup>)','Pr-ET (mm 4yr<sup>-1</sup>)','Pr-ET (mm 4yr<sup>-1</sup>)')
tHSD.filter$fire.severity = c('Lowest', 'Low', 'Moderate', 'High',
'Lowest', 'Low', 'Moderate', 'High',
'Lowest', 'Low', 'Moderate', 'High',
'Lowest', 'Low', 'Moderate', 'High',
'Lowest', 'Low', 'Moderate', 'High')
#Add mean values for Estimate 1
tHSD.filter$estimate.1 <- c(
# Die-off (ADS)
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Unchanged'))$ADS, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Low'))$ADS, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Mid'))$ADS, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'High'))$ADS, na.rm = T),
# Die-off (dtree)
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Unchanged'))$dTree, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Low'))$dTree, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Mid'))$dTree, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'High'))$dTree, na.rm = T),
#Tree Cover
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Unchanged'))$Tree_Cover, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Low'))$Tree_Cover, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Mid'))$Tree_Cover, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'High'))$Tree_Cover, na.rm = T),
#ET
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Unchanged'))$ET, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Low'))$ET, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Mid'))$ET, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'High'))$ET, na.rm = T),
# Pr-ET 4yr
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Unchanged'))$PrET_4yr, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Low'))$PrET_4yr, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'Mid'))$PrET_4yr, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == 'High'))$PrET_4yr, na.rm = T)
)
#Add mean values for Estimate 2
tHSD.filter$estimate.2 <- c(
# Die-off (ADS)
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Unchanged'))$ADS, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Low'))$ADS, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Mid'))$ADS, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'High'))$ADS, na.rm = T),
# Die-off (dtree)
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Unchanged'))$dTree, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Low'))$dTree, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Mid'))$dTree, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'High'))$dTree, na.rm = T),
#Tree Cover
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Unchanged'))$Tree_Cover, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Low'))$Tree_Cover, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Mid'))$Tree_Cover, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'High'))$Tree_Cover, na.rm = T),
#ET
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Unchanged'))$ET, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Low'))$ET, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Mid'))$ET, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'High'))$ET, na.rm = T),
#Pr-ET 4yr
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Unchanged'))$PrET_4yr, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Low'))$PrET_4yr, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'Mid'))$PrET_4yr, na.rm = T),
mean((sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == 'High'))$PrET_4yr, na.rm = T)
)
#Calculate proportion differences from Tukey HSD tests
tHSD.filter$diff.pct <- tHSD.filter$estimate / tHSD.filter$estimate.2 * 100
tHSD.filter$low.pct <- tHSD.filter$conf.low / tHSD.filter$estimate.2 * 100
tHSD.filter$high.pct <- tHSD.filter$conf.high / tHSD.filter$estimate.2 * 100
#Select and sort the tukey HSD columns and
tHSD.filter.tab <- tHSD.filter %>% dplyr::select(variable, fire.severity, diff.pct, high.pct, low.pct, adj.p.value)
#Name the columns of the data frame
colnames(tHSD.filter.tab) <- c('Variable', 'Fire Severity', 'Difference (%)', 'Low 95% CI', 'High 95% CI', 'p-value')
tb1 <- kbl(tHSD.filter.tab, format = 'html', caption = "Tukey HSD Comparisons between Fire Severity Groups", digits = c(0,0,1,1,1,3), escape = F) %>% kable_classic_2(font_size = 14, full_width = F)
as_image(x = tb1, width = 10, file = "Table2_fire_severity_tHSD_test_results_with_pct.png", zoom = 5.0)
tb1
tHSD.filter.sup <- tHSD.filter %>% dplyr::select(variable, fire.severity, estimate.1, estimate.2, estimate, conf.low, conf.high,
diff.pct, high.pct, low.pct, adj.p.value)
#Name the columns of the data frame
colnames(tHSD.filter.sup) <- c('Variable', 'Fire Severity', 'Disturb Estimate', 'Control Estimate','Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 'p-value')
# ncol(tHSD.filter.sup)
#ANOVA and Tukey HSD comparing by time period and drought sequence, same as Table S2 plus % changes
tb2 <- kbl(tHSD.filter.sup, format = 'html', caption = "Tukey HSD Comparisons between Fire Severity Groups", digits = c(0,0,1,1,1,1,1,1,1,1,3), escape = F) %>% kable_classic_2(font_size = 14, full_width = F)
tb2
p7a <- ggbarplot(sev.pixel.filter,
y = "ADS", position = position_dodge(), fill = "sev.bin", x = 'treatment', #x = 'sev.bin',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5, #palette = c("gray25", "gray75"),
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
facet_wrap(. ~ sev.bin, nrow = 1, ncol = 4, labeller = as_labeller(c('Unchanged' = 'Lowest', 'Low' = 'Low', 'Mid' = 'Mid', 'High' = 'High'))) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 11), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.text.x = element_text(size = 12, face = 'bold')) +
# labs(tag = 'a') +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.82,
method = "tukey_hsd", label = "p.format", #group.by = 'treatment',
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Dieback Severity','(trees ha'^-1*')')))
p7a
p7b <- ggbarplot(sev.pixel.filter,
y = "dTree", position = position_dodge(), fill = "sev.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
facet_wrap(. ~ sev.bin, nrow = 1, ncol = 4) +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.54, group.by = "sev.bin",
method = "tukey_hsd", label = "p.format"
) +
scale_y_reverse(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Dieback Severity', '('*Delta*'Tree %)')))
p7b
p7c <- ggbarplot(sev.pixel.filter,
y = "Tree_Cover", position = position_dodge(), fill = "sev.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
facet_wrap(. ~ sev.bin, nrow = 1, ncol = 4) +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.45, #p.adjust.method = "bonferroni",
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Pre-Drought','Tree Cover (%)')))
p7c
p7d <- ggbarplot(sev.pixel.filter,
y = "ET", position = position_dodge(), fill = "sev.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
facet_wrap(. ~ sev.bin, nrow = 1, ncol = 4) +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.45,
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Pre-Drought','ET (mm yr'^-1*')'))) + xlab('Treatment') +
scale_x_discrete(labels = c("Unburned", "Burned")) #+
p7d
p7e <- ggbarplot(sev.pixel.filter,
y = "PrET_4yr", position = position_dodge(), fill = "sev.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
facet_wrap(. ~ sev.bin, nrow = 1, ncol = 4) +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_text(size = 10), axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.52,
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Pr-ET','(mm 4yr'^-1*')'))) + xlab('Treatment') +
scale_x_discrete(labels = c("Unburned", "Burned")) #+
p7e
f7 <- (p7a / p7b / p7c / p7d / p7e) + plot_annotation(tag_levels = 'a')
f7
#Save PNG file
ggsave(filename = 'Fig7_sev_comparison_barchart.png', height=20, width= 20, units = 'cm', dpi=900)
#Save SVG file
ggsave(filename = 'Fig7_sev_comparison_barchart.svg', height=20, width= 20, units = 'cm', dpi=900)
#Create Figure S4
p3a <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a Tree Cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(stand.age, treatment, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover)), mapping = aes(x = stand.age, y = Tree_Cover.mean, color = sev.bin,  linetype = treatment), linewidth = 1) +
#Tree Cover 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 & !is.na(sev.bin) & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(stand.age, treatment, sev.bin,) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = stand.age, fill = sev.bin,  alpha = treatment)) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.title.y = element_text(size = 10), legend.position = c(0.15, 0.4), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
# guides(color = guide_legend(), linetype = 'none', fill = guide_legend(), alpha = 'none') +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
facet_grid(. ~ sev.bin, labeller = as_labeller(c('Unchanged' = 'Lowest', 'Low' = 'Low', 'Mid' = 'Mid', 'High' = 'High'))) +
ylab(expression('Tree Cover (%)')) + xlab('Years Since Fire')
p3a
p3b <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 &  (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover)), mapping = aes(x = stand.age, y = Shrub_Cover.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(Shrub_Cover.mean = mean(Shrub_Cover),
Shrub_Cover.sd = sd(Shrub_Cover), Shrub_Cover.n = n()),
mapping = aes(ymin=Shrub_Cover.mean - 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
ymax=Shrub_Cover.mean + 1.96*(Shrub_Cover.sd / sqrt(Shrub_Cover.n)),
x = stand.age, fill = sev.bin, alpha = treatment)) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.15, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
# guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
guides(color = 'none', linetype = 'none', fill = 'none', alpha = 'none') +
facet_grid(. ~ sev.bin, labeller = as_labeller(c('Unchanged' = 'Lowest', 'Low' = 'Low', 'Mid' = 'Mid', 'High' = 'High'))) +
# guides(fill = "none") +
ylab(expression('Shrub Cover (%)')) + xlab('Years Since Fire')
p3b
p3c <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 &  (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(AET.mean = mean(AET)), mapping = aes(x = stand.age, y = AET.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & !is.na(Shrub_Cover) & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(AET.mean = mean(AET),
AET.sd = sd(AET), AET.n = n()),
mapping = aes(ymin=AET.mean - 1.96*(AET.sd / sqrt(AET.n)),
ymax=AET.mean + 1.96*(AET.sd / sqrt(AET.n)),
x = stand.age, fill = sev.bin, alpha = treatment)) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.15, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_fill_manual(values = mypalette, name = 'Fire Severity') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
# guides(color = 'none', linetype = 'gu, fill = 'none', alpha = 'none') +
guides(color = 'none', linetype = 'none', fill = 'none', alpha = 'none') +
facet_grid(. ~ sev.bin) +
# guides(fill = "none") +
ylab(expression('ET (mm yr'^-1*')')) + xlab('Years Since Fire')
p3c
f4 <- ggarrange(p3a, p3b, p3c, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(1.0, 0.9, 1), align = "v", labels = c('a', 'b', 'c'))
f4
#Save the data
ggsave(filename = 'FigS5_sev_stand_age_treatment_veg_cover.png', height=18, width= 20, units = 'cm', dpi=900)
#Create Fig S5, the data check figure
p4a <- ggplot() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 &  (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()), mapping = aes(x = stand.age, y = Tree_Cover.n, color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.15, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
facet_grid(. ~ sev.bin, labeller = as_labeller(c('Unchanged' = 'Lowest', 'Low' = 'Low', 'Mid' = 'Mid', 'High' = 'High'))) +
ylab(expression('# Pixels'))
p4a
find_mode <- function(x) {
u <- unique(x)
tab <- tabulate(match(x, u))
u[tab == max(tab)]
}
p4b <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 &  (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(fire_year.mode = mean(fire.year)), mapping = aes(x = stand.age, y = fire_year.mode, color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
ylim(1985, 2015) +
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
guides(color = 'none', linetype = 'none', fill = 'none', alpha = 'none') +
facet_grid(. ~ sev.bin) +
ylab(expression('Mean Fire Year')) #+ xlab('Years Since Fire')
p4b
p4c <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 &  (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% #& elevation >= elev.lower & clm_temp_mean_mean >= temp.lower & clm_precip_sum_mean <= ppt.upper & stratlayer %in% strat.list
group_by(stand.age, treatment, sev.bin) %>%
summarize(vi.year.mode = mean(vi.year)), mapping = aes(x = stand.age, y = vi.year.mode, color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
ylim(1985, 2015) +
scale_linetype(name = 'Treatment') +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
guides(color = 'none', linetype = 'none', fill = 'none', alpha = 'none') +
facet_grid(. ~ sev.bin) +
ylab(expression('Mean VI Year')) + xlab('Years Since Fire')
p4c
f5 <- ggarrange(p4a, p4b, p4c, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(1, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f5
#Save the data
ggsave(filename = 'FigS6_data_check_fire_sev.png', height=18, width= 20, units = 'cm', dpi=900)
#Figure S8: ADS vs. dTree
p6 <- ggplot(data = sev.pixel.filter) +
#Create the density layer
geom_bin2d(binwidth = c(2.5, 10), mapping = aes(x = dTree, y = ADS, group = after_stat(count), alpha = after_stat(count))) +
scale_fill_gradient2(limits = c(0,1600), breaks = c(5,400,800,1200), midpoint = 800, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
scale_alpha(range = c(1, 1), limits = c(5, 1600), na.value = 0.4) +labs(fill = "Grid Cells") +
guides(alpha = 'none') +
geom_smooth(method = 'lm', mapping = aes(x = dTree, y = ADS), color = 'black', size = 2, linetype = 'dashed') +
stat_cor(mapping = aes(x = dTree, y = ADS, label = paste(..rr.label..))) +
theme_bw() +
xlab('Dieback (% Tree Cover)') + ylab(expression('Dieback (trees ha'^-1*')'))
p6
ggsave(filename = 'FigS8_frap_rx_dieoff_comparison.png', height=16, width= 16, units = 'cm', dpi=900)
sev.ads.lm <- lm(data = sev.pixel.filter %>% filter(treatment == 'Control'), ADS ~ Tree_Cover + PrET_4yr)
summary(sev.ads.lm)
sev.ads.relimp <- calc.relimp(sev.ads.lm, rela = TRUE, type = "lmg")
sev.control$dTree.predict = predict(sev.dtree.pet4yr.seg)
sev.control <- sev.pixel.filter %>% filter(treatment == 'Control')
sev.control.ads <- sev.pixel.filter %>% filter(treatment == 'Control' & !is.na(ADS))
sev.distrub <- sev.pixel.filter %>% filter(treatment == 'Disturb')
# sev.hi.disturb <- sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == "High")
# sev.mid.control <- sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == "Mid")
# # sev.mid.disturb <- sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == "Mid")
# sev.lo.control <- sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == "Low")
# # sev.lo.disturb <- sev.pixel.filter %>% filter(treatment == 'Disturb' & sev.bin == "Low")
# sev.lowest.control <- sev.pixel.filter %>% filter(treatment == 'Control' & sev.bin == "Lowest")
#Models with Fire Severity Controls for Pr-ET 4-year
sev.dtree.pet4yr.lm <- lm(data = sev.control, dTree~ PrET_4yr)
sev.ads.pet4yr.lm <- lm(data = sev.control.ads, ADS ~ PrET_4yr)
#Models with Fire Severity Controls for Tree Cover
sev.dtree.tree.lm <- lm(data = sev.control, dTree~ Tree_Cover)
summary(sev.dtree.tree.lm)
sev.ads.tree.lm <- lm(data = sev.control.ads, ADS ~ Tree_Cover)
#Models for Mid Severity fire
# sev.mid.control.lm <- lm(data = sev.mid.control, dTree~ PrET_4yr)
# sev.mid.disturb.lm <- lm(data = sev.mid.disturb, dTree ~ PrET_4yr)
#
# #Models for Rx Fire
# sev.lo.control.lm <- lm(data = sev.lo.control, dTree~ PrET_4yr)
# sev.lo.disturb.lm <- lm(data = sev.lo.disturb, dTree ~ PrET_4yr)
#Calculate the sgemented models
sev.dtree.pet4yr.seg <- segmented(sev.dtree.pet4yr.lm, npsi = 1)
summary(sev.dtree.pet4yr.seg)
sev.ads.pet4yr.seg <- segmented(sev.ads.pet4yr.lm, npsi = 1)
summary(sev.ads.pet4yr.seg)
# sev.mid.control.seg <- segmented(sev.mid.control.lm)
# sev.mid.disturb.seg <- segmented(sev.mid.disturb.lm)
# sev.lo.control.seg <- segmented(sev.lo.control.lm)
# sev.lo.disturb.seg <- segmented(sev.lo.disturb.lm)
#Get the predictions for the Pr-ET 4-year models
sev.pixel.filter$dTree.PrET_4yr.predict <- predict(newdata = sev.pixel.filter, sev.dtree.pet4yr.seg)
