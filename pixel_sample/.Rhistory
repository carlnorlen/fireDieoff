print(ee_path_user)
print(email)
ee_clean_credentials("cnorlen@uci.edu")
ee_Initialize("cnorlen")
ee_Initialize("cnorlen", drive = TRUE)
googledrive::drive_auth(email="cnorlen@uci.edu")
gargle_oauth_email = "cnorlen@uci.edu"
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
library(googledrive)
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
googledrive::drive_auth(email= "cnorlen@uci.edu")
ee_check_credentials()
ee_Initialize(drive = TRUE)
library(Rcpp)
install.packages('Rcpp',repo='https://cran.r-project.org/')
install.packages("Rcpp", repo = "https://cran.r-project.org/")
library(Rcpp)
install.packages('httpuv',repo='https://cran.r-project.org/')
library(httpuv)
ee_Initialize(drive = TRUE)
library(rgee)
ee_Initialize(drive = TRUE)
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggmap', 'ggplot2', 'magrittr', 'raster',
'rgdal', 'sp', 'sf', 'RStoolbox', 'ncdf4', 'gtools', 'tigris', 'patchwork',
'rlist', 'ggspatial', 'svglite', 'mgcv')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Set the working directory
setwd('C:/Users/can02/mystuff/fireDieoff/pixel_sample')
#The data directory
dir_in <- "D:\\Fire_Dieoff"
fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the data
# pixel.data <- read.csv(file.path(dir_in, "Stratified_sample_stand_age_2012_no_fire_history_mask_20210629_30m_v2.csv"), header = TRUE, na.strings = "NaN") #v2 is for all of Sierra and Socal
# pixel.data <- read.csv(file.path(fire_in, "Stratified_sample_stand_age_no_fire_history_mask_01242022_30m.csv"), header = TRUE, na.strings = "NaN")
# pixel.data <- read.csv(file.path(dir_in, "fraprx_ecoregion_stratified_sample_100pts_30m_ts8_20220713.csv"), header = TRUE, na.strings = "NaN")
pixel.data <- read.csv(file.path(dir_in, "fraprx_ecoregion_stratified_sample_4categories_0pt5pct_300m_ts16_20220722.csv"), header = TRUE, na.strings = "NaN")
# list.files(fire_in)
summary(pixel.data)
#Get a  of the data
# summary(pixel.data)
# pixel.data <- pixel.data %>% filter(fire.year >= 1919 & !is.na(stand.age) & !is.na(NDMI))
`%notin%` <- Negate(`%in%`)
#Convert data to long format
pixel.data <- pixel.data %>% #dplyr::select(-c('latitude', 'longitude')) %>%
pivot_longer(cols = X10_AET:X9_tpa_max, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
pixel.data$year <- as.numeric(pixel.data$year) + 1984
#Convert missing TPA data to NAs
pixel.data[pixel.data$tpa_max == -9999,]$tpa_max <- NA
#Convert fire data -9999 to NAs
pixel.data[pixel.data$fire_type_2010 == -9999,]$fire_type_2010 <- NA
pixel.data[pixel.data$fire_year_2010 == -9999,]$fire_year_2010 <- NA
pixel.data[pixel.data$fire_type_2020 == -9999,]$fire_type_2020 <- NA
pixel.data[pixel.data$fire_year_2020 == -9999,]$fire_year_2020 <- NA
#Convert to trees per hectare
pixel.data$tpa_max <- pixel.data$tpa_max * 2.47105
#Make the dates into date time format for R
pixel.data$date <- as.Date(as.character(pixel.data$year), format = '%Y')
# pixel.data$vi.year <- format(pixel.data$date , '%Y')
pixel.data$vi.year <- pixel.data$year
pixel.data$fire.year <- pixel.data$fire_year_2010
pixel.data$stand.age <- as.numeric(pixel.data$year) - as.numeric(pixel.data$fire.year)
#Update Cover data to 100% scale
pixel.data$Tree_Cover <- pixel.data$Tree_Cover / 100
pixel.data$Shrub_Cover <- pixel.data$Shrub_Cover / 100
pixel.data$Herb_Cover <- pixel.data$Herb_Cover / 100
pixel.data$Bare_Cover <- pixel.data$Bare_Cover / 100
#Convert the SPI48 scale back to decimal
pixel.data$SPI48 <- pixel.data$SPI48 / 100
#Try to fix soil moisture by dividing by 10
pixel.data$Soil_Moisture <- pixel.data$Soil_Moisture / 10
#Create a GAM to predict NDMI by stand.age
# ndmi.gam <- gam(data = filter(pixel.data, vi.year <= 2012 & stand.age > 0), #fire.year >= 1919 &
#                 formula = NDMI ~ s(stand.age, bs = "cs", k = 5) + s(clm_precip_sum, k = 3) + s(clm_temp_mean, k = 3) + s(latitude, k = 3))
# summary(ndmi.gam)
# #Add a new column
# pixel.data$NDMI.predict <- NA
# pixel.data$NDMI.predict[pixel.data$stand.age <= 0] <- filter(pixel.data, stand.age <= 0)$NDMI
# pixel.data$NDMI.predict[pixel.data$stand.age > 0] <- predict(newdata = filter(pixel.data, stand.age > 0), object = ndmi.gam) #, header = TRUE, na.strings = "NaN")
#Calculate the Quintiles of precip climate normals
# precip.q <- as.data.frame(unname(quantile(pixel.data$clm_precip_sum, prob = seq(0,1, 1/5))))
# # precip.q
# colnames(precip.q) <- 'Precip'
# precip.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# precip.q
#
# # precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric()
#
# #Plot a histogram with precip quartiles.
# # ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = clm_precip_sum)) +
# #   geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric()), color = 'black')
# #
# # ggsave(filename = 'Fig1_Precip_Quartiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#
#
# #Bin data by precip climatology
# pixel.data <- pixel.data %>% mutate(precip.control = case_when(
#   clm_precip_sum >= precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric() ~ '> 80 %',
#   clm_precip_sum >= precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric() &
#   clm_precip_sum < precip.q %>% filter(Quartile == 0.8) %>% dplyr::select(Precip) %>% as.numeric() ~ '60 to 80 %',
#   clm_precip_sum >= precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric() &
#   clm_precip_sum < precip.q %>% filter(Quartile == 0.6) %>% dplyr::select(Precip) %>% as.numeric() ~ '40 to 60 %',
#   clm_precip_sum >= precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric()  &
#   clm_precip_sum < precip.q %>% filter(Quartile == 0.4) %>% dplyr::select(Precip) %>% as.numeric() ~ '20 to 40 %',
# 	clm_precip_sum < precip.q %>% filter(Quartile == 0.2) %>% dplyr::select(Precip) %>% as.numeric() ~ '0 to 20%'))
#
#
# #Calculate the Quintiles of temperature climate normals
# temp.q <- as.data.frame(unname(quantile(pixel.data$clm_temp_mean, prob = seq(0,1, 1/5))))
# # precip.q
# colnames(temp.q) <- 'Temp'
# temp.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# # temp.q
#
# #Histogram Plot of temperature quantiles
# # ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = clm_temp_mean)) +
# #   geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric()), color = 'black')
# #
# # ggsave(filename = 'Fig2_Temp_Quartiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#
# #Create temperature bins for analysis with quantiles
# pixel.data <- pixel.data %>% mutate(temp.control = case_when(
#   clm_temp_mean >= temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric() ~ '> 80 %',
#   clm_temp_mean >= temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric() &
#     clm_temp_mean < temp.q %>% filter(Quartile == 0.8) %>% dplyr::select(Temp) %>% as.numeric() ~ '60 to 80 %',
#   clm_temp_mean >= temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric() &
#     clm_temp_mean < temp.q %>% filter(Quartile == 0.6) %>% dplyr::select(Temp) %>% as.numeric() ~ '40 to 60 %',
#   clm_temp_mean >= temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric()  &
#     clm_temp_mean < temp.q %>% filter(Quartile == 0.4) %>% dplyr::select(Temp) %>% as.numeric() ~ '20 to 40 %',
#   clm_temp_mean < temp.q %>% filter(Quartile == 0.2) %>% dplyr::select(Temp) %>% as.numeric() ~ '0 to 20%'))
#
# #Calculate the Quintiles of elevation
# elev.q <- as.data.frame(unname(quantile(pixel.data$elevation, prob = seq(0,1, 1/5))))
# # precip.q
# colnames(elev.q) <- 'elevation'
# elev.q$'Quartile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# # temp.q
# elev.q
# #Histogram Plot of temperature quantiles
# # ggplot(data = pixel.data) + geom_histogram(mapping = aes( x = elevation)) +
# #   geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black') +
# #   geom_vline(xintercept = (elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric()), color = 'black')
# #
# # ggsave(filename = 'Fig3_Elevation_Quintiles_historgram.png', height=12.5, width= 20, units = 'cm', dpi=900)
#
# #Bin data by elevation. Bins are quintiles.
# pixel.data <- pixel.data %>% mutate(elevation.control = case_when(
#   elevation >= elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric() ~ '> 80 %',
#   elevation >= elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric() &
#     elevation < elev.q %>% filter(Quartile == 0.8) %>% dplyr::select(elevation) %>% as.numeric() ~ '60 to 80 %',
#   elevation >= elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric() &
#     elevation < elev.q %>% filter(Quartile == 0.6) %>% dplyr::select(elevation) %>% as.numeric() ~ '40 to 60 %',
#   elevation >= elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric()  &
#     elevation < elev.q %>% filter(Quartile == 0.4) %>% dplyr::select(elevation) %>% as.numeric() ~ '20 to 40 %',
#   elevation < elev.q %>% filter(Quartile == 0.2) %>% dplyr::select(elevation) %>% as.numeric() ~ '0 to 20%'))
pixel.data <- pixel.data %>% mutate(stand.age.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
is.na(fire.year) ~ 'No Fire',
fire.year >= 1910 & fire.year <=  1934 ~ '1910-1934',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
fire.year >= 1935 & fire.year <= 1959 ~ '1935-1959',#'56-80',
# fire.year >= 1971 & fire.year <= 1980 ~ '35-44',
fire.year >= 1960 & fire.year <= 1984 ~ '1960-1984',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year >= 1985 & fire.year <= 2010 ~ '1985-2010',
# fire.year >= 2001 & fire.year <= 2010 ~ '2001-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
pixel.data <- pixel.data %>% mutate(fire.year.bin = case_when(
# bin >= 1 ~ '1900',
# bin == 2 ~ '1909-1910',
# bin >= 1911 & bin <= 1920 ~ '95-104', #Calculated relative to 2015
is.na(fire.year) ~ 'No Fire',
fire.year >= 1910 & fire.year <=  1976 ~ '1910-1976',#'81-95',
# fire.year >= 1936 & fire.year <= 1950 ~ '65-79',
# fire.year >= 1951 & fire.year <= 1965 ~ '50-64',
# fire.year >= 1951 & fire.year <= 1960 ~ '55-64',
fire.year >= 1977 & fire.year <= 1998 ~ '1977-1998',#'56-80',
# fire.year >= 1971 & fire.year <= 1980 ~ '35-44',
fire.year >= 1999 & fire.year <= 2001 ~ '1999-2001',#'31-55',
# fire.year >= 1991 & fire.year <= 2000 ~ '15-24',
fire.year >= 2002 & fire.year <= 2005 ~ '2002-2005',
fire.year >= 2006 & fire.year <= 2010 ~ '2006-2010',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
summary(pixel.data)
pixel.data$stand.age.bin = with(pixel.data, factor(stand.age.bin, levels = c('2019-2020', '2011-2018', '1985-2010', '1960-1984', '1935-1959', '1910-1934', 'No Fire')))#c('0-4','5-30','31-55','56-80',
#'81-95')))
pixel.data$fire.year.bin = with(pixel.data, factor(fire.year.bin, levels = c('2019-2020', '2011-2018', '2006-2010', '2002-2005', '1999-2001', '1977-1998', '1910-1976', 'No Fire')))#c('0-4','5-30','31-55','56-80',
#'81-95')))
summary(pixel.data)
p25 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & stand.age <= 25 & stand.age >= 0 & fire_type_2010 == 2) %>% dplyr::group_by(system.index) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], RdTree = (Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012]) / Tree_Cover[vi.year == 2012], stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = dTree), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = dTree), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = dTree)) +
theme_bw()
p25
ggsave(filename = 'Fig52_dTree_stand_age_Rx_fire_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
p24 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & stand.age >= 0 & fire_type_2010 == 1) %>% dplyr::group_by(system.index) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = dTree), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = dTree), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = dTree)) +
theme_bw()
p24
ggsave(filename = 'Fig51_dTree_stand_age_wildfire_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
p27 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & fire_type_2010 ==1 & stand.age >= 0) %>% dplyr::group_by(system.index) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017)], na.rm = TRUE), stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = tpa_max), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = tpa_max), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = tpa_max)) +
theme_bw()
p27
ggsave(filename = 'Fig54_tpa_max_stand_age_wildfire_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
p26 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & stand.age >= 0 & stand.age <= 25 & fire_type_2010 == 2) %>% dplyr::group_by(system.index) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017)], na.rm = TRUE), stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = tpa_max), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = tpa_max), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = tpa_max)) +
theme_bw()
p26
ggsave(filename = 'Fig53_tpa_max_stand_age_Rx_burn_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
#Create a GPP stand age curve for Wildfires
p28 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year) & GPP >= 0) %>%
group_by(stand.age) %>%
summarize(GPP.mean = mean(GPP)), mapping = aes(x = stand.age, y = GPP.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year) & GPP >= 0) %>%
group_by(stand.age) %>%
summarize(GPP.mean = mean(GPP),
GPP.sd = sd(GPP), GPP.n = n()),
mapping = aes(ymin= GPP.mean - 1.96*(GPP.sd / sqrt(GPP.n)),
ymax=GPP.mean + 1.96*(GPP.sd / sqrt(GPP.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('GPP (g/m^2/yr)')) + xlab('Years Since Fire')
p28
p29 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year) & AET >= 0) %>%
group_by(stand.age) %>%
summarize(AET.mean = mean(AET)), mapping = aes(x = stand.age, y = AET.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year) & AET >= 0) %>%
group_by(stand.age) %>%
summarize(AET.mean = mean(AET),
AET.sd = sd(AET), AET.n = n()),
mapping = aes(ymin= AET.mean - 1.96*(AET.sd / sqrt(AET.n)),
ymax=AET.mean + 1.96*(AET.sd / sqrt(AET.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('AET (mm/yr)')) + xlab('Years Since Fire')
p29
p30 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year)) %>%
group_by(stand.age) %>%
summarize(ppt.mean = mean(ppt)), mapping = aes(x = stand.age, y = ppt.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year) & ppt >= 0) %>%
group_by(stand.age) %>%
summarize(ppt.mean = mean(ppt),
ppt.sd = sd(ppt), ppt.n = n()),
mapping = aes(ymin= ppt.mean - 1.96*(ppt.sd / sqrt(ppt.n)),
ymax=ppt.mean + 1.96*(ppt.sd / sqrt(ppt.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('Precip (mm/yr)')) + xlab('Years Since Fire')
p30
p31 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year)) %>%
group_by(stand.age) %>%
summarize(Water_Stress.mean = mean(Water_Stress)), mapping = aes(x = stand.age, y = Water_Stress.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -20 & stand.age <= 90 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 1 & !is.na(fire.year) & Water_Stress >= 0) %>%
group_by(stand.age) %>%
summarize(Water_Stress.mean = mean(Water_Stress),
Water_Stress.sd = sd(Water_Stress), Water_Stress.n = n()),
mapping = aes(ymin= Water_Stress.mean - 1.96*(Water_Stress.sd / sqrt(Water_Stress.n)),
ymax=Water_Stress.mean + 1.96*(Water_Stress.sd / sqrt(Water_Stress.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('Water Stress (mm)')) + xlab('Years Since Fire')
p31
f7 <- ggarrange(p28, p29, p30, p31, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f7
#Save the data
ggsave(filename = 'Fig55_wildfire_recovery_ecosystem properties.png', height=18, width= 14, units = 'cm', dpi=900)
p32 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year) & GPP >= 0) %>%
group_by(stand.age) %>%
summarize(GPP.mean = mean(GPP)), mapping = aes(x = stand.age, y = GPP.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year) & GPP >= 0) %>%
group_by(stand.age) %>%
summarize(GPP.mean = mean(GPP),
GPP.sd = sd(GPP), GPP.n = n()),
mapping = aes(ymin= GPP.mean - 1.96*(GPP.sd / sqrt(GPP.n)),
ymax=GPP.mean + 1.96*(GPP.sd / sqrt(GPP.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('GPP (g/m^2/yr)')) + xlab('Years Since Fire')
p32
p33 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year) & AET >= 0) %>%
group_by(stand.age) %>%
summarize(AET.mean = mean(AET)), mapping = aes(x = stand.age, y = AET.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year) & AET >= 0) %>%
group_by(stand.age) %>%
summarize(AET.mean = mean(AET),
AET.sd = sd(AET), AET.n = n()),
mapping = aes(ymin= AET.mean - 1.96*(AET.sd / sqrt(AET.n)),
ymax=AET.mean + 1.96*(AET.sd / sqrt(AET.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('AET (mm/yr)')) + xlab('Years Since Fire')
p33
p34 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year)) %>%
group_by(stand.age) %>%
summarize(ppt.mean = mean(ppt)), mapping = aes(x = stand.age, y = ppt.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year) & ppt >= 0) %>%
group_by(stand.age) %>%
summarize(ppt.mean = mean(ppt),
ppt.sd = sd(ppt), ppt.n = n()),
mapping = aes(ymin= ppt.mean - 1.96*(ppt.sd / sqrt(ppt.n)),
ymax=ppt.mean + 1.96*(ppt.sd / sqrt(ppt.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('Precip (mm/yr)')) + xlab('Years Since Fire')
p34
p35 <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0, linetype = 'dashed') +
#Create a shrub cover line
geom_line(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year)) %>%
group_by(stand.age) %>%
summarize(Water_Stress.mean = mean(Water_Stress)), mapping = aes(x = stand.age, y = Water_Stress.mean), size = 1) +
#Shrub Cover 95% CI
geom_ribbon(data = pixel.data %>%
filter(stand.age >= -10 & stand.age <= 25 & !is.na(Shrub_Cover) & vi.year <= 2010 & fire_type_2010 == 2 & !is.na(fire.year) & Water_Stress >= 0) %>%
group_by(stand.age) %>%
summarize(Water_Stress.mean = mean(Water_Stress),
Water_Stress.sd = sd(Water_Stress), Water_Stress.n = n()),
mapping = aes(ymin= Water_Stress.mean - 1.96*(Water_Stress.sd / sqrt(Water_Stress.n)),
ymax=Water_Stress.mean + 1.96*(Water_Stress.sd / sqrt(Water_Stress.n)),
x = stand.age), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = c(0.35, 0.8), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab(expression('Water Stress (mm)')) + xlab('Years Since Fire')
p35
f8 <- ggarrange(p32, p33, p34, p35, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f8
#Save the data
ggsave(filename = 'Fig56_Rx_fire_recovery_ecosystem_properties_0pt5pct_4groups.png', height=18, width= 14, units = 'cm', dpi=900)
p21 <- ggplot(data = pixel.data %>% dplyr::filter(if_else(stand.age.bin != 'No Fire', fire_type_2010 == 1, is.na(fire_type_2010))) %>% dplyr::group_by(system.index) %>% summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], Water_Stress.4yr = Water_Stress[vi.year == 2015], stand.age.bin = stand.age.bin)) +
geom_point(mapping = aes(x = Water_Stress.4yr, y = dTree, color = stand.age.bin), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = Water_Stress.4yr, y = dTree, color = stand.age.bin , linetype = stand.age.bin)) +
theme_bw()
p21
ggsave(filename = 'Fig48_water_stress_stand_age_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
pixel.data %>% summary()
p22 <- ggplot(data = pixel.data %>% dplyr::filter(if_else(stand.age.bin != 'No Fire', fire_type_2010 == 1, is.na(fire_type_2010))) %>% dplyr::group_by(system.index) %>% summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], Water_Stress = Water_Stress[vi.year == 2015], SPI48 = SPI48[vi.year == 2015], stand.age.bin = stand.age.bin)) +
geom_point(mapping = aes(x = SPI48, y = dTree, color = stand.age.bin), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = SPI48, y = dTree, color = stand.age.bin , linetype = stand.age.bin)) +
theme_bw()
p22
ggsave(filename = 'Fig49_SPI48_stand_age_0pt5pct_4group.png', height=16, width= 18, units = 'cm', dpi=900)
# getmode <- function(v) {
#   uniqv <- unique(v)
#   uniqv[which.max(tabulate(match(v, uniqv)))]
# }
# pixel.data %>% summary()
# pixel.data %>% dplyr::filter(if_else(stand.age.bin != 'No Fire', fire_type_2010 == 1, is.na(fire_type_2010))) %>% dplyr::group_by(system.index) %>% summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], Water_Stress = Water_Stress[vi.year == 2015], SPI48 = SPI48[vi.year == 2015], PrET.4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]), stand.age.bin = getmode(stand.age.bin)) %>% dplyr::select(stand.age.bin) %>% unique()
pixel.data$PrET <- pixel.data$ppt - pixel.data$AET
p23 <- ggplot(data = pixel.data %>% dplyr::filter(if_else(stand.age.bin != 'No Fire', fire_type_2010 == 1, is.na(fire_type_2010))) %>% dplyr::group_by(system.index) %>% summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], Water_Stress = Water_Stress[vi.year == 2015], SPI48 = SPI48[vi.year == 2015], PrET.4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]), stand.age.bin = find_mode(stand.age.bin))) +
geom_point(mapping = aes(x = PrET.4yr, y = dTree, color = stand.age.bin), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = PrET.4yr, y = dTree, color = stand.age.bin , linetype = stand.age.bin)) +
stat_cor(mapping = aes(x = PrET.4yr, y = dTree, color = stand.age.bin) ) +
theme_bw()
p23
ggsave(filename = 'Fig50_PrET4yr_stand_age_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
p27 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & fire_type_2010 ==1 & stand.age >= 0) %>% dplyr::group_by(system.index) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017)], na.rm = TRUE), stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = tpa_max), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = tpa_max), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = tpa_max)) +
theme_bw() + facet_grid(. ~ lf_evt_2001)
p27
View(pixel.data)
p27 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & fire_type_2010 ==1 & stand.age >= 0) %>% dplyr::group_by(system.index, lf_evt_2001) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017)], na.rm = TRUE), stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = tpa_max), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = tpa_max), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = tpa_max)) +
theme_bw() + facet_grid(. ~ lf_evt_2001)
p27
p27 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & fire_type_2010 ==1 & stand.age >= 0 & lf_evt_2001 %in% c(2027, 2028, 2029, 2030, 2031, 2032)) %>% dplyr::group_by(system.index, lf_evt_2001) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017)], na.rm = TRUE), stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = tpa_max), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = tpa_max), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = tpa_max)) +
theme_bw() + facet_grid(. ~ lf_evt_2001)
p27
p24 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & stand.age >= 0 & fire_type_2010 == 1 & lf_evt_2001 %in% c(2027, 2028, 2029, 2030, 2031, 2032)) %>% dplyr::group_by(system.index, lf_evt_2001) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = dTree), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = dTree), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = dTree)) +
theme_bw() + facet_grid(. ~ lf_evt_2001)
p24
ggsave(filename = 'Fig51_dTree_stand_age_wildfire_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
p27 <- ggplot(data = pixel.data %>% dplyr::filter(!is.na(stand.age) & fire_type_2010 ==1 & stand.age >= 0 & lf_evt_2001 %in% c(2027, 2028, 2029, 2030, 2031, 2032)) %>% dplyr::group_by(system.index, lf_evt_2001) %>%
summarize(dTree = Tree_Cover[vi.year == 2016] - Tree_Cover[vi.year == 2012], tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017)], na.rm = TRUE), stand.age = stand.age[vi.year == 2010], SPI48 = SPI48[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = tpa_max), size = 1) +
geom_smooth(method = 'lm', mapping = aes(x = stand.age, y = tpa_max), linetype = 'dotdash', size = 2) +
stat_cor(mapping = aes(x = stand.age, y = tpa_max)) +
theme_bw() + facet_grid(. ~ lf_evt_2001)
p27
ggsave(filename = 'Fig54_tpa_max_stand_age_wildfire_0pt5pct_4groups.png', height=16, width= 18, units = 'cm', dpi=900)
