legend.position = c(0.15, 0.55),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.direction = "vertical") +
guides(fill = guide_colorbar(barwidth = 1, barheight = 3,
title.position = "top",
title.hjust = 0.5,
ticks.colour = "black"))
p2
ggsave(filename = 'Fig6a_frap_rx_water_stress_dTree_300m.png', height=16, width= 16, units = 'cm', dpi=900)
pixel.data <- pixel.data %>% mutate(fire.year.bin = case_when(
treatment == 'Control' | fire.year < 1980 ~ 'Control',
fire.year >= 1980 & fire.year <= 2010 ~ 'Disturb',
fire.year >= 2011 & fire.year <= 2018 ~ '2011-2018',
fire.year >= 2019 ~ '2019-2020'))#'0-4'))
pixel.data <- pixel.data %>% mutate(fire.type.bin = case_when(
fire_type_2010 == 1 ~ 'Wildfire',
fire_type_2010 == 2 ~ 'Rxfire'
))
summary(pixel.data)
pixel.data$fire.year.bin = with(pixel.data, factor(fire.year.bin, levels = c('2019-2020', '2011-2018', 'Disturb',  'Control')))#
#Recode the veg type data
pixel.data$veg_name <- recode(.x=pixel.data$lf_evt_2001, .default = NA_character_, '2015' = 'Redwood', '2019' = 'Pinyon Juniper', '2020' = 'Bristlecone Pine', '2027' = 'Mixed Conifer', '2028' = 'White Fir', '2031' = 'Jeffrey Pine',
'2032' = 'Red Fir', '2033' = 'Subalpine', '2034' = 'Knobcone Pine', '2043' = 'Mixed Conifer', '2044' = 'Subalpine', '2045' = 'Mixed Conifer',
'2053' = 'Ponderosa Pine', '2058' = 'Lodgepole Pine', '2061' = 'Mixed Conifer', '2112' = 'Blue Oak Woodland', '2172' = 'White Fir', '2173' = 'Lodgepole Pine', '2201' = 'Oregon White Oak', '2230' = 'Blue Oak - Digger Pine')
#Filter the data into subsets for modeling
pixel.filter <- pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & Tree_Cover > 0 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
dplyr::group_by(system.index) %>%
summarize(dTree = mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
ADS = max(tpa_max[vi.year %in% c(2015, 2016, 2017)]),
dNDMI = mean(NDMI[vi.year %in% c(2016, 2017)]) - mean(NDMI[vi.year %in% c(2009, 2010, 2011)]),
fire.year.bin = fire.year.bin[vi.year == 2010],
treatment = treatment[vi.year == 2010],
fire.type.bin = fire.type.bin[vi.year == 2010])
# pixel.filter %>% summary()
wild.control <- pixel.filter %>% filter(fire.year.bin == 'Control' & fire.type.bin == "Wildfire")
wild.disturb <- pixel.filter %>% filter(fire.year.bin == 'Disturb' & fire.type.bin == "Wildfire")
rx.control <- pixel.filter %>% filter(fire.year.bin == 'Control' & fire.type.bin == "Rxfire")
rx.disturb <- pixel.filter %>% filter(fire.year.bin == 'Disturb' & fire.type.bin == "Rxfire")
#Models for Wild Fire
wild.control.lm <- lm(data = wild.control, dTree ~ Water_Stress)
wild.disturb.lm <- lm(data = wild.disturb, dTree ~ Water_Stress)
#Models for Rx Fire
rx.control.lm <- lm(data = rx.control, dTree~ Water_Stress)
rx.disturb.lm <- lm(data = rx.disturb, dTree ~ Water_Stress)
#Calculate the sgemented models
wild.control.seg <- segmented(wild.control.lm)
wild.disturb.seg <- segmented(wild.disturb.lm)
rx.control.seg <- segmented(rx.control.lm)
rx.disturb.seg <- segmented(rx.disturb.lm)
#Add predicted dNDMI values
wild.control$dTree.predict = predict(wild.control.seg)
wild.disturb$dTree.predict = predict(wild.disturb.seg)
rx.control$dTree.predict = predict(rx.control.seg)
rx.disturb$dTree.predict = predict(rx.disturb.seg)
#Add the segmented fits and Standard Errors
#Fits
wild.control$dTree.fit = broken.line(wild.control.seg)$fit
wild.disturb$dTree.fit = broken.line(wild.disturb.seg )$fit
rx.control$dTree.fit = broken.line(rx.control.seg)$fit
rx.disturb$dTree.fit = broken.line(rx.disturb.seg)$fit
#SE fit
wild.control$dTree.se.fit = broken.line(wild.control.seg)$se.fit
wild.disturb$dTree.se.fit = broken.line(wild.disturb.seg)$se.fit
rx.control$dTree.se.fit = broken.line(rx.control.seg)$se.fit
rx.disturb$dTree.se.fit = broken.line(rx.disturb.seg)$se.fit
#Recombine the data frames with the model fitted dNDMI as a column
all.models <- rbind(wild.control, wild.disturb, rx.control, rx.disturb)
#R-Squared values for the four models
r2.a  <- format(summary(wild.control.seg)$r.squared, digits = 2) #I could switch this back to segmented
r2.b <- format(summary(wild.disturb.seg)$r.squared, digits = 2)
r2.c <- format(summary(rx.control.seg)$r.squared, digits = 2)
r2.d <- format(summary(rx.disturb.seg)$r.squared, digits = 2) #I could switch this back to segmented
#Create a data.frame of R.squared values
r2.text <- data.frame(
label = c(as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 =r2.a)))),
as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 = r2.b)))),
as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 = r2.c)))),
as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 = r2.d))))
),
fire.year.bin = c('Control', 'Fire', 'Control', 'Fire'),
fire.type.bin = c('Wildfire', 'Wildfire', 'Rxfire', 'Rxfire'),
x = c(3500, 3500, 3500, 3500),
y = c(-20, -20, -20, -20)
)
# letter.text <- data.frame(label = c("a)", "b)", "c)", "d)"),
#                           sequence   = c('Both Droughts', 'Both Droughts', '2nd Drought Only', '2nd Drought Only'),
#                           drought = c('1999-2002', '2012-2015', '1999-2002',  '2012-2015'),
#                           y     = c(-0.3, -0.3, -0.3, -0.3),
#                           x     = c(-2400, -2400, -2400, -2400)
# )
#Create the figure
p1 <- ggplot(data = all.models) +
#Create the density layer
geom_bin2d(binwidth = c(200, 1), mapping = aes(x = Water_Stress, y = dTree, group = ..count..)) +
#Piecewise linear regression fit line
geom_line(mapping = aes(x=Water_Stress, y=dTree.fit), size=2, color = 'black', linetype = 'dotdash') +
#Piecewise fit uncertainty
geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit), alpha = 0.4) +
scale_fill_gradient2(limits = c(0,800), breaks = c(0,200, 400, 600), midpoint = 400, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
facet_grid(fire.type.bin ~ fire.year.bin) +
# scale_alpha(range = c(1, 1), limits = c(50, 1000), na.value = 0.4) +
# stat_cor( mapping = aes(x = Water_Stress, y = dTree), color = 'black') + facet_grid(fire.type.bin ~ treatment) +
labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab(expression('Die-off (trees ha'^-1*')'))
p1
p2 <- p1 + theme(
legend.background = element_rect(colour = NA, fill = NA), # This removes the white square behind the legend
legend.justification = c(1, 0),
legend.position = c(0.15, 0.55),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.direction = "vertical") +
guides(fill = guide_colorbar(barwidth = 1, barheight = 3,
title.position = "top",
title.hjust = 0.5,
ticks.colour = "black"))
p2
ggsave(filename = 'Fig6a_frap_rx_water_stress_dTree_300m.png', height=16, width= 16, units = 'cm', dpi=900)
r2.text <- data.frame(
label = c(as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 =r2.a)))),
as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 = r2.b)))),
as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 = r2.c)))),
as.character(as.expression(substitute(italic(R)^2~"="~r2, list(r2 = r2.d))))
),
fire.year.bin = c('Control', 'Disturb', 'Control', 'Disturb'),
fire.type.bin = c('Wildfire', 'Wildfire', 'Rxfire', 'Rxfire'),
x = c(3500, 3500, 3500, 3500),
y = c(-20, -20, -20, -20)
)
# letter.text <- data.frame(label = c("a)", "b)", "c)", "d)"),
#                           sequence   = c('Both Droughts', 'Both Droughts', '2nd Drought Only', '2nd Drought Only'),
#                           drought = c('1999-2002', '2012-2015', '1999-2002',  '2012-2015'),
#                           y     = c(-0.3, -0.3, -0.3, -0.3),
#                           x     = c(-2400, -2400, -2400, -2400)
# )
#Create the figure
p1 <- ggplot(data = all.models) +
#Create the density layer
geom_bin2d(binwidth = c(200, 1), mapping = aes(x = Water_Stress, y = dTree, group = ..count..)) +
#Piecewise linear regression fit line
geom_line(mapping = aes(x=Water_Stress, y=dTree.fit), size=2, color = 'black', linetype = 'dotdash') +
#Piecewise fit uncertainty
geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit), alpha = 0.4) +
scale_fill_gradient2(limits = c(0,800), breaks = c(0,200, 400, 600), midpoint = 400, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent') +
facet_grid(fire.type.bin ~ fire.year.bin) +
# scale_alpha(range = c(1, 1), limits = c(50, 1000), na.value = 0.4) +
# stat_cor( mapping = aes(x = Water_Stress, y = dTree), color = 'black') + facet_grid(fire.type.bin ~ treatment) +
labs(fill = "Grid Cells") +
#Add the R^2 values
geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
xlab(expression('Four-year Pr-ET (mm 4yr'^-1*')')) + ylab(expression('Die-off (trees ha'^-1*')'))
p1
p2 <- p1 + theme(
legend.background = element_rect(colour = NA, fill = NA), # This removes the white square behind the legend
legend.justification = c(1, 0),
legend.position = c(0.15, 0.55),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.direction = "vertical") +
guides(fill = guide_colorbar(barwidth = 1, barheight = 3,
title.position = "top",
title.hjust = 0.5,
ticks.colour = "black"))
p2
ggsave(filename = 'Fig6a_frap_rx_water_stress_dTree_300m.png', height=16, width= 16, units = 'cm', dpi=900)
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
#RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015]),
stand.age = stand.age[vi.year == 2015]) +
geom_point(mapping = aes(x = stand.age, y = dTree, color = fire.year.bin)) + facet_grid(.~ fire.type.bin)
p22
pixel.data %>% summary()
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
#RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015])) +
geom_point(mapping = aes(x = stand.age, y = dTree, color = fire.year.bin)) + facet_grid(.~ fire.type.bin)
p22
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
#RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = dTree)) +
geom_point(mapping = aes(color = fire.year.bin)) + facet_grid(.~ fire.type.bin) +
geom_smooth(mapping = aes(color = fire.year.bin))
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
#RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])) / mean(Tree_Cover[vi.year %in% c(2013, 2014)]),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = dTree)) +
geom_point(mapping = aes(color = fire.year.bin)) + facet_grid(.~ fire.type.bin) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm')
p22
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
geom_point(mapping = aes(color = fire.year.bin)) + facet_grid(.~ fire.type.bin) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm')
p22
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ fire.type.bin) + theme_bw() +
geom_point(mapping = aes(color = fire.year.bin)) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm')
p22
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ fire.type.bin) + theme_bw() +
geom_point(mapping = aes(color = fire.year.bin)) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm') +
xlab('Years Since Fire') + ylab(expression('Die-off (trees '^-1*')'))
p22
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ fire.type.bin) + theme_bw() +
geom_point(mapping = aes(color = fire.year.bin)) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm') +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ fire.type.bin) + theme_bw() +
geom_point(mapping = aes(color = fire.year.bin)) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm') +
stat_cor(mapping = aes(color = fire.year.bin)) +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
#Save the data
ggsave(filename = 'Fig7a_frap_rx_stand_age_dieoff.png', height=12, width= 16, units = 'cm', dpi=900)
p22 <- ggplot(data = pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, fire.year.bin, fire.type.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ fire.type.bin) + theme_bw() +
geom_point(mapping = aes(color = fire.year.bin), size = 1) +
geom_smooth(mapping = aes(color = fire.year.bin), method = 'lm') +
stat_cor(mapping = aes(color = fire.year.bin)) +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
#Save the data
ggsave(filename = 'Fig7a_frap_rx_stand_age_dieoff.png', height=12, width= 24, units = 'cm', dpi=900)
p22 <- ggplot(data = sev.pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, treatment, fire.sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ fire.sev.bin) + theme_bw() +
geom_point(mapping = aes(color = treatment), size = 1) +
geom_smooth(mapping = aes(color = treatment), method = 'lm') +
stat_cor(mapping = aes(color = treatment)) +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
sev.pixel.data %>% summary()
p22 <- ggplot(data = sev.pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_grid(.~ sev.bin) + theme_bw() +
geom_point(mapping = aes(color = treatment), size = 1) +
geom_smooth(mapping = aes(color = treatment), method = 'lm') +
stat_cor(mapping = aes(color = treatment)) +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
#Save the data
ggsave(filename = 'Fig7c_sev_stand_age_dieoff.png', height=12, width= 36, units = 'cm', dpi=900)
p22 <- ggplot(data = sev.pixel.data %>% filter(fire.year <= 2010 & fire.year >= 1921 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
dplyr::group_by(system.index, treatment, sev.bin) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2013,2014)])),
tpa_max = max(tpa_max[vi.year %in% c(2015, 2016, 2017)], na.rm = TRUE),
Water_Stress = Water_Stress[vi.year == 2015], stand.age = stand.age[vi.year == 2015]),
mapping = aes(x = stand.age, y = tpa_max)) +
facet_wrap(.~ sev.bin) + theme_bw() +
geom_point(mapping = aes(color = treatment), size = 1) +
geom_smooth(mapping = aes(color = treatment), method = 'lm') +
stat_cor(mapping = aes(color = treatment)) +
xlab('Years Since Fire') + ylab(expression('Die-off (trees ha'^-1*')'))
p22
#Save the data
ggsave(filename = 'Fig7c_sev_stand_age_dieoff.png', height=16, width= 16, units = 'cm', dpi=900)
#Save the data
ggsave(filename = 'Fig7c_sev_stand_age_dieoff.png', height=24, width= 24, units = 'cm', dpi=900)
p11 <- ggplot() +
#Data Summary
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015]),
mapping = aes(x = sev.bin, y = dTree, fill = treatment),
fun = mean, geom = "bar", position = 'dodge', alpha = 0.7) +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015]),
mapping = aes(x = sev.bin, y = dTree, color = treatment),
fun.data = mean_se, geom = "errorbar", size = 1, position = 'dodge') +
theme_bw() +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.8, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
xlab('Stand Age (10-year Bins)') + ylab('Die-off (dTree %)')
p11
#RdTree Plot
p12 <- ggplot() +
#Data Summary
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])),
RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]), Water_Stress = Water_Stress[vi.year == 2015]),
mapping = aes(x = sev.bin, y = RdTree * 100, fill = treatment),
fun = mean, geom = "bar", position = 'dodge', alpha = 0.7) +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]), Water_Stress = Water_Stress[vi.year == 2015]),
mapping = aes(x = sev.bin, y = RdTree * 100, color = treatment),
fun.data = mean_se, geom = "errorbar", size = 1, position = 'dodge') +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
xlab('Stand Age (10-year Bins)') + ylab('Relative dTree (%)')
p12
#ADS die-off
p13 <- ggplot() +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017, 2017, 2018, 2019)], na.rm = TRUE), SPI48 = SPI48[vi.year == 2015]),
mapping = aes(x = sev.bin, y = tpa_max, fill = treatment),
fun = mean, geom = "bar", position = 'dodge', alpha = 0.7) +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017, 2017, 2018, 2019)], na.rm = TRUE), SPI48 = SPI48[vi.year == 2015]),
mapping = aes(x = sev.bin, y = tpa_max, color = treatment),
fun.data = mean_se, geom = "errorbar", size = 1, position = 'dodge') +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab('Mortality (trees/ha)')
p13
# ggsave(filename = 'Fig10_ADS_mortality_stand_age_wildfire_10pt_300m.png', height=16, width= 18, units = 'cm', dpi=900)
#Pre-Die-off Tree Cover
p14 <- ggplot() +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(sev.bin = sev.bin[vi.year == 2010], Tree_Cover = mean(Tree_Cover[vi.year %in% c(2014, 2015)])),
mapping = aes(x = sev.bin, y = Tree_Cover, fill = treatment),
fun = mean, geom = "bar", position = 'dodge', alpha = 0.7) +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(sev.bin = sev.bin[vi.year == 2010], Tree_Cover = mean(Tree_Cover[vi.year %in% c(2014, 2015)])),
mapping = aes(x = sev.bin, y = Tree_Cover, color = treatment),
fun.data = mean_se, geom = "errorbar", size = 1, position = 'dodge') +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylab('Tree Cover (%)')
p14
#Water Stress
p15 <- ggplot() +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017, 2017, 2018, 2019)], na.rm = TRUE), sev.bin = sev.bin[vi.year == 2010],
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)])),
mapping = aes(x = sev.bin, y = Water_Stress, fill = treatment),
fun = mean, geom = "bar", position = 'dodge', alpha = 0.7) +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(tpa_max = max(tpa_max[vi.year %in% c(2012, 2013, 2014, 2015, 2016, 2017, 2017, 2018, 2019)], na.rm = TRUE), sev.bin = sev.bin[vi.year == 2010],
Water_Stress = sum(PrET[vi.year %in% c(2012,2013,2014,2015)])),
mapping = aes(x = sev.bin, y = Water_Stress, color = treatment),
fun.data = mean_se, geom = "errorbar", size = 1, position = 'dodge') +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
xlab('Fire Severity') + ylab(expression('Four-year Pr-ET (mm 4yr'^-1*')'))
p15
#Combine the Panels
f5 <- ggarrange(p11, p12, p13, p14, p15,  ncol = 1, nrow = 5, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)', 'e)'))
f5
ggsave(filename = 'Fig5c_sev_fire_bar_chart_comparison.png', height=24, width = 18, units = 'cm', dpi=900)
# summary(pixel.data)
p11 <- ggplot() +
#Data Summary
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015]),
mapping = aes(x = sev.bin, y = dTree, fill = treatment),
fun = mean, geom = "bar", position = 'dodge', alpha = 0.7) +
stat_summary(data = sev.pixel.data %>%
filter(Tree_Cover > 0 & fire.year <= 2010 & !is.na(sev.bin) & sev.bin != 'Unchanged' & (fire_year_2019 <=2010 | is.na(fire_year_2019))) %>% # &
# filter(elevation <= 3000) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower & #elevation >= elev.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, sev.bin, treatment) %>%
summarize(dTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])), RdTree = (mean(Tree_Cover[vi.year %in% c(2018, 2019)]) - mean(Tree_Cover[vi.year %in% c(2014,2015)])) / mean(Tree_Cover[vi.year %in% c(2014, 2015)]),
Water_Stress = Water_Stress[vi.year == 2015]),
mapping = aes(x = sev.bin, y = dTree, color = treatment),
fun.data = mean_se, geom = "errorbar", size = 1, position = 'dodge') +
theme_bw() +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.9, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
xlab('Stand Age (10-year Bins)') + ylab('Die-off (dTree %)')
p11
f5 <- ggarrange(p11, p12, p13, p14, p15,  ncol = 1, nrow = 5, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)', 'e)'))
f5
ggsave(filename = 'Fig5c_sev_fire_bar_chart_comparison.png', height=24, width = 18, units = 'cm', dpi=900)
