mapping = aes(y = latitude, fill = treatment), position = position_dodge()) +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.15, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_wrap(. ~ fire.year.bin) +
xlab('Count') + ylab('Latitude')
p23
f6 <- ggarrange(p20, p21, p22, p23, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f6
p20 <- ggplot() +
geom_histogram(data = pixel.data %>% dplyr::filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, treatment) %>%
summarize(elevation = elevation[vi.year == 2010] , clm_precip = clm_precip_sum[vi.year == 2010], fire.year.bin = fire.year.bin[vi.year == 2010], clm_temp = clm_temp_mean[vi.year == 2015]),
mapping = aes(y = elevation, fill = treatment), position = position_dodge()) +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.15, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_wrap(. ~ fire.year.bin) +
xlab('Fire Years') + ylab('Elevation (m)')
p20
p21 <- ggplot() +
geom_histogram(data = pixel.data %>% dplyr::filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, treatment) %>%
summarize(elevation = elevation[vi.year == 2010] , clm_precip = clm_precip_sum[vi.year == 2010], fire.year.bin = fire.year.bin[vi.year == 2010], clm_temp = clm_temp_mean[vi.year == 2015]),
mapping = aes(y = clm_precip, fill = treatment), position = position_dodge()) +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.15, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_wrap(. ~ fire.year.bin) +
xlab('Fire Years') + ylab('Precip Climatology (mm/yr)')
p21
p22 <- ggplot() +
geom_histogram(data = pixel.data %>% dplyr::filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, treatment) %>%
summarize(elevation = elevation[vi.year == 2010] , clm_precip = clm_precip_sum[vi.year == 2010], fire.year.bin = fire.year.bin[vi.year == 2010], clm_temp = clm_temp_mean[vi.year == 2015]),
mapping = aes(y = clm_temp, fill = treatment), position = position_dodge()) +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.15, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_wrap(. ~ fire.year.bin) +
xlab('Fire Years') + ylab('Temp Climatology (C)')
p22
p23 <- ggplot() +
geom_histogram(data = pixel.data %>%
dplyr::filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, treatment) %>%
summarize(latitude = latitude[vi.year == 2010] , clm_precip = clm_precip_sum_mean[vi.year == 2010], fire.year.bin = fire.year.bin[vi.year == 2010], clm_temp = clm_temp_mean[vi.year == 2015]),
mapping = aes(y = latitude, fill = treatment), position = position_dodge()) +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.15, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_wrap(. ~ fire.year.bin) +
xlab('Count') + ylab('Latitude')
p23
f6 <- ggarrange(p20, p21, p22, p23, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f6
p23 <- ggplot() +
geom_histogram(data = pixel.data %>%
dplyr::filter((fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% #&
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
dplyr::group_by(system.index, treatment) %>%
summarize(latitude = latitude[vi.year == 2010] , clm_precip = clm_precip_sum[vi.year == 2010], fire.year.bin = fire.year.bin[vi.year == 2010], clm_temp = clm_temp_mean[vi.year == 2015]),
mapping = aes(y = latitude, fill = treatment), position = position_dodge()) +
theme_bw() +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
theme(axis.text.y = element_text(size = 8), legend.position = c(0.15, 0.2), axis.title.y = element_text(size = 10),
axis.title.x = element_text(size = 10), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) + facet_wrap(. ~ fire.year.bin) +
xlab('Count') + ylab('Latitude')
p23
f6 <- ggarrange(p20, p21, p22, p23, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f6
ggsave(filename = 'Fig83_fire_sample_characteristics_300m.png', height=28, width = 18, units = 'cm', dpi=900)
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()) %>%
# ungroup() %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.diff = tpa_max.mean[treatment == 'Control'] - tpa_max.mean[treatment == 'Disturb']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.diff, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()) %>%
# ungroup() %>%
group_by(date, stratlayer) %>%
summarize(tpa_max.diff = tpa_max.mean[treatment == 'Control'] - tpa_max.mean[treatment == 'Disturb']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.diff, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
summary(pixel.data)
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, stratlayer, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n(), fire.year.bin = fire.year.bin[vi.year == 2010]) %>%
# ungroup() %>%
group_by(date, stratlayer) %>%
summarize(tpa_max.diff = tpa_max.mean[treatment == 'Control'] - tpa_max.mean[treatment == 'Disturb'], fire.year.bin = fire.year.bin[vi.year == 2010 & treatment == 'Disturb']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.diff, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, stratlayer, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n(), fire.year.bin = fire.year.bin[vi.year == 2010]) %>%
# ungroup() %>%
group_by(date, stratlayer) %>%
summarize(tpa_max.diff = tpa_max.mean[treatment == 'Control'] - tpa_max.mean[treatment == 'Disturb'], fire.year.bin = fire.year.bin[treatment == 'Disturb']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.diff, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, stratlayer, treatment) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n(), fire.year.bin = fire.year.bin[vi.year == 2010]) %>%
# ungroup() %>%
group_by(date) %>%
summarize(tpa_max.1980 = tpa_max.mean[fire.year.bin == '1981-2010'] - tpa_max.mean[fire.year.bin == 'No Fire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.diff, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n(), fire.year.bin = fire.year.bin[vi.year == 2010]) %>%
# ungroup() %>%
group_by(date) %>%
summarize(tpa_max.1980 = tpa_max.mean[fire.year.bin == '1981-2010'] - tpa_max.mean[fire.year.bin == 'No Fire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.diff, color = fire.year.bin, linetype = fire.year.bin),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n(), fire.year.bin = fire.year.bin[vi.year == 2010]) %>%
# ungroup() %>%
group_by(date) %>%
summarize(tpa_max.1980 = tpa_max.mean[fire.year.bin == '1981-2010'] - tpa_max.mean[fire.year.bin == 'No Fire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.1980),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()) %>%
# ungroup() %>%
group_by(date) %>%
summarize(tpa_max.1980 = tpa_max.mean[fire.year.bin == '1981-2010'] - tpa_max.mean[fire.year.bin == 'No Fire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.1980),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
p24 <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.data %>%
dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) | (is.na(fire.year))) %>% # &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, fire.year.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()) %>%
# ungroup() %>%
group_by(date) %>%
summarize(tpa_max.1980 = tpa_max.mean[fire.year.bin == '1921-1950'] - tpa_max.mean[fire.year.bin == 'No Fire']), #%>%
# group_by(date, fire.year.bin) %>%
# summarize(tpa_max.diff.mean = mean(tpa_max.diff)),
# filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
mapping = aes(x = date, y = tpa_max.1980),
size = 1
) +
#Dead Trees 95% CI
# geom_ribbon(data = pixel.data %>%
#               dplyr::filter((!is.na(tpa_max) & fire.year <= 2010 & fire.year >= 1921 & stand.age > 2) &
#                               if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
#               group_by(date, fire.year.bin, treatment) %>%
#               summarize(tpa_max.mean = mean(tpa_max),
#                         tpa_max.sd = sd(tpa_max), tpa_max.n = n()) %>%
#             group_by(date, fire.year.bin) %>%
#             summarize(tpa_max.diff = tpa_max.mean[treatment == 'Buffer'] - tpa_max.mean[treatment == 'Wildfire'],
#                       tpa_max.se.diff = sqrt((tpa_max.sd[treatment == 'Wildfire']/sqrt(tpa_max.n[treatment == 'Wildfire']))^2 + (tpa_max.sd[treatment == 'Buffer']/sqrt(tpa_max.n[treatment == 'Buffer']))^2), count = n()), # %>%
#             # group_by(date, fire.year.bin) %>%
#             # summarize(tpa_max.diff.mean = mean(tpa_max.diff), tpa_max.se.diff.mean = sqrt(sum(tpa_max.se.diff^2))/count),
#             # filter(if_else(fire.year.bin == '1985-2010', tpa_max.n >= 6000, tpa_max.n >= 0)),
#             mapping = aes(ymin=tpa_max.diff - 1.96*(tpa_max.se.diff),
#                           ymax=tpa_max.diff + 1.96*(tpa_max.se.diff),
#                           x = date, fill = fire.year.bin), alpha = 0.3) +
#Do the Formating
scale_color_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
scale_linetype(name = 'Fire Year') +
scale_fill_brewer(type = 'div', palette = 'Spectral', name = 'Fire Year') +
guides(color = guide_legend(), linetype = guide_legend(), fill = 'none') +
theme_dark() +
theme(axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.1, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('1985-08-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression(atop('ADS Die-off (Buffer - Wildfire)', '(trees ha'^-1*')'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p24
