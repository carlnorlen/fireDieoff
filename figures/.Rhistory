#Sample the low severity control pixels
lo.disturb <- sev.pixel.data %>%
filter(treatment == 'Disturb' & sev.bin == 'Low' & stratlayer %in% (lo.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (lo.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Sample the moderate severity control pixels
mid.disturb <- sev.pixel.data %>%
filter(treatment == 'Disturb' & sev.bin == 'Mid' & stratlayer %in% (mid.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (mid.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp) #unnest the data
#High Severity Samples
hi.disturb <- sev.pixel.data %>%
filter(treatment == 'Disturb' & sev.bin == 'High' & stratlayer %in% (hi.strat %>% pull(stratlayer))) %>% #Get just the unchanged control stratification layers
group_by(stratlayer) %>% #Group by Stratification layer
nest() %>% #Nest the data
ungroup() %>% #Un group the data
mutate(n = (hi.strat %>% pull(n))) %>% #Add the sample sizes for the stratlayers in the disturbed data
mutate(samp = map2(data, n, sample_n)) %>% #Do the random sample, sample_n is depricated for slice_sample
dplyr::select(-data) %>% #Get rid of the data column
unnest(samp) #unnest the data
#Combine the sampled data back together
sev.pixel.sample <- rbind(un.disturb, lo.disturb, mid.disturb, hi.disturb, un.sample, lo.sample, mid.sample, hi.sample)
sev.pixel.sample <- sev.pixel.sample %>%
pivot_longer(cols = X10_AET:X9_tpa_max, names_to = c('year', '.value'), names_pattern = "X(\\d{1}|\\d{2})_(.*)", names_repair = "unique")
#Convert the year outputs to actual years
sev.pixel.sample$year <- as.numeric(sev.pixel.sample$year) + 1984
#Convert missing TPA data to NAs
sev.pixel.sample[sev.pixel.sample$tpa_max < 0,]$tpa_max <- NA
#Convert to trees per hectare
sev.pixel.sample$tpa_max <- sev.pixel.sample$tpa_max * 2.47105
#Make the dates into date time format for R
sev.pixel.sample$date <- as.Date(as.character(sev.pixel.sample$year), format = '%Y')
#Add VI Year
sev.pixel.sample$vi.year <- sev.pixel.sample$year
#Caluclate Stand AGe
sev.pixel.sample$stand.age <- as.numeric(sev.pixel.sample$year) - as.numeric(sev.pixel.sample$fire.year)
#Update Cover data to 100% scale
sev.pixel.sample$Tree_Cover.2 <- sev.pixel.sample$Tree_Cover / 100
sev.pixel.sample$Shrub_Cover.2 <- sev.pixel.sample$Shrub_Cover / 100
sev.pixel.sample$Herb_Cover.2 <- sev.pixel.sample$Herb_Cover / 100
sev.pixel.sample$Bare_Cover.2 <- sev.pixel.sample$Bare_Cover / 100
#Add Montana Veg Cover
sev.pixel.sample$Tree_Cover <- sev.pixel.sample$TRE
sev.pixel.sample$Shrub_Cover <- sev.pixel.sample$SHR
sev.pixel.sample$Herb_Cover <- sev.pixel.sample$AFG + sev.pixel.sample$PFG
sev.pixel.sample$Bare_Cover <- sev.pixel.sample$BGR
#Convert the SPI48 scale back to decimal
sev.pixel.sample$SPI48 <- sev.pixel.sample$SPI48 / 100
#Try to fix soil moisture by dividing by 10
sev.pixel.sample$Soil_Moisture <- sev.pixel.sample$Soil_Moisture / 10
#Rename ppt and Water Stress
sev.pixel.sample$Water_Stress <- sev.pixel.sample$Water_Stress
sev.pixel.sample$ppt <- sev.pixel.sample$ppt
sev.pixel.sample$AET <- sev.pixel.sample$AET
sev.pixel.sample$GPP <- sev.pixel.sample$GPP
sev.pixel.sample$elevation <- sev.pixel.sample$elevation
sev.pixel.sample$PrET <- sev.pixel.sample$ppt - sev.pixel.sample$AET
#Create Fire Year Bins
#Separate the data
sev.pixel.sample <- sev.pixel.sample %>% mutate(fire.year.bin = case_when(
# fire.year < 1980 ~ '< 1980',
fire.year >= 1985 & fire.year <= 1990 ~ '1985-1990',
fire.year >= 1991 & fire.year <= 1995 ~ '1991-1995',
fire.year >= 1996 & fire.year <= 2000 ~ '1996-2000',
fire.year >= 2001 & fire.year <= 2005 ~ '2001-2005',
fire.year >= 2006 & fire.year <= 2010 ~ '2006-2010'))
#Fire year bins for Fire Severity Data
sev.pixel.sample$fire.year.bin = with(sev.pixel.sample, factor(fire.year.bin, levels = c('2006-2010', '2001-2005','1996-2000', '1991-1995','1985-1990')))
#Subtract the pre-fire values for AET, tree and shrub cover
sev.pixel.sample <- sev.pixel.sample %>%
group_by(system.index, sev.bin) %>%
mutate(dAET = AET - mean(AET[stand.age %in% c(-1, -2)]),
dTree_Cover = Tree_Cover - mean(Tree_Cover[stand.age %in% c(-1, -2)]),
dShrub_Cover = Shrub_Cover - mean(Shrub_Cover[stand.age %in% c(-1, -2)])) %>%
ungroup()
sev.pixel.summary <- sev.pixel.sample %>%
filter(stand.age >= -2 & stand.age <= 20 & vi.year <= 2012 & fire.year > 1986 & fire.year <= 2010 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(stand.age, sev.bin) %>%
reframe(Tree_Cover.mean = mean(Tree_Cover[treatment == 'Disturb']) - mean(Tree_Cover[treatment == 'Control']),
Tree_Cover.mean.control = mean(Tree_Cover[treatment == 'Control']),
Tree_Cover.sd = sd(Tree_Cover[treatment == 'Disturb'])^2 + sd(Tree_Cover[treatment == 'Control'])^2,
Tree_Cover.sd.pct = Tree_Cover.sd / Tree_Cover.mean.control * 100,
Tree_Cover.n = n(),
Shrub_Cover.mean = mean(Shrub_Cover[treatment == 'Disturb']) - mean(Shrub_Cover[treatment == 'Control']),
Shrub_Cover.mean.control = mean(Shrub_Cover[treatment == 'Control']),
# Shrub_Cover.mean.pct = Shrub_Cover.mean / Shrub_Cover.mean.control * 100,
Shrub_Cover.sd = sd(Shrub_Cover[treatment == 'Disturb'])^2 + sd(Shrub_Cover[treatment == 'Control'])^2,
Shrub_Cover.sd.pct = Shrub_Cover.sd / Shrub_Cover.mean.control * 100,
Shrub_Cover.n = n(),
AET.mean = mean(AET[treatment == 'Disturb']) - mean(AET[treatment == 'Control']),
AET.mean.control = mean(AET[treatment == 'Control']),
# AET.mean.pct = AET.mean / AET.mean.control * 100,
AET.sd = sd(dAET[treatment == 'Disturb'])^2 + sd(dAET[treatment == 'Control'])^2,
AET.sd.pct = AET.sd / AET.mean.control * 100,
AET.n = n()) %>%
group_by(sev.bin) %>%
mutate(Tree_Cover.mean = Tree_Cover.mean - mean(Tree_Cover.mean[stand.age %in% c(-1, -2)]),
Shrub_Cover.mean = Shrub_Cover.mean - mean(Shrub_Cover.mean[stand.age %in% c(-1, -2)]),
AET.mean = AET.mean - mean(AET.mean[stand.age %in% c(-1, -2)])) %>%
group_by(stand.age, sev.bin) %>%
mutate(Tree_Cover.mean.pct = Tree_Cover.mean / Tree_Cover.mean.control * 100,
Shrub_Cover.mean.pct = Shrub_Cover.mean / Shrub_Cover.mean.control * 100,
AET.mean.pct = AET.mean / AET.mean.control * 100) %>%
#Add the upper and lower 95% confidence intervals
mutate(tree.ci.95.lower = Tree_Cover.mean - 1.96*(sqrt(Tree_Cover.sd / Tree_Cover.n)),
tree.ci.95.upper = Tree_Cover.mean + 1.96*(sqrt(Tree_Cover.sd / Tree_Cover.n)),
tree.ci.95.lower.pct = Tree_Cover.mean.pct - 1.96*(sqrt(Tree_Cover.sd.pct / Tree_Cover.n)),
tree.ci.95.upper.pct = Tree_Cover.mean.pct + 1.96*(sqrt(Tree_Cover.sd.pct / Tree_Cover.n)),
shrub.ci.95.lower = Shrub_Cover.mean - 1.96*(sqrt(Shrub_Cover.sd / Shrub_Cover.n)),
shrub.ci.95.upper = Shrub_Cover.mean + 1.96*(sqrt(Shrub_Cover.sd / Shrub_Cover.n)),
shrub.ci.95.lower.pct = Shrub_Cover.mean.pct - 1.96*(sqrt(Shrub_Cover.sd.pct / Shrub_Cover.n)),
shrub.ci.95.upper.pct = Shrub_Cover.mean.pct + 1.96*(sqrt(Shrub_Cover.sd.pct / Shrub_Cover.n)),
et.ci.95.lower = AET.mean - 1.96*(sqrt(AET.sd / AET.n)),
et.ci.95.upper = AET.mean + 1.96*(sqrt(AET.sd / AET.n)),
et.ci.95.lower.pct = AET.mean.pct - 1.96*(sqrt(AET.sd.pct / AET.n)),
et.ci.95.upper.pct = AET.mean.pct + 1.96*(sqrt(AET.sd.pct / AET.n)))
#Select the columns I want for the data
sev.results.data <- sev.pixel.summary %>% dplyr::select(sev.bin, stand.age, tree.ci.95.lower, tree.ci.95.upper, shrub.ci.95.lower, shrub.ci.95.upper, et.ci.95.lower, et.ci.95.upper)
sev.results.data.pct <- sev.pixel.summary %>% dplyr::select(sev.bin, stand.age, tree.ci.95.lower.pct, tree.ci.95.upper.pct, shrub.ci.95.lower.pct, shrub.ci.95.upper.pct, et.ci.95.lower.pct, et.ci.95.upper.pct)
sev.results.data
sev.results.data.pct
#Create Figure 3
#Create a unique palette
mypalette <- brewer_pal('seq', "YlOrRd")(5)[2:5]
pixel.ADS.count <- pixel.filter %>%
filter(!is.na(ADS)) %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.count = n()) %>%
ungroup()
pixel.ADS.count <- sev.pixel.filter %>%
filter(!is.na(ADS)) %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.count = n()) %>%
ungroup()
summary(sev.pixel.filter)
sev.pixel.elev.data <- sev.pixel.filter %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.mean = mean(ADS, na.rm = TRUE), count = n(), ADS.sd = sd(ADS, na.rm = TRUE),
dTree.mean = mean(dTree), dTree.sd = sd(dTree), Tree.mean = mean(Tree_Cover), Tree.sd = sd(Tree_Cover),
Shrub.mean = mean(Shrub_Cover), Shrub.sd = sd(Shrub_Cover), PrET_4yr.mean = mean(PrET_4yr), PrET_4yr.sd = sd(PrET_4yr),
ET.mean = mean(ET), ET.sd = sd(ET), elevation.mean = mean(elevation)) %>%
ungroup()
sev.pixel.filter <- sev.pixel.sample %>% filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
reframe(dTree = mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2012,2013)])) / mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
Tree_Cover = mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
ET = mean(AET[vi.year %in% c(2010, 2011)]),
ADS = sum(tpa_max[vi.year %in% c(2015, 2016, 2017, 2018)]),
# Water_Stress = Water_Stress[vi.year == 2015],
PrET_4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
sev.bin = sev.bin[vi.year == 2010],
sev.bin.cat = fire_sev_2010[vi.year == 2010],
stand.age = stand.age[vi.year == 2010],
treatment.cat = treat[vi.year == 2010],
treatment = treatment[vi.year == 2010])
sev.pixel.elev.data <- sev.pixel.filter %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.mean = mean(ADS, na.rm = TRUE), count = n(), ADS.sd = sd(ADS, na.rm = TRUE),
dTree.mean = mean(dTree), dTree.sd = sd(dTree), Tree.mean = mean(Tree_Cover), Tree.sd = sd(Tree_Cover),
Shrub.mean = mean(Shrub_Cover), Shrub.sd = sd(Shrub_Cover), PrET_4yr.mean = mean(PrET_4yr), PrET_4yr.sd = sd(PrET_4yr),
ET.mean = mean(ET), ET.sd = sd(ET), elevation.mean = mean(elevation)) %>%
ungroup()
sev.pixel.filter <- sev.pixel.sample %>% filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
reframe(dTree = mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2012,2013)])) / mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
Tree_Cover = mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
ET = mean(AET[vi.year %in% c(2010, 2011)]),
ADS = sum(tpa_max[vi.year %in% c(2015, 2016, 2017, 2018)]),
# Water_Stress = Water_Stress[vi.year == 2015],
PrET_4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
sev.bin = sev.bin[vi.year == 2010],
sev.bin.cat = fire_sev_2010[vi.year == 2010],
stand.age = stand.age[vi.year == 2010],
treatment.cat = treat[vi.year == 2010],
treatment = treatment[vi.year == 2010],
latitude = first(latitude),
longitude = first(longitude),
elevation = first(elevation))
sev.pixel.elev.data <- sev.pixel.filter %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.mean = mean(ADS, na.rm = TRUE), count = n(), ADS.sd = sd(ADS, na.rm = TRUE),
dTree.mean = mean(dTree), dTree.sd = sd(dTree), Tree.mean = mean(Tree_Cover), Tree.sd = sd(Tree_Cover),
Shrub.mean = mean(Shrub_Cover), Shrub.sd = sd(Shrub_Cover), PrET_4yr.mean = mean(PrET_4yr), PrET_4yr.sd = sd(PrET_4yr),
ET.mean = mean(ET), ET.sd = sd(ET), elevation.mean = mean(elevation)) %>%
ungroup()
sev.pixel.filter <- sev.pixel.sample %>% filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
dplyr::group_by(system.index, treatment, sev.bin) %>%
reframe(dTree = mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
RdTree = (mean(Tree_Cover[vi.year %in% c(2017, 2018)]) - mean(Tree_Cover[vi.year %in% c(2012,2013)])) / mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
Tree_Cover = mean(Tree_Cover[vi.year %in% c(2010, 2011)]),
Shrub_Cover = mean(Shrub_Cover[vi.year %in% c(2010, 2011)]),
ET = mean(AET[vi.year %in% c(2010, 2011)]),
ADS = sum(tpa_max[vi.year %in% c(2015, 2016, 2017, 2018)]),
# Water_Stress = Water_Stress[vi.year == 2015],
PrET_4yr = sum(PrET[vi.year %in% c(2012,2013,2014,2015)]),
sev.bin = sev.bin[vi.year == 2010],
sev.bin.cat = fire_sev_2010[vi.year == 2010],
stand.age = stand.age[vi.year == 2010],
treatment.cat = treat[vi.year == 2010],
treatment = treatment[vi.year == 2010],
latitude = first(latitude),
longitude = first(longitude),
elevation = first(elevation))
sev.pixel.elev.data <- sev.pixel.filter %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.mean = mean(ADS, na.rm = TRUE), count = n(), ADS.sd = sd(ADS, na.rm = TRUE),
dTree.mean = mean(dTree), dTree.sd = sd(dTree), Tree.mean = mean(Tree_Cover), Tree.sd = sd(Tree_Cover),
Shrub.mean = mean(Shrub_Cover), Shrub.sd = sd(Shrub_Cover), PrET_4yr.mean = mean(PrET_4yr), PrET_4yr.sd = sd(PrET_4yr),
ET.mean = mean(ET), ET.sd = sd(ET), elevation.mean = mean(elevation)) %>%
ungroup()
#calculate the number o samples
sev.pixel.ADS.count <- sev.pixel.filter %>%
filter(!is.na(ADS)) %>%
dplyr::mutate(elev.bin = cut(elevation, breaks = seq(0, 4000, by = 500))
) %>%
dplyr::group_by(elev.bin, sev.bin, treatment) %>%
dplyr::summarize(ADS.count = n()) %>%
ungroup()
#Combined pixel elevation data
pixel.elev.merge <- merge(sev.pixel.elev.data, sev.pixel.ADS.count %>% dplyr::select(sev.bin, treatment, elev.bin, ADS.count), by = c("treatment", "sev.bin", "elev.bin"))
p5a <- ggplot(data = sev.pixel.elev.merge) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
scale_y_reverse() +
geom_line(mapping = aes(y = dTree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = dTree.mean, x = elevation.mean, ymax = dTree.mean + 1.96*(dTree.sd / sqrt(count)), ymin = dTree.mean - 1.96*(dTree.sd / sqrt(count)), color = fire.type.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = c(0.9, 0.7)) +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1, guide = 'none') +
scale_linetype(name = 'Treatment') +
xlab(expression('Elevation')) + ylab('Dieback (Tree Cover %)')
#Combined pixel elevation data
sev.pixel.elev.merge <- merge(sev.pixel.elev.data, sev.pixel.ADS.count %>% dplyr::select(sev.bin, treatment, elev.bin, ADS.count), by = c("treatment", "sev.bin", "elev.bin"))
p5a <- ggplot(data = sev.pixel.elev.merge) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
scale_y_reverse() +
geom_line(mapping = aes(y = dTree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = dTree.mean, x = elevation.mean, ymax = dTree.mean + 1.96*(dTree.sd / sqrt(count)), ymin = dTree.mean - 1.96*(dTree.sd / sqrt(count)), color = fire.type.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = c(0.9, 0.7)) +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1, guide = 'none') +
scale_linetype(name = 'Treatment') +
xlab(expression('Elevation')) + ylab('Dieback (Tree Cover %)')
p5a
p5a <- ggplot(data = sev.pixel.elev.merge) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
scale_y_reverse() +
geom_line(mapping = aes(y = dTree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = dTree.mean, x = elevation.mean, ymax = dTree.mean + 1.96*(dTree.sd / sqrt(count)), ymin = dTree.mean - 1.96*(dTree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = c(0.9, 0.7)) +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1, guide = 'none') +
scale_linetype(name = 'Treatment') +
xlab(expression('Elevation')) + ylab('Dieback (Tree Cover %)')
p5a
p5b <- ggplot(data = sev.pixel.elev.merge %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = ADS.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = ADS.mean, x = elevation.mean, ymax = ADS.mean + 1.96*(ADS.sd / sqrt(count)), ymin = ADS.mean - 1.96*(ADS.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab(expression('Dieback (tree ha'^-1*')'))
p5b
p5c <- ggplot(data = pixel.elev.merge %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = Tree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = Tree.mean, x = elevation.mean, ymax = Tree.mean + 1.96*(Tree.sd / sqrt(count)), ymin = Tree.mean - 1.96*(Tree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab('Tree Cover (%)')
p5c
p5d <- ggplot(data = pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = Shrub.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = Shrub.mean, x = elevation.mean, ymax = Shrub.mean + 1.96*(Shrub.sd / sqrt(count)), ymin = Shrub.mean - 1.96*(Shrub.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab('Shrub Cover (%)')
p5d
p5b <- ggplot(data = sev.pixel.elev.merge %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = ADS.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = ADS.mean, x = elevation.mean, ymax = ADS.mean + 1.96*(ADS.sd / sqrt(count)), ymin = ADS.mean - 1.96*(ADS.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab(expression('Dieback (tree ha'^-1*')'))
p5b
p5c <- ggplot(data = sev.pixel.elev.merge %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = Tree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = Tree.mean, x = elevation.mean, ymax = Tree.mean + 1.96*(Tree.sd / sqrt(count)), ymin = Tree.mean - 1.96*(Tree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab('Tree Cover (%)')
p5c
p5d <- ggplot(data = sev.pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = Shrub.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = Shrub.mean, x = elevation.mean, ymax = Shrub.mean + 1.96*(Shrub.sd / sqrt(count)), ymin = Shrub.mean - 1.96*(Shrub.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab('Shrub Cover (%)')
p5d
p5e <- ggplot(data = sev.pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = ET.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = ET.mean, x = elevation.mean, ymax = ET.mean + 1.96*(ET.sd / sqrt(count)), ymin = ET.mean - 1.96*(ET.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab(expression('ET (mm yr'^-1*')'))
p5e
p5f <- ggplot(data = sev.pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = PrET_4yr.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = PrET_4yr.mean, x = elevation.mean, ymax = PrET_4yr.mean + 1.96*(PrET_4yr.sd / sqrt(count)), ymin = PrET_4yr.mean - 1.96*(PrET_4yr.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(legend.position = 'none') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
xlab(expression('Elevation')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5f
f1 <- ggarrange(p5a,p5b,p5c,p5d,p5e,p5f, nrow = 6, ncol = 1, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 0.9, 0.9, 1), align = "v", labels = c('a', 'b', 'c', 'd', 'e', 'f'))
f1
ggsave(filename = 'FigS13_forest_type_comparison_by_elevation_bin.png', height=32, width= 32, units = 'cm', dpi=900)
p5a <- ggplot(data = sev.pixel.elev.merge) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
scale_y_reverse() +
geom_line(mapping = aes(y = dTree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = dTree.mean, x = elevation.mean, ymax = dTree.mean + 1.96*(dTree.sd / sqrt(count)), ymin = dTree.mean - 1.96*(dTree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = c(0.95, 0.7)) +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1, guide = 'none') +
scale_linetype(name = 'Treatment') +
xlab(expression('Elevation')) + ylab('Dieback (Tree Cover %)')
p5a
f1 <- ggarrange(p5a,p5b,p5c,p5d,p5e,p5f, nrow = 6, ncol = 1, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 0.9, 0.9, 1), align = "v", labels = c('a', 'b', 'c', 'd', 'e', 'f'))
f1
ggsave(filename = 'FigS13_forest_type_comparison_by_elevation_bin.png', height=32, width= 32, units = 'cm', dpi=900)
p5a <- ggplot(data = sev.pixel.elev.merge) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
scale_y_reverse() +
geom_line(mapping = aes(y = dTree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = dTree.mean, x = elevation.mean, ymax = dTree.mean + 1.96*(dTree.sd / sqrt(count)), ymin = dTree.mean - 1.96*(dTree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = c(0.95, 0.7)) +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
scale_linetype(name = 'Treatment') +
xlab(expression('Elevation')) + ylab('Dieback (Tree Cover %)')
p5a
p5b <- ggplot(data = sev.pixel.elev.merge %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = ADS.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = ADS.mean, x = elevation.mean, ymax = ADS.mean + 1.96*(ADS.sd / sqrt(count)), ymin = ADS.mean - 1.96*(ADS.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
xlab(expression('Elevation')) + ylab(expression('Dieback (tree ha'^-1*')'))
p5b
p5c <- ggplot(data = sev.pixel.elev.merge %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = Tree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = Tree.mean, x = elevation.mean, ymax = Tree.mean + 1.96*(Tree.sd / sqrt(count)), ymin = Tree.mean - 1.96*(Tree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
xlab(expression('Elevation')) + ylab('Tree Cover (%)')
p5c
p5d <- ggplot(data = sev.pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = Shrub.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = Shrub.mean, x = elevation.mean, ymax = Shrub.mean + 1.96*(Shrub.sd / sqrt(count)), ymin = Shrub.mean - 1.96*(Shrub.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
xlab(expression('Elevation')) + ylab('Shrub Cover (%)')
p5d
p5e <- ggplot(data = sev.pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = ET.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = ET.mean, x = elevation.mean, ymax = ET.mean + 1.96*(ET.sd / sqrt(count)), ymin = ET.mean - 1.96*(ET.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = 'none') +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
xlab(expression('Elevation')) + ylab(expression('ET (mm yr'^-1*')'))
p5e
p5f <- ggplot(data = sev.pixel.elev.data %>% filter(count >= 5)) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
# scale_y_reverse() +
geom_line(mapping = aes(y = PrET_4yr.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = PrET_4yr.mean, x = elevation.mean, ymax = PrET_4yr.mean + 1.96*(PrET_4yr.sd / sqrt(count)), ymin = PrET_4yr.mean - 1.96*(PrET_4yr.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(legend.position = 'none') +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity') +
xlab(expression('Elevation')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5f
f1 <- ggarrange(p5a,p5b,p5c,p5d,p5e,p5f, nrow = 6, ncol = 1, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 0.9, 0.9, 1), align = "v", labels = c('a', 'b', 'c', 'd', 'e', 'f'))
f1
setwd('C://Users/can02/mystuff/fireDieoff/figures')
ggsave(filename = 'FigS13_forest_type_comparison_by_elevation_bin.png', height=32, width= 32, units = 'cm', dpi=900)
p5a <- ggplot(data = sev.pixel.elev.merge) +
#geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
#scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Dieback (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(. ~ sev.bin) +
scale_y_reverse() +
geom_line(mapping = aes(y = dTree.mean, x = elevation.mean, color = sev.bin, linetype = treatment), linewidth = 1) +
geom_errorbar(mapping = aes(y = dTree.mean, x = elevation.mean, ymax = dTree.mean + 1.96*(dTree.sd / sqrt(count)), ymin = dTree.mean - 1.96*(dTree.sd / sqrt(count)), color = sev.bin, linetype = treatment), linewidth = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), legend.position = c(0.95, 0.7)) +
# scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_color_manual(values = mypalette, name = 'Fire Severity', guide = 'none') +
scale_linetype(name = 'Treatment') +
xlab(expression('Elevation')) + ylab('Dieback (Tree Cover %)')
p5a
f1 <- ggarrange(p5a,p5b,p5c,p5d,p5e,p5f, nrow = 6, ncol = 1, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 0.9, 0.9, 1), align = "v", labels = c('a', 'b', 'c', 'd', 'e', 'f'))
f1
setwd('C://Users/can02/mystuff/fireDieoff/figures')
ggsave(filename = 'FigS13_forest_type_comparison_by_elevation_bin.png', height=32, width= 32, units = 'cm', dpi=900)
