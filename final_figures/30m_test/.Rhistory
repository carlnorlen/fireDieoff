# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3 <- ggplot(data = pixel.grid.data %>% filter(count <= 5)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p3 <- ggplot(data = pixel.grid.data %>% filter(count <= 5)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p3 <- ggplot(data = pixel.grid.data %>% filter(count <= 5)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p3 <- ggplot(data = pixel.grid.data %>% filter(count <= 5), mapping = aes(x = PrET.bin, y = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p3 <- ggplot(data = pixel.grid.data %>% filter(count <= 5), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p3 <- ggplot(data = pixel.grid.data %>% filter(count >= 5), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
pixel.grid.data <- pixel.filter %>%
# left_join(y = data %>% dplyr::select(c(latitude, longitude, system.index)), by = join_by(system.index == system.index)) %>%
# dplyr::mutate(socal = as.integer(USFS_zone == 262), sierra = as.integer(USFS_zone == 261)) %>% #Make new columns that have 0,1 for Sierra and socal to calculate proportions later
dplyr::mutate(Tree.bin = cut(Tree_Cover, breaks = seq(0, 105, by = 5)),
PrET.bin = cut(PrET_4yr, breaks = seq(-2600, 4000, by = 200)),
) %>%
dplyr::group_by(Tree.bin, PrET.bin, fire.type.bin, treatment) %>%
dplyr::mutate(count = n()) %>%
dplyr::mutate(ADS.mean = mean(ADS)) %>%
dplyr::mutate(dTree.mean = mean(dTree)) %>%
dplyr::mutate(dNDMI.mean = mean(dNDMI)) %>%
# dplyr::mutate(ADS_2017.mean = mean(ADS_2017)) %>%
# dplyr::mutate(ADS.predict.overall.mean = mean(ADS.predict * dead_ADS.num)) %>%
# dplyr::mutate(ADS.predict.mean = mean(ADS.predict)) %>%
# dplyr::mutate(dead_ADS.predict.mean = mean(dead_ADS.predict * 100)) %>%
# dplyr::mutate(ADS.mag.2012.mean = mean(ADS.mag.2012)) %>%
# dplyr::mutate(dead_ADS_2012.predict.mean = mean((dead_ADS_2012.predict) * 100)) %>%
# dplyr::mutate(ADS.mag.change.mean = mean(ADS.mag.2019 - ADS.mag.2012)) %>%
# dplyr::mutate(dead_ADS.predict.change.mean = mean((dead_ADS_2019.predict - dead_ADS_2012.predict) * 100)) %>%
# dplyr::mutate(stdht.change.mean = mean(stdht_2017 - stdht_2012)) %>%
# dplyr::mutate(dieoff.risk.change.mean = mean(dieoff.risk.2019 - dieoff.risk.2012)) %>%
ungroup()
#Die-off Distribution Chart
p3 <- ggplot(data = pixel.grid.data %>% filter(count >= 5), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
pixel.grid.data <- pixel.filter %>%
filter(!is.na(Tree_Cover)) %>%
# left_join(y = data %>% dplyr::select(c(latitude, longitude, system.index)), by = join_by(system.index == system.index)) %>%
# dplyr::mutate(socal = as.integer(USFS_zone == 262), sierra = as.integer(USFS_zone == 261)) %>% #Make new columns that have 0,1 for Sierra and socal to calculate proportions later
dplyr::mutate(Tree.bin = cut(Tree_Cover, breaks = seq(0, 100, by = 5)),
PrET.bin = cut(PrET_4yr, breaks = seq(-2600, 4000, by = 200)),
) %>%
dplyr::group_by(Tree.bin, PrET.bin, fire.type.bin, treatment) %>%
dplyr::mutate(count = n()) %>%
dplyr::mutate(ADS.mean = mean(ADS)) %>%
dplyr::mutate(dTree.mean = mean(dTree)) %>%
dplyr::mutate(dNDMI.mean = mean(dNDMI)) %>%
# dplyr::mutate(ADS_2017.mean = mean(ADS_2017)) %>%
# dplyr::mutate(ADS.predict.overall.mean = mean(ADS.predict * dead_ADS.num)) %>%
# dplyr::mutate(ADS.predict.mean = mean(ADS.predict)) %>%
# dplyr::mutate(dead_ADS.predict.mean = mean(dead_ADS.predict * 100)) %>%
# dplyr::mutate(ADS.mag.2012.mean = mean(ADS.mag.2012)) %>%
# dplyr::mutate(dead_ADS_2012.predict.mean = mean((dead_ADS_2012.predict) * 100)) %>%
# dplyr::mutate(ADS.mag.change.mean = mean(ADS.mag.2019 - ADS.mag.2012)) %>%
# dplyr::mutate(dead_ADS.predict.change.mean = mean((dead_ADS_2019.predict - dead_ADS_2012.predict) * 100)) %>%
# dplyr::mutate(stdht.change.mean = mean(stdht_2017 - stdht_2012)) %>%
# dplyr::mutate(dieoff.risk.change.mean = mean(dieoff.risk.2019 - dieoff.risk.2012)) %>%
ungroup()
p3 <- ggplot(data = pixel.grid.data %>% filter(count >= 5), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p3 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
# scale_fill_gradient2(limits = c(0,350), breaks = c(5,100, 200, 300), midpoint = 175, low = "cornflowerblue", mid = "yellow", high = "red", na.value = 'transparent', guide = 'none') +
# scale_alpha(range = c(1, 1), limits = c(5, 300), na.value = 0.4) +labs(fill = "Grid Cells") +
# labs(fill = "Grid Cells") +
#Create the density layer
# new_scale_fill() +
#Piecewise linear regression fit line
# geom_line(mapping = aes(x=Water_Stress, y=dTree, color = treatment, linetype = treatment), size=2) +
#Piecewise fit uncertainty
# geom_ribbon(mapping = aes(x = Water_Stress, y = dTree.fit, ymax = dTree.fit + 1.96*dTree.se.fit, ymin = dTree.fit - 1.96*dTree.se.fit, fill = treatment), alpha = 0.4) +
# stat_cor(mapping = aes(x = Tree_Cover, y = dTree, color = treatment, label = paste(..rr.label..)), show.legend = FALSE) +
# geom_smooth(method = 'lm', mapping = aes(x = Tree_Cover, y = dTree, color = treatment, linetype = treatment, fill = treatment),show.legend = TRUE, size = 2) +
#Do the Formating
# scale_linetype(name = 'Treatment') +
# scale_fill_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# scale_color_brewer(type = 'div', palette = 'Set1', name = 'Treatment') +
# guides(color = guide_legend(), linetype = guide_legend(), fill = guide_legend(), alpha = 'none') +
facet_grid(fire.type.bin ~ treatment) +
#Add the R^2 values
# geom_text(data = r2.text, mapping = aes(x = x, y = y, label = label, color = treatment), size = 3.5, parse = TRUE) +
#Add the R^2 text
# geom_text(data = letter.text, mapping = aes(x = x, y = y, label = label), size = 5, fontface = "bold") +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
tree.xlab <- c('0','','','', '', '25', '', '', '', '', '50', '', '', '', '', '75', '', '', '', '', '', '100')
pret.ylab <- c('','','','-2000', '', '', '', '', '-1000', '', '', '', '', '0', '', '', '', '', '1000', '', '', '', '', '2000', '', '', '', '', '3000', '', '')
#Die-off Distribution Chart
p3 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
tree.xlab <- c('0','','','', '', '25', '', '', '', '', '50', '', '', '', '', '75', '', '', '', '', '100')
pret.ylab <- c('','','','-2000', '', '', '', '', '-1000', '', '', '', '', '0', '', '', '', '', '1000', '', '', '', '', '2000', '', '', '', '', '3000', '', '')
#Die-off Distribution Chart
p3 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p3
p6 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = ADS.mean, group = ADS.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = ADS.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (trees ha'^-1*')'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p6
pixel.grid.data <- pixel.filter %>%
filter(!is.na(ADS)) %>%
# left_join(y = data %>% dplyr::select(c(latitude, longitude, system.index)), by = join_by(system.index == system.index)) %>%
# dplyr::mutate(socal = as.integer(USFS_zone == 262), sierra = as.integer(USFS_zone == 261)) %>% #Make new columns that have 0,1 for Sierra and socal to calculate proportions later
dplyr::mutate(Tree.bin = cut(Tree_Cover, breaks = seq(0, 100, by = 5)),
PrET.bin = cut(PrET_4yr, breaks = seq(-2600, 4000, by = 200)),
) %>%
dplyr::group_by(Tree.bin, PrET.bin, fire.type.bin, treatment) %>%
dplyr::mutate(count = n()) %>%
dplyr::mutate(ADS.mean = mean(ADS)) %>%
dplyr::mutate(dTree.mean = mean(dTree)) %>%
dplyr::mutate(dNDMI.mean = mean(dNDMI)) %>%
# dplyr::mutate(ADS_2017.mean = mean(ADS_2017)) %>%
# dplyr::mutate(ADS.predict.overall.mean = mean(ADS.predict * dead_ADS.num)) %>%
# dplyr::mutate(ADS.predict.mean = mean(ADS.predict)) %>%
# dplyr::mutate(dead_ADS.predict.mean = mean(dead_ADS.predict * 100)) %>%
# dplyr::mutate(ADS.mag.2012.mean = mean(ADS.mag.2012)) %>%
# dplyr::mutate(dead_ADS_2012.predict.mean = mean((dead_ADS_2012.predict) * 100)) %>%
# dplyr::mutate(ADS.mag.change.mean = mean(ADS.mag.2019 - ADS.mag.2012)) %>%
# dplyr::mutate(dead_ADS.predict.change.mean = mean((dead_ADS_2019.predict - dead_ADS_2012.predict) * 100)) %>%
# dplyr::mutate(stdht.change.mean = mean(stdht_2017 - stdht_2012)) %>%
# dplyr::mutate(dieoff.risk.change.mean = mean(dieoff.risk.2019 - dieoff.risk.2012)) %>%
ungroup()
p5 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5
ggsave(filename = 'FigS10_frap_rx_dtree_tree_pet_4yr_interaction.png', height=16, width= 16, units = 'cm', dpi=900)
p6 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = ADS.mean, group = ADS.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = ADS.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (trees ha'^-1*')'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p6
p5 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5
p5 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
guides(fill = guide_legend(reverse=T)) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5
p5 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
guides(fill = guide_colorbar(reverse=TRUE)) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5
p5 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = dTree.mean, group = dTree.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = dTree.mean)) +
scale_fill_gradient(high = 'yellow', low = '#de2d26', name = expression(atop('Observed', 'Die-back (%)'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
guides(fill = guide_colorbar(reverse=TRUE)) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p5
ggsave(filename = 'FigS10_frap_rx_dtree_tree_pet_4yr_interaction.png', height=12, width= 14, units = 'cm', dpi=900)
p6 <- ggplot(data = pixel.grid.data %>% filter(count >= 5 & !is.na(Tree.bin)), mapping = aes(y = PrET.bin, x = Tree.bin, fill = ADS.mean, group = ADS.mean)) +
geom_bin_2d(binwidth = c(5, 200), mapping = aes(group = ADS.mean)) +
scale_fill_gradient(low = 'yellow', high = '#de2d26', name = expression(atop('Observed', 'Die-back (trees ha'^-1*')'))) + # (trees ha'^-1*')'))) +
facet_grid(fire.type.bin ~ treatment) +
theme_bw() +
# theme(axis.title.y = element_blank(), axis.text.y = element_blank()) +
# scale_y_reverse() +
scale_y_discrete(labels = pret.ylab) +
scale_x_discrete(labels = tree.xlab) +
xlab(expression('Tree Cover (%)')) + ylab(expression('Pr-ET (mm 4yr'^-1*')'))
p6
ggsave(filename = 'FigS11_frap_rx_ads_tree_pet_4yr_interaction.png', height=12, width= 14, units = 'cm', dpi=900)
install.packages(c('tidymodels', 'vip'),repo='https://cran.r-project.org/')
#Supplementary Figure
# pixel.filter %>% summary()
# wild.control <- pixel.filter %>% filter(treatment == 'Control' & !is.na(ADS))
# wild.disturb <- pixel.filter %>% filter(treatment == 'Disturb' & !is.na(ADS))
# # rx.control <- pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == "Rxfire" & !is.na(ADS))
# # rx.disturb <- pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == "Rxfire" & !is.na(ADS))
#
# #Models for Wild Fire with ADS
ADS.lm <- lm(data = pixel.filter, ADS ~ Tree_Cover * PrET_4yr)
summary(ADS.lm)
# wild.disturb.lm <- lm(data = wild.disturb, ADS ~ PrET_4yr)
#
# #Models for Rx Fire
# # rx.control.lm <- lm(data = rx.control, ADS ~ PrET_4yr)
# # rx.disturb.lm <- lm(data = rx.disturb, ADS ~ PrET_4yr)
#
# #Calculate the sgemented models
ADS.seg <- segmented(ADS.lm, seg.Z=~PrET_4yr)
summary(ADS.seg)
dTree.lm <- lm(data = pixel.filter, dTree ~ Tree_Cover * PrET_4yr)
summary(dTree.lm)
# #Calculate the sgemented models
dTree.seg <- segmented(dTreee.lm, seg.Z=~PrET_4yr)
dTree.seg <- segmented(dTree.lm, seg.Z=~PrET_4yr)
summary(dTree.seg)
ADS.lm <- lm(data = pixel.filter, ADS ~ Tree_Cover * PrET_4yr + treatment)
summary(ADS.lm)
ADS.lm <- lm(data = pixel.filter, ADS ~ Tree_Cover * PrET_4yr)
summary(ADS.lm)
summary(dTree.lm)
dTree.lm <- lm(data = pixel.filter, dTree ~ Tree_Cover + PrET_4yr)
summary(dTree.lm)
ADS.lm <- lm(data = pixel.filter, ADS ~ Tree_Cover + PrET_4yr)
summary(ADS.lm)
summary(ADS.seg)
ADS.seg <- segmented(ADS.lm, seg.Z=~PrET_4yr)
summary(ADS.seg)
ADS.lm <- lm(data = pixel.filter, ADS ~ Tree_Cover + PrET_4yr)
summary(ADS.lm)
dTree.lm <- lm(data = pixel.filter, dTree ~ Tree_Cover + PrET_4yr)
summary(dTree.lm)
# #Calculate the sgemented models
dTree.seg <- segmented(dTree.lm, seg.Z=~PrET_4yr)
summary(dTree.seg)
