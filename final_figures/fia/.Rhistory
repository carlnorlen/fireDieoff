summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100,
TPA.dead.pct.sd = sd(tpa.dead.pct) * 100,
TPA.n = n()),
mapping = aes(ymin=TPA.dead.pct.mean - 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
ymax=TPA.dead.pct.mean + 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
#ylim(-2.5,20) +
xlab('Year') + ylab('Mortality (%)')
p11
# join.stdage %>% filter(STDAGE <= 10) %>% count()
p12 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.all = mean(tpa.all), TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.all, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.mean = mean(tpa.all),
TPA.sd = sd(tpa.all), TPA.n = n()),
mapping = aes(ymin=TPA.mean - 1.96*(TPA.sd / sqrt(TPA.n)),
ymax=TPA.mean + 1.96*(TPA.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none') +
xlab('Year') + ylab(expression('Basal Area (trees ha'^-1*')'))
p12
f6 <- ggarrange(p10, p11, p12, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f6
join.stdage$tpa.dead.pct <- join.stdage$tpa.dead / join.stdage$tpa.all
#fill the NAs for basal_area.dead.pct, this could go earlier
join.stdage <- join.stdage %>% dplyr::mutate(tpa.dead.pct = replace(tpa.dead.pct, is.na(tpa.dead.pct), 0))
p7<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join.stdage %>% ungroup() %>% #filter(tree_type %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead)),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#95% CI Die-off
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead),
BA.dead.sd = sd(basal_area.dead), BA.n = n()),
mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
x = INVYR, fill = stdage.bin, linetype = stdage.bin), alpha = 0.2) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.25, 0.5), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
# scale_fill_viridis_d("Tree\nAge", option = 'B') +
# scale_color_viridis_d("Tree\nAge", option = 'B') +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
p7
p8 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(BA.dead.pct.mean = mean(basal_area.dead.pct) * 100, BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead.pct.mean, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead.pct.mean = mean(basal_area.dead.pct) * 100,
BA.dead.pct.sd = sd(basal_area.dead.pct) * 100,
BA.n = n()),
mapping = aes(ymin=BA.dead.pct.mean - 1.96*(BA.dead.pct.sd / sqrt(BA.n)),
ymax=BA.dead.pct.mean + 1.96*(BA.dead.pct.sd / sqrt(BA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylim(-2.5,20) +
xlab('Year') + ylab('Mortality (%)')
p8
# join.stdage %>% filter(STDAGE <= 10) %>% count()
p9 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none') +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
p9
f5 <- ggarrange(p7, p8, p9, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f5
p10 <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join.stdage %>% ungroup() %>% #filter(tree_type %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.dead = mean(tpa.dead)),
mapping = aes(x = INVYR, y = TPA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#95% CI Die-off
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.dead = mean(tpa.dead),
TPA.dead.sd = sd(tpa.dead), TPA.n = n()),
mapping = aes(ymin=TPA.dead - 1.96*(TPA.dead.sd / sqrt(TPA.n)),
ymax=TPA.dead + 1.96*(TPA.dead.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin, linetype = stdage.bin), alpha = 0.2) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.25, 0.5), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
# scale_fill_viridis_d("Tree\nAge", option = 'B') +
# scale_color_viridis_d("Tree\nAge", option = 'B') +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Mortality (trees ha'^-1*')'))
p10
p11 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100, TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.dead.pct.mean, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100,
TPA.dead.pct.sd = sd(tpa.dead.pct) * 100,
TPA.n = n()),
mapping = aes(ymin=TPA.dead.pct.mean - 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
ymax=TPA.dead.pct.mean + 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
#ylim(-2.5,20) +
xlab('Year') + ylab('Mortality (%)')
p11
# join.stdage %>% filter(STDAGE <= 10) %>% count()
p12 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.all = mean(tpa.all), TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.all, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.mean = mean(tpa.all),
TPA.sd = sd(tpa.all), TPA.n = n()),
mapping = aes(ymin=TPA.mean - 1.96*(TPA.sd / sqrt(TPA.n)),
ymax=TPA.mean + 1.96*(TPA.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none') +
xlab('Year') + ylab(expression('Basal Area (trees ha'^-1*')'))
p12
f6 <- ggarrange(p10, p11, p12, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f6
p11 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100, TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.dead.pct.mean, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100,
TPA.dead.pct.sd = sd(tpa.dead.pct) * 100,
TPA.n = n()),
mapping = aes(ymin=TPA.dead.pct.mean - 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
ymax=TPA.dead.pct.mean + 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylim(-2.5,20) +
xlab('Year') + ylab('Mortality (%)')
p11
f6 <- ggarrange(p10, p11, p12, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f6
ggsave(filename = 'Fig9_pine_fir_byAge_FIA_mortality_density_time_series.png', height=18, width= 10, units = 'cm', dpi=900)
p11 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100, TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.dead.pct.mean, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100,
TPA.dead.pct.sd = sd(tpa.dead.pct) * 100,
TPA.n = n()),
mapping = aes(ymin=TPA.dead.pct.mean - 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
ymax=TPA.dead.pct.mean + 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
ylim(-2.5,15) +
xlab('Year') + ylab('Mortality (%)')
p11
# join.stdage %>% filter(STDAGE <= 10) %>% count()
p12 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>% summarize(TPA.all = mean(tpa.all), TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.all, color = stdage.bin, linetype = stdage.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.stdage %>% ungroup() %>% #filter(stdage.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(TPA.mean = mean(tpa.all),
TPA.sd = sd(tpa.all), TPA.n = n()),
mapping = aes(ymin=TPA.mean - 1.96*(TPA.sd / sqrt(TPA.n)),
ymax=TPA.mean + 1.96*(TPA.sd / sqrt(TPA.n)),
x = INVYR, fill = stdage.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nAge", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nAge") +
theme_bw() +
theme(legend.position = 'none') +
xlab('Year') + ylab(expression('Basal Area (trees ha'^-1*')'))
p12
f6 <- ggarrange(p10, p11, p12, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f6
ggsave(filename = 'Fig9_pine_fir_byAge_FIA_mortality_density_time_series.png', height=18, width= 10, units = 'cm', dpi=900)
#Figure out how to do a DBH time series for the pine and fir trees.
dia.q <- as.data.frame(unname(quantile((all %>% filter(tree_type %in% c('pine', 'fir')))$DIA, prob = seq(0,1, 1/4), type = 3, na.rm = TRUE)))
colnames(dia.q) <- 'DIA'
dia.q$'Quintile' <- c(0.0, 0.25, 0.5,  0.75, 1.0)
dia.q
f7 <- ggplot(data = all %>% filter(tree_type %in% c('pine', 'fir'))) + # & INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"))) +
geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.25) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.5) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.75) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
#geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.8) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_histogram(mapping = aes(x = DIA), bins = 60) + theme_bw()
f7
ggsave(filename = 'Fig10_pine_fir_diameter_histogram.png', height=12, width= 10, units = 'cm', dpi=900)
dia.q
#Add the stand age bins
all <- all %>% mutate(dia.bin = case_when(
DIA >= dia.q %>% filter(Quintile == 0.75) %>% dplyr::select(DIA) %>% as.numeric() ~ '73.91+',
DIA >= dia.q %>% filter(Quintile == 0.5) %>% dplyr::select(DIA) %>% as.numeric() &
DIA < dia.q %>% filter(Quintile == 0.75) %>% dplyr::select(DIA) %>% as.numeric() ~ '45.47-73.90',
DIA >= dia.q %>% filter(Quintile == 0.25) %>% dplyr::select(DIA) %>% as.numeric() &
DIA < dia.q %>% filter(Quintile == 0.5) %>% dplyr::select(DIA) %>% as.numeric() ~ '22.86-45.46',
# DIA >= dia.q %>% filter(Quintile == 0.2) %>% dplyr::select(DIA) %>% as.numeric() &
# DIA < dia.q %>% filter(Quintile == 0.4) %>% dplyr::select(DIA) %>% as.numeric() ~ '19.30-34.30',
DIA < dia.q %>% filter(Quintile == 0.25) %>% dplyr::select(DIA) %>% as.numeric() ~ '2.54-22.85'))
all
#Order the stand age bins
all$dia.bin = with(all, factor(dia.bin, levels = c('2.54-22.85','22.86-45.46','45.47-73.90', '73.91+')))
summary(all)
live.dia <- all %>% filter(STATUSCD == 1 & tree_type %in% c('pine', 'fir')) %>%
group_by(INVYR, PLOT, dia.bin, .drop = FALSE) %>%
summarize(count.live = n(), tpa.live = sum(count),
basal_area.live = sum(basal_area), STDAGE = median(STDAGE))
live.dia %>% summary()
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead.dia <- all %>% filter(STATUSCD == 2 & MORTYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019") & tree_type %in% c('pine', 'fir')) %>%
group_by(PLOT, INVYR, dia.bin, .drop = FALSE) %>%
summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
dead.dia %>% summary()
join.dia <- left_join(live.dia, dead.dia, by = c('PLOT', 'INVYR', 'dia.bin'))
summary(join.dia)
#Replace the NAs with 0s
join.dia <- join.dia %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0)
) %>% group_by(INVYR, PLOT) %>%
fill(STDAGE, .direction = c("up"))
#Add the total basal area calculations
join.dia$count.all <- join.dia$count.live + join.dia$count.dead
join.dia$tpa.all <- join.dia$tpa.live + join.dia$tpa.dead
join.dia$basal_area.all <- join.dia$basal_area.live + join.dia$basal_area.dead
join.dia$basal_area.dead.pct <- join.dia$basal_area.dead / join.dia$basal_area.all
#fill the NAs for basal_area.dead.pct, this could go earlier
join.dia <- join.dia %>% dplyr::mutate(basal_area.dead.pct = replace(basal_area.dead.pct, is.na(basal_area.dead.pct), 0))
join.dia$tpa.dead.pct <- join.dia$tpa.dead / join.dia$tpa.all
#fill the NAs for basal_area.dead.pct, this could go earlier
join.dia <- join.dia %>% dplyr::mutate(tpa.dead.pct = replace(tpa.dead.pct, is.na(tpa.dead.pct), 0))
summary(join.dia)
#Create the time series for FIA Pine and Fire diameter
p13<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join.dia %>% ungroup() %>% #filter(tree_type %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>% summarize(BA.dead = mean(basal_area.dead)),
mapping = aes(x = INVYR, y = BA.dead, color = dia.bin, linetype = dia.bin), size = 1) +
#95% CI Die-off
geom_ribbon(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>%
summarize(BA.dead = mean(basal_area.dead),
BA.dead.sd = sd(basal_area.dead), BA.n = n()),
mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
x = INVYR, fill = dia.bin, linetype = dia.bin), alpha = 0.2) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.25, 0.5), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_color_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nDiameter (cm)") +
# scale_fill_viridis_d("Tree\nAge", option = 'B') +
# scale_color_viridis_d("Tree\nAge", option = 'B') +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
p13
p14 <- ggplot() + #geom_line(data = join.dia %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>% summarize(BA.dead.pct.mean = mean(basal_area.dead.pct) * 100, BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead.pct.mean, color = dia.bin, linetype = dia.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
group_by(INVYR, dia.bin) %>%
summarize(BA.dead.pct.mean = mean(basal_area.dead.pct) * 100,
BA.dead.pct.sd = sd(basal_area.dead.pct) * 100,
BA.n = n()),
mapping = aes(ymin=BA.dead.pct.mean - 1.96*(BA.dead.pct.sd / sqrt(BA.n)),
ymax=BA.dead.pct.mean + 1.96*(BA.dead.pct.sd / sqrt(BA.n)),
x = INVYR, fill = dia.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nDiameter (cm)") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
#ylim(-2.5,20) +
xlab('Year') + ylab('Mortality (%)')
p14
# join.stdage %>% filter(STDAGE <= 10) %>% count()
p15 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()),
mapping = aes(x = INVYR, y = BA.all, color = dia.bin, linetype = dia.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR, fill = dia.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nDiameter (cm)") +
theme_bw() +
theme(legend.position = 'none') +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
p15
f8 <- ggarrange(p13, p14, p15, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f8
ggsave(filename = 'Fig11_pine_fir_byDIA_FIA_mortality_time_series_.png', height=18, width= 10, units = 'cm', dpi=900)
#Create the time series for FIA Pine and Fire diameter
p16 <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join.dia %>% ungroup() %>% #filter(tree_type %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>% summarize(TPA.dead = mean(tpa.dead)),
mapping = aes(x = INVYR, y = TPA.dead, color = dia.bin, linetype = dia.bin), size = 1) +
#95% CI Die-off
geom_ribbon(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>%
summarize(TPA.dead = mean(tpa.dead),
TPA.dead.sd = sd(tpa.dead), TPA.n = n()),
mapping = aes(ymin=TPA.dead - 1.96*(TPA.dead.sd / sqrt(TPA.n)),
ymax=TPA.dead + 1.96*(TPA.dead.sd / sqrt(TPA.n)),
x = INVYR, fill = dia.bin, linetype = dia.bin), alpha = 0.2) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), legend.position = c(0.25, 0.5), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
scale_color_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nDiameter (cm)") +
# scale_fill_viridis_d("Tree\nAge", option = 'B') +
# scale_color_viridis_d("Tree\nAge", option = 'B') +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Mortality (trees ha'^-1*')'))
p16
p17 <- ggplot() + #geom_line(data = join.dia %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>% summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100, TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.dead.pct.mean, color = dia.bin, linetype = dia.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
group_by(INVYR, dia.bin) %>%
summarize(TPA.dead.pct.mean = mean(tpa.dead.pct) * 100,
TPA.dead.pct.sd = sd(tpa.dead.pct) * 100,
TPA.n = n()),
mapping = aes(ymin=TPA.dead.pct.mean - 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
ymax=TPA.dead.pct.mean + 1.96*(TPA.dead.pct.sd / sqrt(TPA.n)),
x = INVYR, fill = dia.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nDiameter (cm)") +
theme_bw() +
theme(legend.position = 'none', axis.text.x = element_blank(), axis.title.y = element_text(size = 10),
axis.title.x = element_blank(), axis.text.y = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
#ylim(-2.5,20) +
xlab('Year') + ylab('Mortality (%)')
p17
# join.stdage %>% filter(STDAGE <= 10) %>% count()
p18 <- ggplot() + #geom_line(data = join.stdage %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>% summarize(TPA.all = mean(tpa.all), TPA.n = n()),
mapping = aes(x = INVYR, y = TPA.all, color = dia.bin, linetype = dia.bin),  size = 1) +
#The error bars
geom_ribbon(data = join.dia %>% ungroup() %>% #filter(dia.bin %in% c('pine', 'fir', 'oak', 'cedar')) %>%
filter(!is.na(dia.bin)) %>%
group_by(INVYR, dia.bin) %>%
summarize(TPA.mean = mean(tpa.all),
TPA.sd = sd(tpa.all), TPA.n = n()),
mapping = aes(ymin=TPA.mean - 1.96*(TPA.sd / sqrt(TPA.n)),
ymax=TPA.mean + 1.96*(TPA.sd / sqrt(TPA.n)),
x = INVYR, fill = dia.bin), alpha = 0.2) +
scale_color_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_fill_brewer(name = "Tree\nDiameter (cm)", palette = 'Dark2') +
scale_linetype_discrete(name = "Tree\nDiameter (cm)") +
theme_bw() +
theme(legend.position = 'none') +
xlab('Year') + ylab(expression('Basal Area (trees ha'^-1*')'))
p18
f9 <- ggarrange(p16, p17, p18, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
f9
ggsave(filename = 'Fig12_pine_fir_byDIA_FIA_mortality_density_time_series.png', height=18, width= 10, units = 'cm', dpi=900)
f7 <- ggplot(data = all %>% filter(tree_type %in% c('pine', 'fir'))) + # & INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"))) +
geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.25) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.5) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.75) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
#geom_vline(xintercept = (dia.q %>% filter(Quintile == 0.8) %>% dplyr::select(DIA) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_histogram(mapping = aes(x = DIA), bins = 60) + theme_bw()
f7
ggsave(filename = 'Fig10_pine_fir_diameter_histogram.png', height=12, width= 16, units = 'cm', dpi=900)
f4 <- ggplot(data = all %>% filter(tree_type %in% c('pine', 'fir'))) + # & INVYR %in% c("2013", "2014", "2015", "2016", "2017", "2018", "2019"))) +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black', size = 1, linetype = 'dashed') +
geom_histogram(mapping = aes(x = STDAGE), bins = 60) + theme_bw()
f4
ggsave(filename = 'Fig7_pine_fir_stand_age_histogram.png', height=12, width= 16, units = 'cm', dpi=900)
