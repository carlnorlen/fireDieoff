q()
remove.packages('terra')
.libPaths
.libPaths()
remove.packages('terra', "C:/Users/can02/AppData/Local/Programs/R-4.0.2/library")
#Set up a python environment
# ee_install(py_env = "rgee")
library('rgee')
#Initialize Google Earth Engine
ee_Initialize(user = 'cnorlen@uci.edu', drive = TRUE)
p <- c('rgee', 'terra', 'sf')
# install.packages(p,repo='https://cran.r-project.org/')
# install.packages(c('ggmap'),repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu', drive = 'TRUE')
srtm <- ee$Image("USGS/SRTMGL1_003")
#Intialize RGEE
ee_Initialize(user = 'cnorlen@uci.edu')
srtm <- ee$Image("USGS/SRTMGL1_003")
viz <- list(
max = 4000,
min = 0,
palette = c("#000000","#5AAD5A","#A9AD84","#FFFFFF")
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM',
legend = TRUE
)
Map$addLayer(
eeObject = srtm,
visParams =  viz,
name = 'SRTM'
)
ee_check()
ee_check_python()
ee_check_credentials()
ee_Initialize(user='cnorlen@uci.edu', drive = TRUE)
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
print(ee_path_user)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
googledrive::drive_auth(
email = NULL,
cache = ee_path_user
)
full_credentials
drive_condition
email <- "cnorlen@uci.edu"
oauth_func_path <- system.file("python/ee_utils.py", package = "rgee")
utils_py <- rgee:::ee_source_python(oauth_func_path)
ee_path <- ee_utils_py_to_r(utils_py$ee_path())
email_clean <- gsub("@gmail.com", "", email)
ee_path_user <- sprintf("%s/%s", ee_path, email_clean)
# Is there some Google Drive Token in this Folder?
full_credentials <- list.files(path = ee_path_user, full.names = TRUE)
drive_condition <- grepl(".*_.*@.*", basename(full_credentials))
drive_credentials <- full_credentials[drive_condition]
email <- sub("^[^_]*_", "", basename(drive_credentials))
print(ee_path_user)
print(email)
ee_clean_credentials("cnorlen@uci.edu")
ee_Initialize("cnorlen")
ee_Initialize("cnorlen", drive = TRUE)
googledrive::drive_auth(email="cnorlen@uci.edu")
gargle_oauth_email = "cnorlen@uci.edu"
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
library(googledrive)
googledrive::drive_auth(email= gargle::gargle_oath_email(),
path = NULL,
scopes = "https://www.googleapis.com/auth/drive",
cache = gargle::gargle_oauth_cache(),
use_oob = gargle::gargle_oob_default(),
token = NULL)
googledrive::drive_auth(email= "cnorlen@uci.edu")
ee_check_credentials()
ee_Initialize(drive = TRUE)
library(Rcpp)
install.packages('Rcpp',repo='https://cran.r-project.org/')
install.packages("Rcpp", repo = "https://cran.r-project.org/")
library(Rcpp)
install.packages('httpuv',repo='https://cran.r-project.org/')
library(httpuv)
ee_Initialize(drive = TRUE)
library(rgee)
ee_Initialize(drive = TRUE)
p <- c("RSQLite","dbplyr","ggplot2","dplyr","tidyr", "ggpubr", "RColorBrewer",
'gt', 'gtsummary', 'webshot', 'kableExtra', 'broom')
# If necessary: install/update packages
# install.packages('rlang',repo='https://cloud.r-project.org/')
# library("agricolae")
# Load packages
lapply(p,require,character.only=TRUE)
#Set working directory
#setwd("/C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data")
#cd /C/Users/Carl/mystuff/Goulden_Lab/Forest_Dieback/dieback/figure_set/field_data
#cd /C/Users/can02/mystuff/fireDieoff/FIA
#Command for calling the script in the command line: R < stand_age_dieoff.r --vanilla
#INstalling packages: install.packages('RColorBrewer',repo='https://cran.cnr.berkeley.edu/')
setwd('C:/Users/can02/mystuff/fireDieoff/FIA')
#Add Data Sets
sql_dir <- 'D:\\Large_Files\\FIA\\SQLite_FIADB_CA\\2019_version' #Download from FIA DataMart
fiaCA <- file.path(sql_dir, 'FIADB_CA.db')
sqlite.driver <- dbDriver("SQLite")
db <- dbConnect(sqlite.driver,
dbname = fiaCA)
#Add extension functions, allows more math functions
initExtension(db)
# summary(db)
#Query for FIA live trees, 2014-2019
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd,
c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage,
c.dstrbcd1, c.dstrbyr1
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means non-forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 1.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es') --South Sierra Nevada P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba' OR
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70) -- No Fires OR c.dstrbcd1 = 30 OR c.dstrbcd1 = 31 OR c.dstrbcd1 = 32)
")
#DSTRBCD1 == 30, 31, 32 reference fires
live <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(live)
#Convert per acre to per hectare
live$count <- live$count * 2.47105 # Convert to per hectare
live$DIA <- live$DIA * (2.54) #Convert to centimeters
live$basal_area <- (((live$DIA / 2)^2) * pi)*(1/10000) * live$count
q1 <- dbSendQuery(db, "SELECT
t.tree, -- tree identified code
(t.carbon_ag * 2)*(t.tpa_unadj) live_biomass, -- biomass (lbs) of tree
t.tpa_unadj count, --trees/acre
t.dia, -- DBH in inches
t.ht, --Total live tree height in feet
t.actualht, --The measure height in feet
t.agentcd, --tree damage
t.mortyr, --mortality year
t.plot, t.statuscd, t.invyr, r.common_name, t.spcd, c.fortypcd,
c.fldtypcd, rft.meaning, c.stdage, c.fldage, t.totage, t.bhage,
c.dstrbcd1, c.dstrbyr1
FROM
cond c,
plot p,
tree t, -- tree table must be included for tree-level estimates
ref_species r,
ref_forest_type rft
WHERE p.cn = c.plt_cn
AND t.plt_cn = c.plt_cn
AND t.condid = c.condid
AND c.cond_status_cd = 1 --2 means non-forest
--AND t.statuscd = 1 --1 means live trees, 2 means dead trees
AND t.spcd = r.spcd
AND t.dia >= 1.0 -- additional where_clause from ref_pop_attribute table
AND rft.value = c.fldtypcd
AND (P.ECOSUBCD = 'M261Ep' OR P.ECOSUBCD = 'M261Eq' OR P.ECOSUBCD = 'M261Eu' OR P.ECOSUBCD = 'M261Er' OR P.ECOSUBCD = 'M261Eo' OR P.ECOSUBCD = 'M261Es') --South Sierra Nevada P.ECOSUBCD = 'M262Bb' OR P.ECOSUBCD = 'M262Ba' OR
AND (c.dstrbcd1 = 0 OR c.dstrbcd1 = 10 OR c.dstrbcd1 = 11 OR c.dstrbcd1 = 12 OR c.dstrbcd1 = 54 OR c.dstrbcd1 = 70 OR c.dstrbcd1 = 30 OR c.dstrbcd1 = 31 OR c.dstrbcd1 = 32)
")
#DSTRBCD1 == 30, 31, 32 reference fires
live <- dbFetch(q1, n = -1)
# dbDisconnect(db)
summary(live)
live$count <- live$count * 2.47105 # Convert to per hectare
live$DIA <- live$DIA * (2.54) #Convert to centimeters
live$basal_area <- (((live$DIA / 2)^2) * pi)*(1/10000) * live$count
live %>% filter(!is.na(MORTYR)) %>% select(PLOT) %>% unique() %>% count()
# test <- live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR) %>% summarize(count = n())
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), STDAGE = median(STDAGE), DSTRBDCD1 = median(DSTRBCD1), DSTRBYR1 = median(DSTRBYR1))
total
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- live %>% filter(STATUSCD == 2) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR)
dead
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), STDAGE = median(STDAGE), DSTRBCD1 = median(DSTRBCD1), DSTRBYR1 = median(DSTRBYR1))
total
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- live %>% filter(STATUSCD == 2) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR)
dead
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
join
join$years.fire <- join$DSTRBYR1 - join$INVYR
join
summary(join)
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter(DSTRBDCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)), mapping = aes(x = years.fire, y = BA.all), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Fire Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter(DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)), mapping = aes(x = years.fire, y = BA.all), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Fire Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter(DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)), mapping = aes(x = years.fire, y = BA.all), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)), mapping = aes(x = years.fire, y = BA.all), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999)
join$years.fire <- join$INVYR - join$DSTRBYR1
join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999)
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)), mapping = aes(x = years.fire, y = BA.all), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f2<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_point(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire, PLOT) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)),
mapping = aes(x = years.fire, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
f2
f2<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_point(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)),
mapping = aes(x = years.fire, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
f2
f2<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead), count = n()),
mapping = aes(x = years.fire, y = count), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab('# Plots')
f2
f4<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead), STDAGE = mean(STDAGE)),
mapping = aes(x = years.fire, y = STDAGE), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab('Average Tree Age')
f4
f4<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999 & STDAGE != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead), STDAGE = mean(STDAGE)),
mapping = aes(x = years.fire, y = STDAGE), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab('Average Tree Age')
f4
f1 <- ggarrange(f1, f2, f3, f4, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f1
ggsave(filename = 'Fig8_FIA_fire_recovery_exploration.png', height=18, width= 10, units = 'cm', dpi=900)
f3<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_point(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)),
mapping = aes(x = years.fire, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Mortality (m'^2*' ha'^-1*')'))
f3
f4<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999 & STDAGE != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead), STDAGE = mean(STDAGE)),
mapping = aes(x = years.fire, y = STDAGE), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
# theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab('Average Tree Age')
f4
f1 <- ggarrange(f1, f2, f3, f4, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f1
ggsave(filename = 'Fig8_FIA_fire_recovery_exploration.png', height=18, width= 10, units = 'cm', dpi=900)
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead)), mapping = aes(x = years.fire, y = BA.all), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f2<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter((DSTRBCD1 == 30 | DSTRBCD1 == 31 | DSTRBCD1 == 32) & !is.na(DSTRBYR1) & DSTRBYR1 != 9999) %>% group_by(years.fire) %>% summarize(BA.all = mean(basal_area.all), BA.dead = mean(basal_area.dead), count = n()),
mapping = aes(x = years.fire, y = count), color = 'black', size = 1) +
#95% CI Die-off
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR) %>%
#               summarize(BA.dead = mean(basal_area.dead),
#                         BA.dead.sd = sd(basal_area.dead), BA.n = n()),
#             mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Years Since Fire') + ylab('# Plots')
f2
f1 <- ggarrange(f1, f2, f3, f4, ncol = 1, nrow = 4, common.legend = FALSE, heights = c(0.9, 0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)', 'd)'))
f1
ggsave(filename = 'Fig8_FIA_fire_recovery_exploration.png', height=18, width= 10, units = 'cm', dpi=900)
