#Mortality binned by stand age
#Add a new year column
# join <- join %>% mutate(year = case_when(is.na(MORTYR) ~ INVYR, !is.na(MORTYR) ~ MORTYR))
join <- join %>% mutate(age.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE < 120 & STDAGE >= 93 ~ '93-119',
STDAGE >= 30 & STDAGE < 93 ~ '30-92',
STDAGE < 29 ~ '0-29'))
#Order the stand age bins
join$age.bin = with(join, factor(age.bin, levels = c('0-29', '30-92', '93-119','120-159',
'160-209','210+')))
summary(join)
dead <- live %>% filter(STATUSCD == 2) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR)
dead
test <- live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR) %>% summarize(count = n())
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), STDAGE = median(STDAGE))
total
summary(live)
live$count <- live$count * 2.47105 # Convert to per hectare
live$DIA <- live$DIA * (2.54) #Convert to centimeters
live$basal_area <- (((live$DIA / 2)^2) * pi)*(1/10000) * live$count
stdage.q <- as.data.frame(unname(quantile(live$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2,0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
#Bin data by Stand Age. Bins are quintiles.
live <- live %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '93-119',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-92'))
#Order the stand age bins
live$stdage.bin = with(live, factor(stdage.bin, levels = c('0-92','93-119','120-159','160-209','210+')))
# summary(live)
#Replace MORTYR that is NA with INVYR
live[is.na(live$MORTYR), ]$MORTYR <- live[is.na(live$MORTYR), ]$INVYR
# live%>% dplyr::filter(stdage.bin == '138-154')
#Calculate the Quintiles of tree age (breast height age)
bhage.q <- as.data.frame(unname(quantile(live$BHAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(bhage.q) <- 'BHAGE'
bhage.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
bhage.q
# live %>% filter(!is.na(BHAGE))
#Bin data by Stand Age. Bins are quintiles.
live <- live %>% filter(!is.na(BHAGE)) %>% mutate(bhage.bin = case_when(
BHAGE >= bhage.q %>% filter(Quintile == 0.8) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '171+',
BHAGE >= bhage.q %>% filter(Quintile == 0.6) %>% dplyr::select(BHAGE) %>% as.numeric() &
BHAGE < bhage.q %>% filter(Quintile == 0.8) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '110-170',
BHAGE >= bhage.q %>% filter(Quintile == 0.4) %>% dplyr::select(BHAGE) %>% as.numeric() &
BHAGE < bhage.q %>% filter(Quintile == 0.6) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '78-109',
BHAGE >= bhage.q %>% filter(Quintile == 0.2) %>% dplyr::select(BHAGE) %>% as.numeric()  &
BHAGE < bhage.q %>% filter(Quintile == 0.4) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '57-77',
BHAGE < bhage.q %>% filter(Quintile == 0.2) %>% dplyr::select(BHAGE) %>% as.numeric() ~ '6-56'))
#Order the stand age bins
live$bhage.bin = with(live, factor(bhage.bin, levels = c('6-56','57-77','78-109','110-170','171+')))
live %>% filter(!is.na(MORTYR)) %>% select(PLOT) %>% unique() %>% count()
test <- live %>% select(PLOT, INVYR) %>% group_by(PLOT, INVYR) %>% summarize(count = n())
total <- live %>% group_by(INVYR, PLOT) %>% summarize(count = n(), tpa.all = sum(count), basal_area.all = sum(basal_area), STDAGE = median(STDAGE))
total
#There is a slightly different result when using INVYR instead of MORTYR to calculate annual mortality
dead <- live %>% filter(STATUSCD == 2) %>% group_by(PLOT, INVYR) %>% summarize(count.dead = n(), tpa.dead = sum(count), basal_area.dead = sum(basal_area))
# dead <- dead %>% mutate(INVYR = MORTYR)
dead
join <- left_join(total, dead, by = c('PLOT', 'INVYR'))
#Replace the NAs with 0s
join <- join %>% dplyr::mutate(basal_area.dead = replace(basal_area.dead, is.na(basal_area.dead), 0),
count.dead = replace(count.dead, is.na(count.dead), 0),
tpa.dead = replace(tpa.dead, is.na(tpa.dead), 0))
stdage.q <- as.data.frame(unname(quantile(join$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
stdage.q
#Bin data by Stand Age. Bins are quintiles.
join <- join %>% mutate(stdage.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE >= stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '93-119',
STDAGE < stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-92'))
join
#Order the stand age bins
join$stdage.bin = with(join, factor(stdage.bin, levels = c('0-92','93-119','120-159',
'160-209','210+')))
join %>% group_by(stdage.bin) %>% summarize(basal_area = mean(basal_area.dead), count = n())
# join %>% filter(is.na(stdage.bin))
# join
# # live.plot
# bhage.q <- as.data.frame(unname(quantile(live$BHAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# live
#Mortality binned by stand age
#Add a new year column
# join <- join %>% mutate(year = case_when(is.na(MORTYR) ~ INVYR, !is.na(MORTYR) ~ MORTYR))
join <- join %>% mutate(age.bin = case_when(
STDAGE >= stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '210+',
STDAGE >= stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '160-209',
STDAGE >= stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '120-159',
STDAGE < 120 & STDAGE >= 93 ~ '93-119',
STDAGE >= 30 & STDAGE < 93 ~ '30-92',
STDAGE < 29 ~ '0-29'))
#Order the stand age bins
join$age.bin = with(join, factor(age.bin, levels = c('0-29', '30-92', '93-119','120-159',
'160-209','210+')))
summary(join)
f1b <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()), mapping = aes(x = INVYR, y = BA.all), color = 'black', size = 1) +
#The error bars
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
f1b
f1b <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join %>% filter(!is.na(stdage.bin) & STDAGE > 0) %>%
group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()), mapping = aes(x = INVYR, y = BA.all), color = 'black', size = 1) +
#The error bars
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
f1b
join %>% summary()
join %>% filter(STDAGE == 0) %>% count()
join %>% filter(STDAGE <= 0) %>% count()
join %>% filter(STDAGE <= 10) %>% count()
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter(!is.na(stdage.bin) & STDAGE > 0) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>%
summarize(BA.dead = mean(basal_area.dead),
BA.dead.sd = sd(basal_area.dead), BA.n = n()),
mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f1a <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin) & STDAGE > 0) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead), BA.n = n()), mapping = aes(x = INVYR, y = BA.n), color = 'black', size = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab('# Plots') + ylim(0, 60)
f1a
join %>% filter(STDAGE <= 10) %>% count()
f1b <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join %>% filter(!is.na(stdage.bin) & STDAGE > 0) %>%
group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()), mapping = aes(x = INVYR, y = BA.all), color = 'black', size = 1) +
#The error bars
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
f1b
cf1 <- ggarrange(f1, f1a, f1b, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
cf1
ggsave(filename = 'Fig1_mortality_time_series_FIA.png', height=18, width= 10, units = 'cm', dpi=900)
f2 <- ggplot() + geom_histogram(data = (join %>% filter(!is.na(STDAGE) & STDAGE > 0) %>% select(STDAGE)), mapping = aes(x =STDAGE), bins = 60) +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
theme_bw() + xlab('Stand Age') + ylab('Count')
f2
ggsave(filename = 'Fig2_Stand_Age_Quintiles_historgram.png', height=6, width= 10, units = 'cm', dpi=900)
f3<- ggplot() + #geom_line(data = live %>% filter(STATUSCD == 1  & !is.na(STDAGE)) %>% group_by(INVYR, stdage.bin) %>% summarize(Live.count = sum(count)), mapping = aes(x = INVYR, y = Live.count), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin) & STDAGE > 0) %>% group_by(INVYR, stdage.bin) %>% summarize(BA.dead = mean(basal_area.dead), BA.n = n()), mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()# + facet_wrap(~stdage.bin, ncol = 5)
# %>% filter(!is.na(stdage.bin))
f3
f1<- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#Mean Die-off
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead)), mapping = aes(x = INVYR, y = BA.dead), color = 'black', size = 1) +
#95% CI Die-off
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>%
summarize(BA.dead = mean(basal_area.dead),
BA.dead.sd = sd(basal_area.dead), BA.n = n()),
mapping = aes(ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')'))
f1
f1a <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>% group_by(INVYR) %>% summarize(BA.dead = mean(basal_area.dead), BA.n = n()), mapping = aes(x = INVYR, y = BA.n), color = 'black', size = 1) +
theme_bw() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank()) +
xlab('Year') + ylab('# Plots') + ylim(0, 60)
f1a
join %>% filter(STDAGE <= 10) %>% count()
f1b <- ggplot() + #geom_line(data = join %>% group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all)), mapping = aes(x = INVYR, y = BA.all), color = 'green') +
#The data mean
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>% summarize(BA.all = mean(basal_area.all), BA.n = n()), mapping = aes(x = INVYR, y = BA.all), color = 'black', size = 1) +
#The error bars
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR) %>%
summarize(BA.mean = mean(basal_area.all),
BA.sd = sd(basal_area.all), BA.n = n()),
mapping = aes(ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)),
x = INVYR), alpha = 0.3) +
xlab('Year') + ylab(expression('Basal Area (m'^2*' ha'^-1*')')) + theme_bw()
f1b
cf1 <- ggarrange(f1, f1a, f1b, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a)', 'b)', 'c)'))
cf1
ggsave(filename = 'Fig1_mortality_time_series_FIA.png', height=18, width= 10, units = 'cm', dpi=900)
#Stand Age Histogram with data binned by stand age
f2 <- ggplot() + geom_histogram(data = (join %>% filter(!is.na(STDAGE)) %>% select(STDAGE)), mapping = aes(x =STDAGE), bins = 60) +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
geom_vline(xintercept = (stdage.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric()), color = 'black') +
theme_bw() + xlab('Stand Age') + ylab('Count')
f2
ggsave(filename = 'Fig2_Stand_Age_Quintiles_historgram.png', height=6, width= 10, units = 'cm', dpi=900)
f3<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, y = ymin=BA.mean - 1.96*(BA.sd / sqrt(BA.n)),
ymax=BA.mean + 1.96*(BA.sd / sqrt(BA.n)), alpha = 0.3)) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f3
f3<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, y = ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), alpha = 0.3)) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f3
f3<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, y = ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n))), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f3
f3<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n))), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f3
f3<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.dead, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f3
f3<- ggplot() +
#Do the mean line
geom_line(data = join %>% filter(!is.na(stdage.bin)) %>%
group_by(INVYR, stdage.bin) %>%
summarize(BA.dead = mean(basal_area.dead), BA.n = n()),
mapping = aes(x = INVYR, y = BA.n, color = stdage.bin, linetype = stdage.bin), size = 1) +
#Do the 95% CI Ribbon
# geom_ribbon(data = join %>% filter(!is.na(stdage.bin)) %>%
#               group_by(INVYR, stdage.bin) %>%
#               summarize(BA.dead = mean(basal_area.dead), BA.n = n(), BA.dead.sd = sd(basal_area.dead)),
#             mapping = aes(x = INVYR, ymin=BA.dead - 1.96*(BA.dead.sd / sqrt(BA.n)),
#                           ymax=BA.dead + 1.96*(BA.dead.sd / sqrt(BA.n)), fill = stdage.bin), alpha = 0.3) +
xlab('Year') + ylab(expression('Mortality (m'^2*' ha'^-1*')')) + theme_bw()
f3
summary(join)
ggsave(filename = 'Fig3a_stand_age_count_time_series_FIA.png', height=6, width= 15, units = 'cm', dpi=900)
p10 <- ggbarplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(stand.age.bin)),
x = "stand.age.bin", y = "BA.dead", position = position_dodge(), color = "sequence", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(stdage.bin)),
x = "stdage.bin", y = "BA.dead", position = position_dodge(), color = "sequence", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(stdage.bin)),
x = "stdage.bin", y = "basal_area.dead", position = position_dodge(), color = "sequence", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
join %>% summary()
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(stdage.bin)),
x = "stdage.bin", y = "basal_area.dead", position = position_dodge(), color = "sequence", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(stdage.bin)),
x = "stdage.bin", y = "basal_area.dead", position = position_dodge(), color = "stdage.bin", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019)),
x = "stdage.bin", y = "basal_area.dead", position = position_dodge(), color = "stdage.bin", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019))
join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE))
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)),
x = "stdage.bin", y = "basal_area.dead", position = position_dodge(), color = "stdage.bin", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)),
x = "stdage.bin", y = "basal_area.dead", color = "stdage.bin", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
join$stdage.bin <- as.factor(join.stdage.bin)
join$stdage.bin <- as.factor(join.stdage.bin)
join$stdage.bin <- as.factor(join$stdage.bin)
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)),
x = "stdage.bin", y = "basal_area.dead", color = "stdage.bin", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)),
x = "stdage.bin", y = "basal_area.dead", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw
p10
p10 <- ggbarplot(join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)),
x = "stdage.bin", y = "basal_area.dead", fill = 'gray',
add = "mean_se" , error.plot = "errorbar", alpha = 0.8,
ylab = expression('Mortality (m'^2*' ha'^-1*')'),
xlab('Stand Age')) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_barplot() + theme_bw()
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar() + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'mean') + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', fun.y = 'mean') + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', mapping = aes(color = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', fun = 'mean_se', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = age.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', mapping = aes(fill = age.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2013,2014,2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_bar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
point_bar(stat = 'summary', mapping = aes(fill = stdage.bin)) + geom_errobar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_point(stat = 'summary', mapping = aes(fill = stdage.bin)) + geom_errobar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_point(stat = 'summary', mapping = aes(fill = stdage.bin)) + geom_errorbar(stat = 'summary', mapping = aes(fill = stdage.bin)) + theme_bw()
p10
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = stdage.bin, y = basal_area.dead)) +
geom_point(stat = 'summary', mapping = aes(color = stdage.bin)) + geom_errorbar(stat = 'summary', mapping = aes(color = stdage.bin)) + theme_bw()
p10
stdage.q <- as.data.frame(unname(quantile(live$STDAGE, prob = seq(0,1, 1/10), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.1 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,1.0)
# temp.q
stdage.q
stdage.q <- as.data.frame(unname(quantile(live$STDAGE, prob = seq(0,1, 1/10), type = 3, na.rm = TRUE)))
# precip.q
colnames(stdage.q) <- 'STDAGE'
stdage.q$'Quintile' <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,1.0)
# temp.q
stdage.q
std.q <- as.data.frame(unname(quantile((join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE))$STDAGE), prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
# precip.q
colnames(std.q) <- 'STDAGE'
std.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
std.q
std.q <- as.data.frame(unname(quantile((join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)))$STDAGE, prob = seq(0,1, 1/5), type = 3, na.rm = TRUE)))
colnames(std.q) <- 'STDAGE'
std.q$'Quintile' <- c(0.0, 0.2, 0.4, 0.6, 0.8, 1.0)
# temp.q
std.q
std.q <- as.data.frame(unname(quantile((join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)))$STDAGE, prob = seq(0,1, 1/10), type = 3, na.rm = TRUE)))
# precip.q
colnames(std.q) <- 'STDAGE'
std.q$'Quintile' <- c(0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0)
# temp.q
std.q
join$stdage.bin = with(join, factor(std.bin, levels = c('0-84', '85-104', '105-113', '114-129', '130-154',  '155-164', '165-189','190-214', '215-264','265+')))
join <- join %>% mutate(std.bin = case_when(
STDAGE >= std.q %>% filter(Quintile == 0.9) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '265+',
STDAGE >= std.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.9) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '215-264',
STDAGE >= std.q %>% filter(Quintile == 0.7) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.8) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '190-214',
STDAGE >= std.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.7) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '165-189',
STDAGE >= std.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.6) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '155-164',
STDAGE >= std.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.5) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '130-154',
STDAGE >= std.q %>% filter(Quintile == 0.3) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.4) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '114-129',
STDAGE >= std.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.3) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '105-113',
STDAGE >= std.q %>% filter(Quintile == 0.1) %>% dplyr::select(STDAGE) %>% as.numeric() &
STDAGE < std.q %>% filter(Quintile == 0.2) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '85-104',
STDAGE < std.q %>% filter(Quintile == 0.1) %>% dplyr::select(STDAGE) %>% as.numeric() ~ '0-84'))
#Order the stand age bins
join$std.bin = with(join, factor(std.bin, levels = c('0-84', '85-104', '105-113', '114-129', '130-154',  '155-164', '165-189','190-214', '215-264','265+')))
p10 <- ggplot(data = join %>% filter(INVYR %in% c(2015,2016,2017,2018,2019) & !is.na(STDAGE)), mapping = aes(x = std.bin, y = basal_area.dead)) +
geom_point(stat = 'summary', mapping = aes(color = std.bin)) + geom_errorbar(stat = 'summary', mapping = aes(color = std.bin)) + theme_bw()
p10
ggsave(filename = 'Fig7_mortality_standage_pointrange_FIA.png', height=18, width= 18, units = 'cm', dpi=900)
ggsave(filename = 'Fig7_mortality_standage_pointrange_FIA.png', height=14, width= 22, units = 'cm', dpi=900)
