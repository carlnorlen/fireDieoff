mapping = aes(ymin= dAET.mean - 1.96*(sqrt(AET.sd / AET.n)),
ymax= dAET.mean + 1.96*(sqrt(AET.sd / AET.n)),
x = stand.age, fill = fire.type.bin), alpha = 0.3) +
theme_bw() +
theme(axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12),
axis.title.x = element_text(size = 12), legend.position = 'none', legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 10),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
#scale_colour_manual(name="Vegetation Type",values=cols, aesthetics = 'color') +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
guides(color = guide_legend(), linetype = 'none', fill = 'none') +
ylab(expression(atop('ET Change', '(mm yr'^-1*')'))) + xlab('Years Since Fire')
p2c
f1 <- ggarrange(p2a,p2b,p2c, nrow = 3, ncol = 1, common.legend = FALSE, heights = c(0.9, 0.9, 1), align = "v", labels = c('a', 'b', 'c'))
f1
#Save the data
ggsave(filename = 'Fig2_frap_stand_age_tree_shrub_ET.png', height=15, width= 20, units = 'cm', dpi=900)
#Figure 4 of Dead Trees per acre separated by fire years with time series
p1a <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(tpa_max.mean = mean(tpa_max), tpa_max.n = n()),
mapping = aes(x = date, y = tpa_max.mean, color = fire.type.bin, linetype = treatment),
size = 1
) +
#Dead Trees 95% CI
geom_ribbon(data = pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(tpa_max.mean = mean(tpa_max),
tpa_max.sd = sd(tpa_max), tpa_max.n = n()),
mapping = aes(ymin=tpa_max.mean - 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
ymax=tpa_max.mean + 1.96*(tpa_max.sd / sqrt(tpa_max.n)),
x = date, fill = fire.type.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment', labels = c('Unburned', 'Burned')) +
scale_alpha_discrete(range = c(0.3, 0.3)) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
#Do the faceting
facet_grid(. ~ fire.type.bin) +
theme(axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12),
axis.title.x = element_blank(), legend.position = c(0.15, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(), panel.spacing = unit(20, "pt"),
legend.title = element_text(size = 10), legend.text = element_text(size = 8),
strip.text = element_text(size = 12)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-01-01'),as.Date('2020-01-01')) +
ylab(expression(atop('Dieback Severity', '(trees ha'^-1*')'))) + xlab('Year')
p1a
#Create the
p1b <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # & stratlayer %in% strat.list & stratlayer %in% strat.list
group_by(date, treatment, fire.type.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover), Tree_Cover.n = n()),
# filter(if_else(treatment == '1980-2010', Tree_Cover.n >= 2500, Tree_Cover.n >= 0)),
mapping = aes(x = date, y = Tree_Cover.mean, color = fire.type.bin, linetype = treatment),
size = 1) +
#Tree Cover 95% CI
geom_ribbon(data = pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(Tree_Cover.mean = mean(Tree_Cover),
Tree_Cover.sd = sd(Tree_Cover), Tree_Cover.n = n()),
# filter(if_else(treatment == '1980-2010', Tree_Cover.n >= 2500, Tree_Cover.n >= 0)),
mapping = aes(ymin=Tree_Cover.mean - 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
ymax=Tree_Cover.mean + 1.96*(Tree_Cover.sd / sqrt(Tree_Cover.n)),
x = date, fill = fire.type.bin, alpha = treatment)) +
#Do the Formatting
scale_linetype(name = 'Treatment') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
#Do the faceting
facet_grid(. ~ fire.type.bin) +
theme(axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12),
axis.title.x = element_blank(), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(), panel.spacing = unit(20, "pt"),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-01-01'),as.Date('2020-01-01')) + #facet_grid(. ~ treatment) +
ylim(18, 55) +
ylab(expression(atop('Tree Cover', '(%)'))) + xlab('Year') #+ facet_wrap(. ~ fire_type_last, labeller = as_labeller(c('1' = 'Wild', '2' = 'Prescribed')))
p1b
p1c <- ggplot() +
# geom_line(mapping = aes(group = .geo), color = 'dark gray', size = 0.2, alpha = 0.2) +
geom_hline(yintercept = 0) + #geom_vline(xintercept = 0, linetype = 'dashed') +
geom_line(data = pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
group_by(date, treatment, fire.type.bin) %>%
summarize(PrET.mean = mean(PrET), PrET.n = n(), count = n()),
mapping = aes(x = date, y = PrET.mean, color = fire.type.bin, linetype = treatment),
size = 1) +
#Water Stress 95% CI
geom_ribbon(data = pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
group_by(date, treatment, fire.type.bin) %>%
summarize(PrET.mean = mean(PrET),
PrET.sd = sd(PrET), PrET.n = n(), count = n()),
mapping = aes(ymin=PrET.mean - 1.96*(PrET.sd / sqrt(PrET.n)),
ymax=PrET.mean + 1.96*(PrET.sd / sqrt(PrET.n)),
x = date, fill = fire.type.bin, alpha = treatment)) +
#Do the Formatting
scale_linetype(name = 'Treatment') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
#Do the faceting
facet_grid(. ~ fire.type.bin) +
theme(axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 10), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA),  axis.text.x = element_text(size = 8),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-01-01'),as.Date('2020-01-01')) + #facet_grid(. ~ treatment) +
ylab(expression(atop('Pr-ET', '(mm yr'^-1*')'))) + xlab('Year')
p1c
f2 <- ggarrange(p1a, p1b, p1c, ncol = 1, nrow = 3, common.legend = FALSE, heights = c(1, 0.9, 1.1), align = "v", labels = c('a', 'b', 'c'))
f2
#Save the figure
ggsave(filename = 'Fig4_frap_rx_dieoff_tree_cover_stand_age_time_series.png', height=12, width= 12, units = 'cm', dpi=900)
#Figure S1: Precip, Water Stress time series figure
p3a <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
# filter(case_when(fire.type.bin == 'Wildfire' ~ stratlayer %in% frap.strat,
#                  fire.type.bin == 'Rxfire' ~ stratlayer %in% rx.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(ppt.mean = mean(ppt), ppt.n = n(), count = n()),
mapping = aes(x = date, y = ppt.mean, color = fire.type.bin, linetype = treatment),
size = 1) +
#AET 95% CI
geom_ribbon(data = pixel.sample %>%
filter(fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
# filter(case_when(fire.type.bin == 'Wildfire' ~ stratlayer %in% frap.strat,
#                  fire.type.bin == 'Rxfire' ~ stratlayer %in% rx.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(ppt.mean = mean(ppt),
ppt.sd = sd(ppt), ppt.n = n(), count = n()),
mapping = aes(ymin=ppt.mean - 1.96*(ppt.sd / sqrt(ppt.n)),
ymax=ppt.mean + 1.96*(ppt.sd / sqrt(ppt.n)),
x = date, fill = fire.type.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
#Do the faceting
facet_grid(. ~ fire.type.bin) +
theme(axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12),
axis.title.x = element_blank(), legend.position = c(0.2, 0.6), legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_blank(),
legend.title = element_text(size = 8), legend.text = element_text(size = 6)) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-01-01'),as.Date('2020-01-01')) + #facet_grid(. ~ fire.year.bin) +
ylab(expression('Precip (mm yr'^-1*')')) + xlab('Year')
p3a
p3b <- ggplot() +
geom_hline(yintercept = 0) +
geom_line(data = pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
# filter(case_when(fire.type.bin == 'Wildfire' ~ stratlayer %in% frap.strat,
#                  fire.type.bin == 'Rxfire' ~ stratlayer %in% rx.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(AET.mean = mean(AET), AET.n = n(), count = n()),
mapping = aes(x = date, y = AET.mean, color = fire.type.bin, linetype = treatment),
size = 1) +
#AET 95% CI
geom_ribbon(data = pixel.sample %>%
filter(!is.na(tpa_max) & fire.year <= 2010 & fire.year > 1986 & (fire_year_2019 <= 2010 | is.na(fire_year_2019))) %>% # &
# filter(case_when(fire.type.bin == 'Wildfire' ~ stratlayer %in% frap.strat,
#                  fire.type.bin == 'Rxfire' ~ stratlayer %in% rx.strat)) %>%
# filter(lf_evt_2001 %in% c(2031, 2173, 2027, 2019, 2032, 2033, 2172, 2053)) %>%
# elevation <= elev.upper & clm_precip_sum_mean >= ppt.lower &
# if_else(treatment == 'Wildfire', fire.year == fire_year_2019_mode, is.na(fire_year_2019_mode))) %>%
group_by(date, treatment, fire.type.bin) %>%
summarize(AET.mean = mean(AET),
AET.sd = sd(AET), AET.n = n(), count = n()),
mapping = aes(ymin=AET.mean - 1.96*(AET.sd / sqrt(AET.n)),
ymax=AET.mean + 1.96*(AET.sd / sqrt(AET.n)),
x = date, fill = fire.type.bin, alpha = treatment)) +
#Do the Formating
scale_linetype(name = 'Treatment') +
scale_alpha_discrete(range = c(0.3, 0.3)) +
scale_color_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
guides(color = 'none', linetype = guide_legend(), fill = 'none', alpha = 'none') +
#Pick the plot theme
theme_bw() +
#Do the faceting
facet_grid(. ~ fire.type.bin) +
theme(axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12),
axis.title.x = element_text(size = 12), legend.position = "none", legend.background = element_rect(colour = NA, fill = NA),
legend.key = element_rect(fill = NA), axis.text.x = element_text(size = 10), panel.spacing = unit(20, "pt"),
legend.title = element_text(size = 8), legend.text = element_text(size = 6),
# strip.position = 'none',
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_rect(data = data.frame(xmin = as.Date('2011-10-01'), xmax = as.Date('2015-09-30'), ymin = -Inf, ymax = Inf),
fill = "red", alpha = 0.3, mapping = aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)) +
xlim(as.Date('2010-01-01'),as.Date('2020-01-01')) + ylim(325, 650) +
#facet_grid(. ~ fire.year.bin) +
ylab(expression('ET (mm yr'^-1*')')) + xlab('Year')
p3b
f3 <- ggarrange(p3a, p3b, ncol = 1, nrow = 2, common.legend = FALSE, heights = c(0.9, 1), align = "v", labels = c('a', 'b'))
f3
# #Save the data
ggsave(filename = 'FigS1_frap_rx_water_fluxes_time_series.png', height=12, width= 18, units = 'cm', dpi=900)
#Create Table 1 for the manuscript and Table S1 for the supplement
#Create Bar Chart as a Potential Alternative to Table 1
p7a <- ggbarplot(pixel.filter,
y = "ADS", position = position_dodge(), facet.by = "fire.type.bin", fill = "fire.type.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.text.x = element_text(size = 12, face = 'bold')) +
# labs(tag = 'a') +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.77,
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Dieback Severity','(trees ha'^-1*')')))
p7a
p7b <- ggbarplot(pixel.filter,
y = "dTree", position = position_dodge(), facet.by = "fire.type.bin", fill = "fire.type.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.52,
method = "tukey_hsd", label = "p.format"
) +
scale_y_reverse(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Dieback Severity', '('*Delta*'Tree %)')))
p7b
p7c <- ggbarplot(pixel.filter,
y = "Tree_Cover", position = position_dodge(), facet.by = "fire.type.bin", fill = "fire.type.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.44,
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Pre-Drought','Tree Cover (%)')))
p7c
p7d <- ggbarplot(pixel.filter,
y = "ET", position = position_dodge(), facet.by = "fire.type.bin", fill = "fire.type.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.34,
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Pre-Drought','ET (mm yr'^-1*')'))) + xlab('Treatment') +
scale_x_discrete(labels = c("Unburned", "Burned")) #+
p7d
p7e <- ggbarplot(pixel.filter,
y = "PrET_4yr", position = position_dodge(), facet.by = "fire.type.bin", fill = "fire.type.bin", x = 'treatment',
add = "mean_ci" , error.plot = "errorbar", alpha = 0.8, width = 0.5,
xlab = NULL, #order = c("1999-2002", "2012-2015")
) +
theme_bw() + guides(color = 'none') +
scale_color_manual(values = c("black", "black"),
aesthetics = "color") + #labs(tag = 'b)') +
scale_fill_brewer(type = 'qual', palette = 'Set2', name = 'Fire Type', direction = 1) +
theme(legend.background = element_rect(colour = NA, fill = NA), legend.justification = c(1, 0),
legend.position = 'none', legend.text = element_text(size = 6, angle = 45), legend.title = element_text(size = 8),
legend.direction = "vertical", axis.text.x = element_text(size = 10), axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12), plot.margin = unit(c(0,0,2.5,5), "pt"),
panel.spacing = unit(20, "pt"), #plot.tag.position = c(0.53, 0.96), #c(0.52, 0.96)
plot.tag = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.x = element_blank()) +
geom_pwc(
tip.length = 0, bracket.nudge.y = -0.54,
method = "tukey_hsd", label = "p.format"
) +
scale_y_continuous(expand = expansion(mult = c(0.05, 0.15))) +
ylab(expression(atop('Pr-ET', '(mm 4yr'^-1*')'))) + xlab('Treatment') +
scale_x_discrete(labels = c("Unburned", "Burned")) #+
p7e
f7 <- (p7a / p7b / p7c / p7d / p7e) + plot_annotation(tag_levels = 'a')
f7
ggsave(filename = 'Fig5_frap_rx_comparison_barchart.png', height=20, width= 12, units = 'cm', dpi=900)
#Calculate the sample sizes for the treatment and controls
pixel.filter %>% group_by(treatment, fire.type.bin) %>%
summarize(count = n())
aov.dTree.rxfrap <- aov(dTree ~ treatment * fire.type.bin, data = pixel.filter)
summary(aov.dTree.rxfrap)
aov.ADS.rxfrap <- aov(ADS ~ treatment * fire.type.bin, data = pixel.filter)
summary(aov.ADS.rxfrap)
aov.PrET4yr.rxfrap <- aov(PrET_4yr ~ treatment * fire.type.bin, data = pixel.filter)
summary(aov.PrET4yr.rxfrap)
aov.tree.rxfrap <- aov(Tree_Cover ~ treatment * fire.type.bin, data = pixel.filter)
summary(aov.tree.rxfrap)
aov.ET.rxfrap <- aov(ET ~ treatment * fire.type.bin, data = pixel.filter)
summary(aov.tree.rxfrap)
tukey.dTree.rxfrap <- TukeyHSD(aov.dTree.rxfrap)
print(tukey.dTree.rxfrap)
tukey.ADS.rxfrap <- TukeyHSD(aov.ADS.rxfrap)
print(tukey.ADS.rxfrap)
tukey.PrET4yr.rxfrap <- TukeyHSD(aov.PrET4yr.rxfrap)
print(tukey.PrET4yr.rxfrap)
tukey.tree.rxfrap <- TukeyHSD(aov.tree.rxfrap)
print(tukey.tree.rxfrap)
tukey.ET.rxfrap <- TukeyHSD(aov.ET.rxfrap)
print(tukey.ET.rxfrap)
#Combine the tukey tests together
rxfrap.tHSD <- list(tukey.ADS.rxfrap, tukey.dTree.rxfrap,
tukey.tree.rxfrap, tukey.ET.rxfrap, tukey.PrET4yr.rxfrap)
#Combine the t-test results in a data frame
df.rxfrap.tHSD <- as.data.frame(purrr::map_df(rxfrap.tHSD, tidy))
rxfrap.tHSD.filter <- df.rxfrap.tHSD %>% filter(contrast %in% c('Disturb:Rxfire-Control:Rxfire', 'Disturb:Wildfire-Control:Wildfire'))
#Add a variable label column
rxfrap.tHSD.filter$variable = c('Dieback (trees ha<sup>-1</sup>)','Dieback (trees ha<sup>-1</sup>)',
'Dieback (% Tree Cover)', 'Dieback (% Tree Cover)',
'Pre-Drought Tree Cover (%)','Pre-Drought Tree Cover (%)',
'Pre-Drought ET (mm yr<sup>-1</sup>)','Pre-Drought ET (mm yr<sup>-1</sup>)',
'Pr-ET (mm 4yr<sup>-1</sup>)','Pr-ET (mm 4yr<sup>-1</sup>)')
rxfrap.tHSD.filter$fire.type = c('Prescribed Fire', 'Wild Fire',
'Prescribed Fire', 'Wild Fire',
'Prescribed Fire', 'Wild Fire',
'Prescribed Fire', 'Wild Fire',
'Prescribed Fire', 'Wild Fire')
#Add mean values for Estimate 1
rxfrap.tHSD.filter$estimate.1 <- c(
#Dieback (ADS)
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire'))$ADS, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire'))$ADS, na.rm = T),
#Dieback (dTree)
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire'))$dTree, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire'))$dTree, na.rm = T),
#Tree Cover
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire'))$Tree_Cover, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire'))$Tree_Cover, na.rm = T),
#ET
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire'))$ET, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire'))$ET, na.rm = T),
#Pr-ET 4yr
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Rxfire'))$PrET_4yr, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Disturb' & fire.type.bin == 'Wildfire'))$PrET_4yr, na.rm = T)
)
#Add mean values for Estimate 2
rxfrap.tHSD.filter$estimate.2 <- c(
#Dieback (ADS)
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire'))$ADS, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Wildfire'))$ADS, na.rm = T),
#Dieback (dTree)
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire'))$dTree, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Wildfire'))$dTree, na.rm = T),
#Tree Cover
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire'))$Tree_Cover, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Wildfire'))$Tree_Cover, na.rm = T),
#ET
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire'))$ET, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Wildfire'))$ET, na.rm = T),
#Pr-ET 4yr
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Rxfire'))$PrET_4yr, na.rm = T),
mean((pixel.filter %>% filter(treatment == 'Control' & fire.type.bin == 'Wildfire'))$PrET_4yr, na.rm = T)
)
#Calculate proportion differences from Tukey HSD tests
rxfrap.tHSD.filter$diff.pct <- rxfrap.tHSD.filter$estimate / rxfrap.tHSD.filter$estimate.2 * 100
rxfrap.tHSD.filter$low.pct <- rxfrap.tHSD.filter$conf.low / rxfrap.tHSD.filter$estimate.2 * 100
rxfrap.tHSD.filter$high.pct <- rxfrap.tHSD.filter$conf.high / rxfrap.tHSD.filter$estimate.2 * 100
#Select and sort the tukey HSD columns and
# rxfrap.tHSD.filter.tab <- rxfrap.tHSD.filter %>% dplyr::select(variable, fire.type,
#                                                                diff.pct, high.pct, low.pct, adj.p.value)
#
# #Name the columns of the data frame
# colnames(rxfrap.tHSD.filter.tab) <- c('Variable', 'Fire Severity', 'Difference (%)', 'Low 95% CI', 'High 95% CI', 'p-value')
#
# #ANOVA and Tukey HSD comparing by time period and drought sequence, same as Table S2 plus % changes
# tb1 <- kbl(rxfrap.tHSD.filter.tab, format = 'html', caption = "Tukey HSD Comparisons between Fire Type Groups", digits = c(0,0,1,1,1,3), escape = F) %>% kable_classic_2(font_size = 14, full_width = F)
# as_image(x = tb1, width = 10, file = "Table1_fire_type_tHSD_test_results_with_pct.png", zoom = 5.0)
#Select and sort the tukey HSD columns and
rxfrap.tHSD.filter.sup <- rxfrap.tHSD.filter %>% dplyr::select(variable, fire.type, estimate.1, estimate.2, estimate, conf.low, conf.high,
diff.pct, high.pct, low.pct, adj.p.value)
#Name the columns of the data frame
colnames(rxfrap.tHSD.filter.sup) <- c('Variable', 'Fire Severity', 'Disturb Estimate', 'Control Estimate','Difference', 'Low 95% CI', 'High 95% CI', 'Difference (%)', 'Low (%)', 'High (%)', 'p-value')
ncol(rxfrap.tHSD.filter.sup)
#ANOVA and Tukey HSD comparing by time period and drought sequence, same as Table S2 plus % changes
print(rxfrap.tHSD.filter.sup)
tb2 <- kbl(rxfrap.tHSD.filter.sup, format = 'html', caption = "Tukey HSD Comparisons between Fire Type Groups", digits = c(0,0,1,1,1,1,1,1,1,1,3), escape = F) %>% kable_classic_2(font_size = 14, full_width = F)
tb2
#The as_image command isn't working any more
#Saved with the viewer window
# as_image(x = tb2, width = 10, file = "TableS1_fire_type_tHSD_test_results_with_pct_v2.png", zoom = 5.0)
save_kable(x = tb2, file = "TableS1_fire_type_tHSD_test_results_with_pct_v2.png", density = 300)
webshot::webshot("my_latex_table.html", file = "my_latex_table.png",
selector = ".lightable-classic", expand = 20)
webshot::install_phantomjs()
#The as_image command isn't working any more
#Saved with the viewer window
# as_image(x = tb2, width = 10, file = "TableS1_fire_type_tHSD_test_results_with_pct_v2.png", zoom = 5.0)
save_kable(x = tb2, file = "TableS1_fire_type_tHSD_test_results_with_pct_v2.png", density = 300)
#The as_image command isn't working any more
#Saved with the viewer window
as_image(x = tb2, width = 10, file = "TableS1_fire_type_tHSD_test_results_with_pct_v2.png", zoom = 5.0)
tb2
utils::packageVersion("webshot2")
devtools::install_github("rstudio/webshot2")
devtools
remotes::install_github("rstudio/webshot2")
library(devtools)
install.packages('devtools',repo='https://cran.r-project.org/')
devtools::install_github("rstudio/webshot2")
p <- c('ggpubr', 'viridis', 'tidyr', 'dplyr', 'ggmap', 'ggplot2', 'magrittr',
'sf', 'ncdf4', 'gtools', 'tigris', 'patchwork', 'ggpubr', 'ggnewscale', 'segmented',
'rlist', 'ggspatial', 'svglite', 'mgcv', 'zoo', 'purrr', 'webshot2', 'stargazer', 'kableExtra',
'broom', 'svglite','sjPlot','purrr', 'sjmisc', 'magick', 'magrittr', 'knitr', 'xtable', 'tidymodels', 'vip')
# install.packages('magick',repo='https://cran.r-project.org/')
install.packages('devtools',repo='https://cran.r-project.org/')
lapply(p,require,character.only=TRUE)
# library(magick)
#Set the working directory
#Home data directory
setwd('C:/Users/can02/mystuff/fireDieoff/final_figures/30m_test')
dir_in <- "D:\\Fire_Dieoff"
# fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Lab data directory
# setwd('C:/Users/Carl/mystuff/fireDieoff/final_figures')
# dir_in <- "C:\\Users\\Carl\\mystuff\\Large_Files\\Fire_Dieoff"
# fire_in <- "D:\\Large_Files\\Fire_Dieoff"
#Add the Wildfire data
frap.fire.data <- read.csv(file.path(dir_in, "fire_south_sierra_FRAP_wildfire_300pt_5_fire_year_10tree_ts4_30m_20231204.csv"), header = TRUE, na.strings = "NaN")
